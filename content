backend/gii/crud/easyui/Generator.php:        $tableSchema = $this->getTableSchema();
backend/gii/crud/easyui/Generator.php:        $tableSchema = $this->getTableSchema();
backend/gii/crud/krajee/backend/search.php:        $this->load($params);
backend/gii/crud/krajee/backend/search.php:        if (!$this->validate()) {
backend/themes/adminlte/views/site/error.php:$this->title = $name;
backend/themes/adminlte/views/site/error.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/adminlte/views/admin-menu/view.php:$this->title = $model->name;
backend/themes/adminlte/views/admin-menu/view.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/adminlte/views/admin-menu/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/adminlte/views/admin-menu/view.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/adminlte/views/admin-menu/tree-view/_form.php:    return $this->render($nodeAddlViews[$part], $p);
backend/themes/adminlte/views/admin-menu/create.php:$this->title = Yii::t('app', 'Create Admin Menu');
backend/themes/adminlte/views/admin-menu/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/adminlte/views/admin-menu/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/adminlte/views/admin-menu/create.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/adminlte/views/admin-menu/create.php:    <?= $this->render('_form', [
backend/themes/adminlte/views/admin-menu/index.php:$this->title = Yii::t('app', 'Admin Menus');
backend/themes/adminlte/views/admin-menu/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/adminlte/views/admin-menu/index.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/adminlte/views/admin-menu/index.php:    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>
backend/themes/adminlte/views/admin-menu/update.php:$this->title = Yii::t('app', 'Update {modelClass}: ', [
backend/themes/adminlte/views/admin-menu/update.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/adminlte/views/admin-menu/update.php:$this->params['breadcrumbs'][] = ['label' => $model->name, 'url' => ['view', 'id' => $model->id]];
backend/themes/adminlte/views/admin-menu/update.php:$this->params['breadcrumbs'][] = Yii::t('app', 'Update');
backend/themes/adminlte/views/admin-menu/update.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/adminlte/views/admin-menu/update.php:    <?= $this->render('_form', [
tests/codeception/frontend/_pages/SignupPage.php:            $this->actor->fillField($inputType . '[name="SignupForm[' . $field . ']"]', $value);
tests/codeception/frontend/_pages/SignupPage.php:        $this->actor->click('signup-button');
tests/codeception/frontend/_pages/ContactPage.php:            $this->actor->fillField($inputType . '[name="ContactForm[' . $field . ']"]', $value);
tests/codeception/frontend/_pages/ContactPage.php:        $this->actor->click('contact-button');
backend/assets/static/charisma/bower_components/moment/min/moment.min.js:(function(a){function b(a,b,c){switch(arguments.length){case 2:return null!=a?a:b;case 3:return null!=a?a:null!=b?b:c;default:throw new Error("Implement me")}}function c(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function d(a,b){function c(){mb.suppressDeprecationWarnings===!1&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+a)}var d=!0;return j(function(){return d&&(c(),d=!1),b.apply(this,arguments)},b)}function e(a,b){return function(c){return m(a.call(this,c),b)}}function f(a,b){return function(c){return this.lang().ordinal(a.call(this,c),b)}}function g(){}function h(a){z(a),j(this,a)}function i(a){var b=s(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;this._milliseconds=+k+1e3*j+6e4*i+36e5*h,this._days=+g+7*f,this._months=+e+3*d+12*c,this._data={},this._bubble()}function j(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return b.hasOwnProperty("toString")&&(a.toString=b.toString),b.hasOwnProperty("valueOf")&&(a.valueOf=b.valueOf),a}function k(a){var b,c={};for(b in a)a.hasOwnProperty(b)&&Ab.hasOwnProperty(b)&&(c[b]=a[b]);return c}function l(a){return 0>a?Math.ceil(a):Math.floor(a)}function m(a,b,c){for(var d=""+Math.abs(a),e=a>=0;d.length<b;)d="0"+d;return(e?c?"+":"":"-")+d}function n(a,b,c,d){var e=b._milliseconds,f=b._days,g=b._months;d=null==d?!0:d,e&&a._d.setTime(+a._d+e*c),f&&hb(a,"Date",gb(a,"Date")+f*c),g&&fb(a,gb(a,"Month")+g*c),d&&mb.updateOffset(a,f||g)}function o(a){return"[object Array]"===Object.prototype.toString.call(a)}function p(a){return"[object Date]"===Object.prototype.toString.call(a)||a instanceof Date}function q(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e>d;d++)(c&&a[d]!==b[d]||!c&&u(a[d])!==u(b[d]))&&g++;return g+f}function r(a){if(a){var b=a.toLowerCase().replace(/(.)s$/,"$1");a=bc[a]||cc[b]||b}return a}function s(a){var b,c,d={};for(c in a)a.hasOwnProperty(c)&&(b=r(c),b&&(d[b]=a[c]));return d}function t(b){var c,d;if(0===b.indexOf("week"))c=7,d="day";else{if(0!==b.indexOf("month"))return;c=12,d="month"}mb[b]=function(e,f){var g,h,i=mb.fn._lang[b],j=[];if("number"==typeof e&&(f=e,e=a),h=function(a){var b=mb().utc().set(d,a);return i.call(mb.fn._lang,b,e||"")},null!=f)return h(f);for(g=0;c>g;g++)j.push(h(g));return j}}function u(a){var b=+a,c=0;return 0!==b&&isFinite(b)&&(c=b>=0?Math.floor(b):Math.ceil(b)),c}function v(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function w(a,b,c){return bb(mb([a,11,31+b-c]),b,c).week}function x(a){return y(a)?366:365}function y(a){return a%4===0&&a%100!==0||a%400===0}function z(a){var b;a._a&&-2===a._pf.overflow&&(b=a._a[tb]<0||a._a[tb]>11?tb:a._a[ub]<1||a._a[ub]>v(a._a[sb],a._a[tb])?ub:a._a[vb]<0||a._a[vb]>23?vb:a._a[wb]<0||a._a[wb]>59?wb:a._a[xb]<0||a._a[xb]>59?xb:a._a[yb]<0||a._a[yb]>999?yb:-1,a._pf._overflowDayOfYear&&(sb>b||b>ub)&&(b=ub),a._pf.overflow=b)}function A(a){return null==a._isValid&&(a._isValid=!isNaN(a._d.getTime())&&a._pf.overflow<0&&!a._pf.empty&&!a._pf.invalidMonth&&!a._pf.nullInput&&!a._pf.invalidFormat&&!a._pf.userInvalidated,a._strict&&(a._isValid=a._isValid&&0===a._pf.charsLeftOver&&0===a._pf.unusedTokens.length)),a._isValid}function B(a){return a?a.toLowerCase().replace("_","-"):a}function C(a,b){return b._isUTC?mb(a).zone(b._offset||0):mb(a).local()}function D(a,b){return b.abbr=a,zb[a]||(zb[a]=new g),zb[a].set(b),zb[a]}function E(a){delete zb[a]}function F(a){var b,c,d,e,f=0,g=function(a){if(!zb[a]&&Bb)try{require("./lang/"+a)}catch(b){}return zb[a]};if(!a)return mb.fn._lang;if(!o(a)){if(c=g(a))return c;a=[a]}for(;f<a.length;){for(e=B(a[f]).split("-"),b=e.length,d=B(a[f+1]),d=d?d.split("-"):null;b>0;){if(c=g(e.slice(0,b).join("-")))return c;if(d&&d.length>=b&&q(e,d,!0)>=b-1)break;b--}f++}return mb.fn._lang}function G(a){return a.match(/\[[\s\S]/)?a.replace(/^\[|\]$/g,""):a.replace(/\\/g,"")}function H(a){var b,c,d=a.match(Fb);for(b=0,c=d.length;c>b;b++)d[b]=hc[d[b]]?hc[d[b]]:G(d[b]);return function(e){var f="";for(b=0;c>b;b++)f+=d[b]instanceof Function?d[b].call(e,a):d[b];return f}}function I(a,b){return a.isValid()?(b=J(b,a.lang()),dc[b]||(dc[b]=H(b)),dc[b](a)):a.lang().invalidDate()}function J(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Gb.lastIndex=0;d>=0&&Gb.test(a);)a=a.replace(Gb,c),Gb.lastIndex=0,d-=1;return a}function K(a,b){var c,d=b._strict;switch(a){case"Q":return Rb;case"DDDD":return Tb;case"YYYY":case"GGGG":case"gggg":return d?Ub:Jb;case"Y":case"G":case"g":return Wb;case"YYYYYY":case"YYYYY":case"GGGGG":case"ggggg":return d?Vb:Kb;case"S":if(d)return Rb;case"SS":if(d)return Sb;case"SSS":if(d)return Tb;case"DDD":return Ib;case"MMM":case"MMMM":case"dd":case"ddd":case"dddd":return Mb;case"a":case"A":return F(b._l)._meridiemParse;case"X":return Pb;case"Z":case"ZZ":return Nb;case"T":return Ob;case"SSSS":return Lb;case"MM":case"DD":case"YY":case"GG":case"gg":case"HH":case"hh":case"mm":case"ss":case"ww":case"WW":return d?Sb:Hb;case"M":case"D":case"d":case"H":case"h":case"m":case"s":case"w":case"W":case"e":case"E":return Hb;case"Do":return Qb;default:return c=new RegExp(T(S(a.replace("\\","")),"i"))}}function L(a){a=a||"";var b=a.match(Nb)||[],c=b[b.length-1]||[],d=(c+"").match(_b)||["-",0,0],e=+(60*d[1])+u(d[2]);return"+"===d[0]?-e:e}function M(a,b,c){var d,e=c._a;switch(a){case"Q":null!=b&&(e[tb]=3*(u(b)-1));break;case"M":case"MM":null!=b&&(e[tb]=u(b)-1);break;case"MMM":case"MMMM":d=F(c._l).monthsParse(b),null!=d?e[tb]=d:c._pf.invalidMonth=b;break;case"D":case"DD":null!=b&&(e[ub]=u(b));break;case"Do":null!=b&&(e[ub]=u(parseInt(b,10)));break;case"DDD":case"DDDD":null!=b&&(c._dayOfYear=u(b));break;case"YY":e[sb]=mb.parseTwoDigitYear(b);break;case"YYYY":case"YYYYY":case"YYYYYY":e[sb]=u(b);break;case"a":case"A":c._isPm=F(c._l).isPM(b);break;case"H":case"HH":case"h":case"hh":e[vb]=u(b);break;case"m":case"mm":e[wb]=u(b);break;case"s":case"ss":e[xb]=u(b);break;case"S":case"SS":case"SSS":case"SSSS":e[yb]=u(1e3*("0."+b));break;case"X":c._d=new Date(1e3*parseFloat(b));break;case"Z":case"ZZ":c._useUTC=!0,c._tzm=L(b);break;case"dd":case"ddd":case"dddd":d=F(c._l).weekdaysParse(b),null!=d?(c._w=c._w||{},c._w.d=d):c._pf.invalidWeekday=b;break;case"w":case"ww":case"W":case"WW":case"d":case"e":case"E":a=a.substr(0,1);case"gggg":case"GGGG":case"GGGGG":a=a.substr(0,2),b&&(c._w=c._w||{},c._w[a]=u(b));break;case"gg":case"GG":c._w=c._w||{},c._w[a]=mb.parseTwoDigitYear(b)}}function N(a){var c,d,e,f,g,h,i,j;c=a._w,null!=c.GG||null!=c.W||null!=c.E?(g=1,h=4,d=b(c.GG,a._a[sb],bb(mb(),1,4).year),e=b(c.W,1),f=b(c.E,1)):(j=F(a._l),g=j._week.dow,h=j._week.doy,d=b(c.gg,a._a[sb],bb(mb(),g,h).year),e=b(c.w,1),null!=c.d?(f=c.d,g>f&&++e):f=null!=c.e?c.e+g:g),i=cb(d,e,f,h,g),a._a[sb]=i.year,a._dayOfYear=i.dayOfYear}function O(a){var c,d,e,f,g=[];if(!a._d){for(e=Q(a),a._w&&null==a._a[ub]&&null==a._a[tb]&&N(a),a._dayOfYear&&(f=b(a._a[sb],e[sb]),a._dayOfYear>x(f)&&(a._pf._overflowDayOfYear=!0),d=Z(f,0,a._dayOfYear),a._a[tb]=d.getUTCMonth(),a._a[ub]=d.getUTCDate()),c=0;3>c&&null==a._a[c];++c)a._a[c]=g[c]=e[c];for(;7>c;c++)a._a[c]=g[c]=null==a._a[c]?2===c?1:0:a._a[c];a._d=(a._useUTC?Z:Y).apply(null,g),null!=a._tzm&&a._d.setUTCMinutes(a._d.getUTCMinutes()+a._tzm)}}function P(a){var b;a._d||(b=s(a._i),a._a=[b.year,b.month,b.day,b.hour,b.minute,b.second,b.millisecond],O(a))}function Q(a){var b=new Date;return a._useUTC?[b.getUTCFullYear(),b.getUTCMonth(),b.getUTCDate()]:[b.getFullYear(),b.getMonth(),b.getDate()]}function R(a){if(a._f===mb.ISO_8601)return void V(a);a._a=[],a._pf.empty=!0;var b,c,d,e,f,g=F(a._l),h=""+a._i,i=h.length,j=0;for(d=J(a._f,g).match(Fb)||[],b=0;b<d.length;b++)e=d[b],c=(h.match(K(e,a))||[])[0],c&&(f=h.substr(0,h.indexOf(c)),f.length>0&&a._pf.unusedInput.push(f),h=h.slice(h.indexOf(c)+c.length),j+=c.length),hc[e]?(c?a._pf.empty=!1:a._pf.unusedTokens.push(e),M(e,c,a)):a._strict&&!c&&a._pf.unusedTokens.push(e);a._pf.charsLeftOver=i-j,h.length>0&&a._pf.unusedInput.push(h),a._isPm&&a._a[vb]<12&&(a._a[vb]+=12),a._isPm===!1&&12===a._a[vb]&&(a._a[vb]=0),O(a),z(a)}function S(a){return a.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(a,b,c,d,e){return b||c||d||e})}function T(a){return a.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function U(a){var b,d,e,f,g;if(0===a._f.length)return a._pf.invalidFormat=!0,void(a._d=new Date(0/0));for(f=0;f<a._f.length;f++)g=0,b=j({},a),b._pf=c(),b._f=a._f[f],R(b),A(b)&&(g+=b._pf.charsLeftOver,g+=10*b._pf.unusedTokens.length,b._pf.score=g,(null==e||e>g)&&(e=g,d=b));j(a,d||b)}function V(a){var b,c,d=a._i,e=Xb.exec(d);if(e){for(a._pf.iso=!0,b=0,c=Zb.length;c>b;b++)if(Zb[b][1].exec(d)){a._f=Zb[b][0]+(e[6]||" ");break}for(b=0,c=$b.length;c>b;b++)if($b[b][1].exec(d)){a._f+=$b[b][0];break}d.match(Nb)&&(a._f+="Z"),R(a)}else a._isValid=!1}function W(a){V(a),a._isValid===!1&&(delete a._isValid,mb.createFromInputFallback(a))}function X(b){var c=b._i,d=Cb.exec(c);c===a?b._d=new Date:d?b._d=new Date(+d[1]):"string"==typeof c?W(b):o(c)?(b._a=c.slice(0),O(b)):p(c)?b._d=new Date(+c):"object"==typeof c?P(b):"number"==typeof c?b._d=new Date(c):mb.createFromInputFallback(b)}function Y(a,b,c,d,e,f,g){var h=new Date(a,b,c,d,e,f,g);return 1970>a&&h.setFullYear(a),h}function Z(a){var b=new Date(Date.UTC.apply(null,arguments));return 1970>a&&b.setUTCFullYear(a),b}function $(a,b){if("string"==typeof a)if(isNaN(a)){if(a=b.weekdaysParse(a),"number"!=typeof a)return null}else a=parseInt(a,10);return a}function _(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function ab(a,b,c){var d=rb(Math.abs(a)/1e3),e=rb(d/60),f=rb(e/60),g=rb(f/24),h=rb(g/365),i=d<ec.s&&["s",d]||1===e&&["m"]||e<ec.m&&["mm",e]||1===f&&["h"]||f<ec.h&&["hh",f]||1===g&&["d"]||g<=ec.dd&&["dd",g]||g<=ec.dm&&["M"]||g<ec.dy&&["MM",rb(g/30)]||1===h&&["y"]||["yy",h];return i[2]=b,i[3]=a>0,i[4]=c,_.apply({},i)}function bb(a,b,c){var d,e=c-b,f=c-a.day();return f>e&&(f-=7),e-7>f&&(f+=7),d=mb(a).add("d",f),{week:Math.ceil(d.dayOfYear()/7),year:d.year()}}function cb(a,b,c,d,e){var f,g,h=Z(a,0,1).getUTCDay();return h=0===h?7:h,c=null!=c?c:e,f=e-h+(h>d?7:0)-(e>h?7:0),g=7*(b-1)+(c-e)+f+1,{year:g>0?a:a-1,dayOfYear:g>0?g:x(a-1)+g}}function db(b){var c=b._i,d=b._f;return null===c||d===a&&""===c?mb.invalid({nullInput:!0}):("string"==typeof c&&(b._i=c=F().preparse(c)),mb.isMoment(c)?(b=k(c),b._d=new Date(+c._d)):d?o(d)?U(b):R(b):X(b),new h(b))}function eb(a,b){var c,d;if(1===b.length&&o(b[0])&&(b=b[0]),!b.length)return mb();for(c=b[0],d=1;d<b.length;++d)b[d][a](c)&&(c=b[d]);return c}function fb(a,b){var c;return"string"==typeof b&&(b=a.lang().monthsParse(b),"number"!=typeof b)?a:(c=Math.min(a.date(),v(a.year(),b)),a._d["set"+(a._isUTC?"UTC":"")+"Month"](b,c),a)}function gb(a,b){return a._d["get"+(a._isUTC?"UTC":"")+b]()}function hb(a,b,c){return"Month"===b?fb(a,c):a._d["set"+(a._isUTC?"UTC":"")+b](c)}function ib(a,b){return function(c){return null!=c?(hb(this,a,c),mb.updateOffset(this,b),this):gb(this,a)}}function jb(a){mb.duration.fn[a]=function(){return this._data[a]}}function kb(a,b){mb.duration.fn["as"+a]=function(){return+this/b}}function lb(a){"undefined"==typeof ender&&(nb=qb.moment,qb.moment=a?d("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.",mb):mb)}for(var mb,nb,ob,pb="2.7.0",qb="undefined"!=typeof global?global:this,rb=Math.round,sb=0,tb=1,ub=2,vb=3,wb=4,xb=5,yb=6,zb={},Ab={_isAMomentObject:null,_i:null,_f:null,_l:null,_strict:null,_tzm:null,_isUTC:null,_offset:null,_pf:null,_lang:null},Bb="undefined"!=typeof module&&module.exports,Cb=/^\/?Date\((\-?\d+)/i,Db=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,Eb=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,Fb=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,Gb=/(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,Hb=/\d\d?/,Ib=/\d{1,3}/,Jb=/\d{1,4}/,Kb=/[+\-]?\d{1,6}/,Lb=/\d+/,Mb=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,Nb=/Z|[\+\-]\d\d:?\d\d/gi,Ob=/T/i,Pb=/[\+\-]?\d+(\.\d{1,3})?/,Qb=/\d{1,2}/,Rb=/\d/,Sb=/\d\d/,Tb=/\d{3}/,Ub=/\d{4}/,Vb=/[+-]?\d{6}/,Wb=/[+-]?\d+/,Xb=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Yb="YYYY-MM-DDTHH:mm:ssZ",Zb=[["YYYYYY-MM-DD",/[+-]\d{6}-\d{2}-\d{2}/],["YYYY-MM-DD",/\d{4}-\d{2}-\d{2}/],["GGGG-[W]WW-E",/\d{4}-W\d{2}-\d/],["GGGG-[W]WW",/\d{4}-W\d{2}/],["YYYY-DDD",/\d{4}-\d{3}/]],$b=[["HH:mm:ss.SSSS",/(T| )\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss",/(T| )\d\d:\d\d:\d\d/],["HH:mm",/(T| )\d\d:\d\d/],["HH",/(T| )\d\d/]],_b=/([\+\-]|\d\d)/gi,ac=("Date|Hours|Minutes|Seconds|Milliseconds".split("|"),{Milliseconds:1,Seconds:1e3,Minutes:6e4,Hours:36e5,Days:864e5,Months:2592e6,Years:31536e6}),bc={ms:"millisecond",s:"second",m:"minute",h:"hour",d:"day",D:"date",w:"week",W:"isoWeek",M:"month",Q:"quarter",y:"year",DDD:"dayOfYear",e:"weekday",E:"isoWeekday",gg:"weekYear",GG:"isoWeekYear"},cc={dayofyear:"dayOfYear",isoweekday:"isoWeekday",isoweek:"isoWeek",weekyear:"weekYear",isoweekyear:"isoWeekYear"},dc={},ec={s:45,m:45,h:22,dd:25,dm:45,dy:345},fc="DDD w W M D d".split(" "),gc="M D H h m s w W".split(" "),hc={M:function(){return this.month()+1},MMM:function(a){return this.lang().monthsShort(this,a)},MMMM:function(a){return this.lang().months(this,a)},D:function(){return this.date()},DDD:function(){return this.dayOfYear()},d:function(){return this.day()},dd:function(a){return this.lang().weekdaysMin(this,a)},ddd:function(a){return this.lang().weekdaysShort(this,a)},dddd:function(a){return this.lang().weekdays(this,a)},w:function(){return this.week()},W:function(){return this.isoWeek()},YY:function(){return m(this.year()%100,2)},YYYY:function(){return m(this.year(),4)},YYYYY:function(){return m(this.year(),5)},YYYYYY:function(){var a=this.year(),b=a>=0?"+":"-";return b+m(Math.abs(a),6)},gg:function(){return m(this.weekYear()%100,2)},gggg:function(){return m(this.weekYear(),4)},ggggg:function(){return m(this.weekYear(),5)},GG:function(){return m(this.isoWeekYear()%100,2)},GGGG:function(){return m(this.isoWeekYear(),4)},GGGGG:function(){return m(this.isoWeekYear(),5)},e:function(){return this.weekday()},E:function(){return this.isoWeekday()},a:function(){return this.lang().meridiem(this.hours(),this.minutes(),!0)},A:function(){return this.lang().meridiem(this.hours(),this.minutes(),!1)},H:function(){return this.hours()},h:function(){return this.hours()%12||12},m:function(){return this.minutes()},s:function(){return this.seconds()},S:function(){return u(this.milliseconds()/100)},SS:function(){return m(u(this.milliseconds()/10),2)},SSS:function(){return m(this.milliseconds(),3)},SSSS:function(){return m(this.milliseconds(),3)},Z:function(){var a=-this.zone(),b="+";return 0>a&&(a=-a,b="-"),b+m(u(a/60),2)+":"+m(u(a)%60,2)},ZZ:function(){var a=-this.zone(),b="+";return 0>a&&(a=-a,b="-"),b+m(u(a/60),2)+m(u(a)%60,2)},z:function(){return this.zoneAbbr()},zz:function(){return this.zoneName()},X:function(){return this.unix()},Q:function(){return this.quarter()}},ic=["months","monthsShort","weekdays","weekdaysShort","weekdaysMin"];fc.length;)ob=fc.pop(),hc[ob+"o"]=f(hc[ob],ob);for(;gc.length;)ob=gc.pop(),hc[ob+ob]=e(hc[ob],2);for(hc.DDDD=e(hc.DDD,3),j(g.prototype,{set:function(a){var b,c;for(c in a)b=a[c],"function"==typeof b?this[c]=b:this["_"+c]=b},_months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),months:function(a){return this._months[a.month()]},_monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),monthsShort:function(a){return this._monthsShort[a.month()]},monthsParse:function(a){var b,c,d;for(this._monthsParse||(this._monthsParse=[]),b=0;12>b;b++)if(this._monthsParse[b]||(c=mb.utc([2e3,b]),d="^"+this.months(c,"")+"|^"+this.monthsShort(c,""),this._monthsParse[b]=new RegExp(d.replace(".",""),"i")),this._monthsParse[b].test(a))return b},_weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdays:function(a){return this._weekdays[a.day()]},_weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysShort:function(a){return this._weekdaysShort[a.day()]},_weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),weekdaysMin:function(a){return this._weekdaysMin[a.day()]},weekdaysParse:function(a){var b,c,d;for(this._weekdaysParse||(this._weekdaysParse=[]),b=0;7>b;b++)if(this._weekdaysParse[b]||(c=mb([2e3,1]).day(b),d="^"+this.weekdays(c,"")+"|^"+this.weekdaysShort(c,"")+"|^"+this.weekdaysMin(c,""),this._weekdaysParse[b]=new RegExp(d.replace(".",""),"i")),this._weekdaysParse[b].test(a))return b},_longDateFormat:{LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D YYYY",LLL:"MMMM D YYYY LT",LLLL:"dddd, MMMM D YYYY LT"},longDateFormat:function(a){var b=this._longDateFormat[a];return!b&&this._longDateFormat[a.toUpperCase()]&&(b=this._longDateFormat[a.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a]=b),b},isPM:function(a){return"p"===(a+"").toLowerCase().charAt(0)},_meridiemParse:/[ap]\.?m?\.?/i,meridiem:function(a,b,c){return a>11?c?"pm":"PM":c?"am":"AM"},_calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},calendar:function(a,b){var c=this._calendar[a];return"function"==typeof c?c.apply(b):c},_relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},relativeTime:function(a,b,c,d){var e=this._relativeTime[c];return"function"==typeof e?e(a,b,c,d):e.replace(/%d/i,a)},pastFuture:function(a,b){var c=this._relativeTime[a>0?"future":"past"];return"function"==typeof c?c(b):c.replace(/%s/i,b)},ordinal:function(a){return this._ordinal.replace("%d",a)},_ordinal:"%d",preparse:function(a){return a},postformat:function(a){return a},week:function(a){return bb(a,this._week.dow,this._week.doy).week},_week:{dow:0,doy:6},_invalidDate:"Invalid date",invalidDate:function(){return this._invalidDate}}),mb=function(b,d,e,f){var g;return"boolean"==typeof e&&(f=e,e=a),g={},g._isAMomentObject=!0,g._i=b,g._f=d,g._l=e,g._strict=f,g._isUTC=!1,g._pf=c(),db(g)},mb.suppressDeprecationWarnings=!1,mb.createFromInputFallback=d("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",function(a){a._d=new Date(a._i)}),mb.min=function(){var a=[].slice.call(arguments,0);return eb("isBefore",a)},mb.max=function(){var a=[].slice.call(arguments,0);return eb("isAfter",a)},mb.utc=function(b,d,e,f){var g;return"boolean"==typeof e&&(f=e,e=a),g={},g._isAMomentObject=!0,g._useUTC=!0,g._isUTC=!0,g._l=e,g._i=b,g._f=d,g._strict=f,g._pf=c(),db(g).utc()},mb.unix=function(a){return mb(1e3*a)},mb.duration=function(a,b){var c,d,e,f=a,g=null;return mb.isDuration(a)?f={ms:a._milliseconds,d:a._days,M:a._months}:"number"==typeof a?(f={},b?f[b]=a:f.milliseconds=a):(g=Db.exec(a))?(c="-"===g[1]?-1:1,f={y:0,d:u(g[ub])*c,h:u(g[vb])*c,m:u(g[wb])*c,s:u(g[xb])*c,ms:u(g[yb])*c}):(g=Eb.exec(a))&&(c="-"===g[1]?-1:1,e=function(a){var b=a&&parseFloat(a.replace(",","."));return(isNaN(b)?0:b)*c},f={y:e(g[2]),M:e(g[3]),d:e(g[4]),h:e(g[5]),m:e(g[6]),s:e(g[7]),w:e(g[8])}),d=new i(f),mb.isDuration(a)&&a.hasOwnProperty("_lang")&&(d._lang=a._lang),d},mb.version=pb,mb.defaultFormat=Yb,mb.ISO_8601=function(){},mb.momentProperties=Ab,mb.updateOffset=function(){},mb.relativeTimeThreshold=function(b,c){return ec[b]===a?!1:(ec[b]=c,!0)},mb.lang=function(a,b){var c;return a?(b?D(B(a),b):null===b?(E(a),a="en"):zb[a]||F(a),c=mb.duration.fn._lang=mb.fn._lang=F(a),c._abbr):mb.fn._lang._abbr},mb.langData=function(a){return a&&a._lang&&a._lang._abbr&&(a=a._lang._abbr),F(a)},mb.isMoment=function(a){return a instanceof h||null!=a&&a.hasOwnProperty("_isAMomentObject")},mb.isDuration=function(a){return a instanceof i},ob=ic.length-1;ob>=0;--ob)t(ic[ob]);mb.normalizeUnits=function(a){return r(a)},mb.invalid=function(a){var b=mb.utc(0/0);return null!=a?j(b._pf,a):b._pf.userInvalidated=!0,b},mb.parseZone=function(){return mb.apply(null,arguments).parseZone()},mb.parseTwoDigitYear=function(a){return u(a)+(u(a)>68?1900:2e3)},j(mb.fn=h.prototype,{clone:function(){return mb(this)},valueOf:function(){return+this._d+6e4*(this._offset||0)},unix:function(){return Math.floor(+this/1e3)},toString:function(){return this.clone().lang("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},toDate:function(){return this._offset?new Date(+this):this._d},toISOString:function(){var a=mb(this).utc();return 0<a.year()&&a.year()<=9999?I(a,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):I(a,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")},toArray:function(){var a=this;return[a.year(),a.month(),a.date(),a.hours(),a.minutes(),a.seconds(),a.milliseconds()]},isValid:function(){return A(this)},isDSTShifted:function(){return this._a?this.isValid()&&q(this._a,(this._isUTC?mb.utc(this._a):mb(this._a)).toArray())>0:!1},parsingFlags:function(){return j({},this._pf)},invalidAt:function(){return this._pf.overflow},utc:function(){return this.zone(0)},local:function(){return this.zone(0),this._isUTC=!1,this},format:function(a){var b=I(this,a||mb.defaultFormat);return this.lang().postformat(b)},add:function(a,b){var c;return c="string"==typeof a&&"string"==typeof b?mb.duration(isNaN(+b)?+a:+b,isNaN(+b)?b:a):"string"==typeof a?mb.duration(+b,a):mb.duration(a,b),n(this,c,1),this},subtract:function(a,b){var c;return c="string"==typeof a&&"string"==typeof b?mb.duration(isNaN(+b)?+a:+b,isNaN(+b)?b:a):"string"==typeof a?mb.duration(+b,a):mb.duration(a,b),n(this,c,-1),this},diff:function(a,b,c){var d,e,f=C(a,this),g=6e4*(this.zone()-f.zone());return b=r(b),"year"===b||"month"===b?(d=432e5*(this.daysInMonth()+f.daysInMonth()),e=12*(this.year()-f.year())+(this.month()-f.month()),e+=(this-mb(this).startOf("month")-(f-mb(f).startOf("month")))/d,e-=6e4*(this.zone()-mb(this).startOf("month").zone()-(f.zone()-mb(f).startOf("month").zone()))/d,"year"===b&&(e/=12)):(d=this-f,e="second"===b?d/1e3:"minute"===b?d/6e4:"hour"===b?d/36e5:"day"===b?(d-g)/864e5:"week"===b?(d-g)/6048e5:d),c?e:l(e)},from:function(a,b){return mb.duration(this.diff(a)).lang(this.lang()._abbr).humanize(!b)},fromNow:function(a){return this.from(mb(),a)},calendar:function(a){var b=a||mb(),c=C(b,this).startOf("day"),d=this.diff(c,"days",!0),e=-6>d?"sameElse":-1>d?"lastWeek":0>d?"lastDay":1>d?"sameDay":2>d?"nextDay":7>d?"nextWeek":"sameElse";return this.format(this.lang().calendar(e,this))},isLeapYear:function(){return y(this.year())},isDST:function(){return this.zone()<this.clone().month(0).zone()||this.zone()<this.clone().month(5).zone()},day:function(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=$(a,this.lang()),this.add({d:a-b})):b},month:ib("Month",!0),startOf:function(a){switch(a=r(a)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===a?this.weekday(0):"isoWeek"===a&&this.isoWeekday(1),"quarter"===a&&this.month(3*Math.floor(this.month()/3)),this},endOf:function(a){return a=r(a),this.startOf(a).add("isoWeek"===a?"week":a,1).subtract("ms",1)},isAfter:function(a,b){return b="undefined"!=typeof b?b:"millisecond",+this.clone().startOf(b)>+mb(a).startOf(b)},isBefore:function(a,b){return b="undefined"!=typeof b?b:"millisecond",+this.clone().startOf(b)<+mb(a).startOf(b)},isSame:function(a,b){return b=b||"ms",+this.clone().startOf(b)===+C(a,this).startOf(b)},min:d("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",function(a){return a=mb.apply(null,arguments),this>a?this:a}),max:d("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",function(a){return a=mb.apply(null,arguments),a>this?this:a}),zone:function(a,b){var c=this._offset||0;return null==a?this._isUTC?c:this._d.getTimezoneOffset():("string"==typeof a&&(a=L(a)),Math.abs(a)<16&&(a=60*a),this._offset=a,this._isUTC=!0,c!==a&&(!b||this._changeInProgress?n(this,mb.duration(c-a,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,mb.updateOffset(this,!0),this._changeInProgress=null)),this)},zoneAbbr:function(){return this._isUTC?"UTC":""},zoneName:function(){return this._isUTC?"Coordinated Universal Time":""},parseZone:function(){return this._tzm?this.zone(this._tzm):"string"==typeof this._i&&this.zone(this._i),this},hasAlignedHourOffset:function(a){return a=a?mb(a).zone():0,(this.zone()-a)%60===0},daysInMonth:function(){return v(this.year(),this.month())},dayOfYear:function(a){var b=rb((mb(this).startOf("day")-mb(this).startOf("year"))/864e5)+1;return null==a?b:this.add("d",a-b)},quarter:function(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)},weekYear:function(a){var b=bb(this,this.lang()._week.dow,this.lang()._week.doy).year;return null==a?b:this.add("y",a-b)},isoWeekYear:function(a){var b=bb(this,1,4).year;return null==a?b:this.add("y",a-b)},week:function(a){var b=this.lang().week(this);return null==a?b:this.add("d",7*(a-b))},isoWeek:function(a){var b=bb(this,1,4).week;return null==a?b:this.add("d",7*(a-b))},weekday:function(a){var b=(this.day()+7-this.lang()._week.dow)%7;return null==a?b:this.add("d",a-b)},isoWeekday:function(a){return null==a?this.day()||7:this.day(this.day()%7?a:a-7)},isoWeeksInYear:function(){return w(this.year(),1,4)},weeksInYear:function(){var a=this._lang._week;return w(this.year(),a.dow,a.doy)},get:function(a){return a=r(a),this[a]()},set:function(a,b){return a=r(a),"function"==typeof this[a]&&this[a](b),this},lang:function(b){return b===a?this._lang:(this._lang=F(b),this)}}),mb.fn.millisecond=mb.fn.milliseconds=ib("Milliseconds",!1),mb.fn.second=mb.fn.seconds=ib("Seconds",!1),mb.fn.minute=mb.fn.minutes=ib("Minutes",!1),mb.fn.hour=mb.fn.hours=ib("Hours",!0),mb.fn.date=ib("Date",!0),mb.fn.dates=d("dates accessor is deprecated. Use date instead.",ib("Date",!0)),mb.fn.year=ib("FullYear",!0),mb.fn.years=d("years accessor is deprecated. Use year instead.",ib("FullYear",!0)),mb.fn.days=mb.fn.day,mb.fn.months=mb.fn.month,mb.fn.weeks=mb.fn.week,mb.fn.isoWeeks=mb.fn.isoWeek,mb.fn.quarters=mb.fn.quarter,mb.fn.toJSON=mb.fn.toISOString,j(mb.duration.fn=i.prototype,{_bubble:function(){var a,b,c,d,e=this._milliseconds,f=this._days,g=this._months,h=this._data;h.milliseconds=e%1e3,a=l(e/1e3),h.seconds=a%60,b=l(a/60),h.minutes=b%60,c=l(b/60),h.hours=c%24,f+=l(c/24),h.days=f%30,g+=l(f/30),h.months=g%12,d=l(g/12),h.years=d},weeks:function(){return l(this.days()/7)},valueOf:function(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*u(this._months/12)},humanize:function(a){var b=+this,c=ab(b,!a,this.lang());return a&&(c=this.lang().pastFuture(b,c)),this.lang().postformat(c)},add:function(a,b){var c=mb.duration(a,b);return this._milliseconds+=c._milliseconds,this._days+=c._days,this._months+=c._months,this._bubble(),this},subtract:function(a,b){var c=mb.duration(a,b);return this._milliseconds-=c._milliseconds,this._days-=c._days,this._months-=c._months,this._bubble(),this},get:function(a){return a=r(a),this[a.toLowerCase()+"s"]()},as:function(a){return a=r(a),this["as"+a.charAt(0).toUpperCase()+a.slice(1)+"s"]()},lang:mb.fn.lang,toIsoString:function(){var a=Math.abs(this.years()),b=Math.abs(this.months()),c=Math.abs(this.days()),d=Math.abs(this.hours()),e=Math.abs(this.minutes()),f=Math.abs(this.seconds()+this.milliseconds()/1e3);return this.asSeconds()?(this.asSeconds()<0?"-":"")+"P"+(a?a+"Y":"")+(b?b+"M":"")+(c?c+"D":"")+(d||e||f?"T":"")+(d?d+"H":"")+(e?e+"M":"")+(f?f+"S":""):"P0D"}});for(ob in ac)ac.hasOwnProperty(ob)&&(kb(ob,ac[ob]),jb(ob.toLowerCase()));kb("Weeks",6048e5),mb.duration.fn.asMonths=function(){return(+this-31536e6*this.years())/2592e6+12*this.years()},mb.lang("en",{ordinal:function(a){var b=a%10,c=1===u(a%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th";return a+c}}),Bb?module.exports=mb:"function"==typeof define&&define.amd?(define("moment",function(a,b,c){return c.config&&c.config()&&c.config().noGlobal===!0&&(qb.moment=nb),mb}),lb(!0)):lb()}).call(this);
backend/assets/static/charisma/bower_components/moment/min/moment-with-langs.min.js:(function(a){function b(a,b,c){switch(arguments.length){case 2:return null!=a?a:b;case 3:return null!=a?a:null!=b?b:c;default:throw new Error("Implement me")}}function c(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function d(a,b){function c(){mb.suppressDeprecationWarnings===!1&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+a)}var d=!0;return j(function(){return d&&(c(),d=!1),b.apply(this,arguments)},b)}function e(a,b){return function(c){return m(a.call(this,c),b)}}function f(a,b){return function(c){return this.lang().ordinal(a.call(this,c),b)}}function g(){}function h(a){z(a),j(this,a)}function i(a){var b=s(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;this._milliseconds=+k+1e3*j+6e4*i+36e5*h,this._days=+g+7*f,this._months=+e+3*d+12*c,this._data={},this._bubble()}function j(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return b.hasOwnProperty("toString")&&(a.toString=b.toString),b.hasOwnProperty("valueOf")&&(a.valueOf=b.valueOf),a}function k(a){var b,c={};for(b in a)a.hasOwnProperty(b)&&Ab.hasOwnProperty(b)&&(c[b]=a[b]);return c}function l(a){return 0>a?Math.ceil(a):Math.floor(a)}function m(a,b,c){for(var d=""+Math.abs(a),e=a>=0;d.length<b;)d="0"+d;return(e?c?"+":"":"-")+d}function n(a,b,c,d){var e=b._milliseconds,f=b._days,g=b._months;d=null==d?!0:d,e&&a._d.setTime(+a._d+e*c),f&&hb(a,"Date",gb(a,"Date")+f*c),g&&fb(a,gb(a,"Month")+g*c),d&&mb.updateOffset(a,f||g)}function o(a){return"[object Array]"===Object.prototype.toString.call(a)}function p(a){return"[object Date]"===Object.prototype.toString.call(a)||a instanceof Date}function q(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e>d;d++)(c&&a[d]!==b[d]||!c&&u(a[d])!==u(b[d]))&&g++;return g+f}function r(a){if(a){var b=a.toLowerCase().replace(/(.)s$/,"$1");a=bc[a]||cc[b]||b}return a}function s(a){var b,c,d={};for(c in a)a.hasOwnProperty(c)&&(b=r(c),b&&(d[b]=a[c]));return d}function t(b){var c,d;if(0===b.indexOf("week"))c=7,d="day";else{if(0!==b.indexOf("month"))return;c=12,d="month"}mb[b]=function(e,f){var g,h,i=mb.fn._lang[b],j=[];if("number"==typeof e&&(f=e,e=a),h=function(a){var b=mb().utc().set(d,a);return i.call(mb.fn._lang,b,e||"")},null!=f)return h(f);for(g=0;c>g;g++)j.push(h(g));return j}}function u(a){var b=+a,c=0;return 0!==b&&isFinite(b)&&(c=b>=0?Math.floor(b):Math.ceil(b)),c}function v(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function w(a,b,c){return bb(mb([a,11,31+b-c]),b,c).week}function x(a){return y(a)?366:365}function y(a){return a%4===0&&a%100!==0||a%400===0}function z(a){var b;a._a&&-2===a._pf.overflow&&(b=a._a[tb]<0||a._a[tb]>11?tb:a._a[ub]<1||a._a[ub]>v(a._a[sb],a._a[tb])?ub:a._a[vb]<0||a._a[vb]>23?vb:a._a[wb]<0||a._a[wb]>59?wb:a._a[xb]<0||a._a[xb]>59?xb:a._a[yb]<0||a._a[yb]>999?yb:-1,a._pf._overflowDayOfYear&&(sb>b||b>ub)&&(b=ub),a._pf.overflow=b)}function A(a){return null==a._isValid&&(a._isValid=!isNaN(a._d.getTime())&&a._pf.overflow<0&&!a._pf.empty&&!a._pf.invalidMonth&&!a._pf.nullInput&&!a._pf.invalidFormat&&!a._pf.userInvalidated,a._strict&&(a._isValid=a._isValid&&0===a._pf.charsLeftOver&&0===a._pf.unusedTokens.length)),a._isValid}function B(a){return a?a.toLowerCase().replace("_","-"):a}function C(a,b){return b._isUTC?mb(a).zone(b._offset||0):mb(a).local()}function D(a,b){return b.abbr=a,zb[a]||(zb[a]=new g),zb[a].set(b),zb[a]}function E(a){delete zb[a]}function F(a){var b,c,d,e,f=0,g=function(a){if(!zb[a]&&Bb)try{require("./lang/"+a)}catch(b){}return zb[a]};if(!a)return mb.fn._lang;if(!o(a)){if(c=g(a))return c;a=[a]}for(;f<a.length;){for(e=B(a[f]).split("-"),b=e.length,d=B(a[f+1]),d=d?d.split("-"):null;b>0;){if(c=g(e.slice(0,b).join("-")))return c;if(d&&d.length>=b&&q(e,d,!0)>=b-1)break;b--}f++}return mb.fn._lang}function G(a){return a.match(/\[[\s\S]/)?a.replace(/^\[|\]$/g,""):a.replace(/\\/g,"")}function H(a){var b,c,d=a.match(Fb);for(b=0,c=d.length;c>b;b++)d[b]=hc[d[b]]?hc[d[b]]:G(d[b]);return function(e){var f="";for(b=0;c>b;b++)f+=d[b]instanceof Function?d[b].call(e,a):d[b];return f}}function I(a,b){return a.isValid()?(b=J(b,a.lang()),dc[b]||(dc[b]=H(b)),dc[b](a)):a.lang().invalidDate()}function J(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Gb.lastIndex=0;d>=0&&Gb.test(a);)a=a.replace(Gb,c),Gb.lastIndex=0,d-=1;return a}function K(a,b){var c,d=b._strict;switch(a){case"Q":return Rb;case"DDDD":return Tb;case"YYYY":case"GGGG":case"gggg":return d?Ub:Jb;case"Y":case"G":case"g":return Wb;case"YYYYYY":case"YYYYY":case"GGGGG":case"ggggg":return d?Vb:Kb;case"S":if(d)return Rb;case"SS":if(d)return Sb;case"SSS":if(d)return Tb;case"DDD":return Ib;case"MMM":case"MMMM":case"dd":case"ddd":case"dddd":return Mb;case"a":case"A":return F(b._l)._meridiemParse;case"X":return Pb;case"Z":case"ZZ":return Nb;case"T":return Ob;case"SSSS":return Lb;case"MM":case"DD":case"YY":case"GG":case"gg":case"HH":case"hh":case"mm":case"ss":case"ww":case"WW":return d?Sb:Hb;case"M":case"D":case"d":case"H":case"h":case"m":case"s":case"w":case"W":case"e":case"E":return Hb;case"Do":return Qb;default:return c=new RegExp(T(S(a.replace("\\","")),"i"))}}function L(a){a=a||"";var b=a.match(Nb)||[],c=b[b.length-1]||[],d=(c+"").match(_b)||["-",0,0],e=+(60*d[1])+u(d[2]);return"+"===d[0]?-e:e}function M(a,b,c){var d,e=c._a;switch(a){case"Q":null!=b&&(e[tb]=3*(u(b)-1));break;case"M":case"MM":null!=b&&(e[tb]=u(b)-1);break;case"MMM":case"MMMM":d=F(c._l).monthsParse(b),null!=d?e[tb]=d:c._pf.invalidMonth=b;break;case"D":case"DD":null!=b&&(e[ub]=u(b));break;case"Do":null!=b&&(e[ub]=u(parseInt(b,10)));break;case"DDD":case"DDDD":null!=b&&(c._dayOfYear=u(b));break;case"YY":e[sb]=mb.parseTwoDigitYear(b);break;case"YYYY":case"YYYYY":case"YYYYYY":e[sb]=u(b);break;case"a":case"A":c._isPm=F(c._l).isPM(b);break;case"H":case"HH":case"h":case"hh":e[vb]=u(b);break;case"m":case"mm":e[wb]=u(b);break;case"s":case"ss":e[xb]=u(b);break;case"S":case"SS":case"SSS":case"SSSS":e[yb]=u(1e3*("0."+b));break;case"X":c._d=new Date(1e3*parseFloat(b));break;case"Z":case"ZZ":c._useUTC=!0,c._tzm=L(b);break;case"dd":case"ddd":case"dddd":d=F(c._l).weekdaysParse(b),null!=d?(c._w=c._w||{},c._w.d=d):c._pf.invalidWeekday=b;break;case"w":case"ww":case"W":case"WW":case"d":case"e":case"E":a=a.substr(0,1);case"gggg":case"GGGG":case"GGGGG":a=a.substr(0,2),b&&(c._w=c._w||{},c._w[a]=u(b));break;case"gg":case"GG":c._w=c._w||{},c._w[a]=mb.parseTwoDigitYear(b)}}function N(a){var c,d,e,f,g,h,i,j;c=a._w,null!=c.GG||null!=c.W||null!=c.E?(g=1,h=4,d=b(c.GG,a._a[sb],bb(mb(),1,4).year),e=b(c.W,1),f=b(c.E,1)):(j=F(a._l),g=j._week.dow,h=j._week.doy,d=b(c.gg,a._a[sb],bb(mb(),g,h).year),e=b(c.w,1),null!=c.d?(f=c.d,g>f&&++e):f=null!=c.e?c.e+g:g),i=cb(d,e,f,h,g),a._a[sb]=i.year,a._dayOfYear=i.dayOfYear}function O(a){var c,d,e,f,g=[];if(!a._d){for(e=Q(a),a._w&&null==a._a[ub]&&null==a._a[tb]&&N(a),a._dayOfYear&&(f=b(a._a[sb],e[sb]),a._dayOfYear>x(f)&&(a._pf._overflowDayOfYear=!0),d=Z(f,0,a._dayOfYear),a._a[tb]=d.getUTCMonth(),a._a[ub]=d.getUTCDate()),c=0;3>c&&null==a._a[c];++c)a._a[c]=g[c]=e[c];for(;7>c;c++)a._a[c]=g[c]=null==a._a[c]?2===c?1:0:a._a[c];a._d=(a._useUTC?Z:Y).apply(null,g),null!=a._tzm&&a._d.setUTCMinutes(a._d.getUTCMinutes()+a._tzm)}}function P(a){var b;a._d||(b=s(a._i),a._a=[b.year,b.month,b.day,b.hour,b.minute,b.second,b.millisecond],O(a))}function Q(a){var b=new Date;return a._useUTC?[b.getUTCFullYear(),b.getUTCMonth(),b.getUTCDate()]:[b.getFullYear(),b.getMonth(),b.getDate()]}function R(a){if(a._f===mb.ISO_8601)return void V(a);a._a=[],a._pf.empty=!0;var b,c,d,e,f,g=F(a._l),h=""+a._i,i=h.length,j=0;for(d=J(a._f,g).match(Fb)||[],b=0;b<d.length;b++)e=d[b],c=(h.match(K(e,a))||[])[0],c&&(f=h.substr(0,h.indexOf(c)),f.length>0&&a._pf.unusedInput.push(f),h=h.slice(h.indexOf(c)+c.length),j+=c.length),hc[e]?(c?a._pf.empty=!1:a._pf.unusedTokens.push(e),M(e,c,a)):a._strict&&!c&&a._pf.unusedTokens.push(e);a._pf.charsLeftOver=i-j,h.length>0&&a._pf.unusedInput.push(h),a._isPm&&a._a[vb]<12&&(a._a[vb]+=12),a._isPm===!1&&12===a._a[vb]&&(a._a[vb]=0),O(a),z(a)}function S(a){return a.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(a,b,c,d,e){return b||c||d||e})}function T(a){return a.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function U(a){var b,d,e,f,g;if(0===a._f.length)return a._pf.invalidFormat=!0,void(a._d=new Date(0/0));for(f=0;f<a._f.length;f++)g=0,b=j({},a),b._pf=c(),b._f=a._f[f],R(b),A(b)&&(g+=b._pf.charsLeftOver,g+=10*b._pf.unusedTokens.length,b._pf.score=g,(null==e||e>g)&&(e=g,d=b));j(a,d||b)}function V(a){var b,c,d=a._i,e=Xb.exec(d);if(e){for(a._pf.iso=!0,b=0,c=Zb.length;c>b;b++)if(Zb[b][1].exec(d)){a._f=Zb[b][0]+(e[6]||" ");break}for(b=0,c=$b.length;c>b;b++)if($b[b][1].exec(d)){a._f+=$b[b][0];break}d.match(Nb)&&(a._f+="Z"),R(a)}else a._isValid=!1}function W(a){V(a),a._isValid===!1&&(delete a._isValid,mb.createFromInputFallback(a))}function X(b){var c=b._i,d=Cb.exec(c);c===a?b._d=new Date:d?b._d=new Date(+d[1]):"string"==typeof c?W(b):o(c)?(b._a=c.slice(0),O(b)):p(c)?b._d=new Date(+c):"object"==typeof c?P(b):"number"==typeof c?b._d=new Date(c):mb.createFromInputFallback(b)}function Y(a,b,c,d,e,f,g){var h=new Date(a,b,c,d,e,f,g);return 1970>a&&h.setFullYear(a),h}function Z(a){var b=new Date(Date.UTC.apply(null,arguments));return 1970>a&&b.setUTCFullYear(a),b}function $(a,b){if("string"==typeof a)if(isNaN(a)){if(a=b.weekdaysParse(a),"number"!=typeof a)return null}else a=parseInt(a,10);return a}function _(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function ab(a,b,c){var d=rb(Math.abs(a)/1e3),e=rb(d/60),f=rb(e/60),g=rb(f/24),h=rb(g/365),i=d<ec.s&&["s",d]||1===e&&["m"]||e<ec.m&&["mm",e]||1===f&&["h"]||f<ec.h&&["hh",f]||1===g&&["d"]||g<=ec.dd&&["dd",g]||g<=ec.dm&&["M"]||g<ec.dy&&["MM",rb(g/30)]||1===h&&["y"]||["yy",h];return i[2]=b,i[3]=a>0,i[4]=c,_.apply({},i)}function bb(a,b,c){var d,e=c-b,f=c-a.day();return f>e&&(f-=7),e-7>f&&(f+=7),d=mb(a).add("d",f),{week:Math.ceil(d.dayOfYear()/7),year:d.year()}}function cb(a,b,c,d,e){var f,g,h=Z(a,0,1).getUTCDay();return h=0===h?7:h,c=null!=c?c:e,f=e-h+(h>d?7:0)-(e>h?7:0),g=7*(b-1)+(c-e)+f+1,{year:g>0?a:a-1,dayOfYear:g>0?g:x(a-1)+g}}function db(b){var c=b._i,d=b._f;return null===c||d===a&&""===c?mb.invalid({nullInput:!0}):("string"==typeof c&&(b._i=c=F().preparse(c)),mb.isMoment(c)?(b=k(c),b._d=new Date(+c._d)):d?o(d)?U(b):R(b):X(b),new h(b))}function eb(a,b){var c,d;if(1===b.length&&o(b[0])&&(b=b[0]),!b.length)return mb();for(c=b[0],d=1;d<b.length;++d)b[d][a](c)&&(c=b[d]);return c}function fb(a,b){var c;return"string"==typeof b&&(b=a.lang().monthsParse(b),"number"!=typeof b)?a:(c=Math.min(a.date(),v(a.year(),b)),a._d["set"+(a._isUTC?"UTC":"")+"Month"](b,c),a)}function gb(a,b){return a._d["get"+(a._isUTC?"UTC":"")+b]()}function hb(a,b,c){return"Month"===b?fb(a,c):a._d["set"+(a._isUTC?"UTC":"")+b](c)}function ib(a,b){return function(c){return null!=c?(hb(this,a,c),mb.updateOffset(this,b),this):gb(this,a)}}function jb(a){mb.duration.fn[a]=function(){return this._data[a]}}function kb(a,b){mb.duration.fn["as"+a]=function(){return+this/b}}function lb(a){"undefined"==typeof ender&&(nb=qb.moment,qb.moment=a?d("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.",mb):mb)}for(var mb,nb,ob,pb="2.7.0",qb="undefined"!=typeof global?global:this,rb=Math.round,sb=0,tb=1,ub=2,vb=3,wb=4,xb=5,yb=6,zb={},Ab={_isAMomentObject:null,_i:null,_f:null,_l:null,_strict:null,_tzm:null,_isUTC:null,_offset:null,_pf:null,_lang:null},Bb="undefined"!=typeof module&&module.exports,Cb=/^\/?Date\((\-?\d+)/i,Db=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,Eb=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,Fb=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,Gb=/(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,Hb=/\d\d?/,Ib=/\d{1,3}/,Jb=/\d{1,4}/,Kb=/[+\-]?\d{1,6}/,Lb=/\d+/,Mb=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,Nb=/Z|[\+\-]\d\d:?\d\d/gi,Ob=/T/i,Pb=/[\+\-]?\d+(\.\d{1,3})?/,Qb=/\d{1,2}/,Rb=/\d/,Sb=/\d\d/,Tb=/\d{3}/,Ub=/\d{4}/,Vb=/[+-]?\d{6}/,Wb=/[+-]?\d+/,Xb=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Yb="YYYY-MM-DDTHH:mm:ssZ",Zb=[["YYYYYY-MM-DD",/[+-]\d{6}-\d{2}-\d{2}/],["YYYY-MM-DD",/\d{4}-\d{2}-\d{2}/],["GGGG-[W]WW-E",/\d{4}-W\d{2}-\d/],["GGGG-[W]WW",/\d{4}-W\d{2}/],["YYYY-DDD",/\d{4}-\d{3}/]],$b=[["HH:mm:ss.SSSS",/(T| )\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss",/(T| )\d\d:\d\d:\d\d/],["HH:mm",/(T| )\d\d:\d\d/],["HH",/(T| )\d\d/]],_b=/([\+\-]|\d\d)/gi,ac=("Date|Hours|Minutes|Seconds|Milliseconds".split("|"),{Milliseconds:1,Seconds:1e3,Minutes:6e4,Hours:36e5,Days:864e5,Months:2592e6,Years:31536e6}),bc={ms:"millisecond",s:"second",m:"minute",h:"hour",d:"day",D:"date",w:"week",W:"isoWeek",M:"month",Q:"quarter",y:"year",DDD:"dayOfYear",e:"weekday",E:"isoWeekday",gg:"weekYear",GG:"isoWeekYear"},cc={dayofyear:"dayOfYear",isoweekday:"isoWeekday",isoweek:"isoWeek",weekyear:"weekYear",isoweekyear:"isoWeekYear"},dc={},ec={s:45,m:45,h:22,dd:25,dm:45,dy:345},fc="DDD w W M D d".split(" "),gc="M D H h m s w W".split(" "),hc={M:function(){return this.month()+1},MMM:function(a){return this.lang().monthsShort(this,a)},MMMM:function(a){return this.lang().months(this,a)},D:function(){return this.date()},DDD:function(){return this.dayOfYear()},d:function(){return this.day()},dd:function(a){return this.lang().weekdaysMin(this,a)},ddd:function(a){return this.lang().weekdaysShort(this,a)},dddd:function(a){return this.lang().weekdays(this,a)},w:function(){return this.week()},W:function(){return this.isoWeek()},YY:function(){return m(this.year()%100,2)},YYYY:function(){return m(this.year(),4)},YYYYY:function(){return m(this.year(),5)},YYYYYY:function(){var a=this.year(),b=a>=0?"+":"-";return b+m(Math.abs(a),6)},gg:function(){return m(this.weekYear()%100,2)},gggg:function(){return m(this.weekYear(),4)},ggggg:function(){return m(this.weekYear(),5)},GG:function(){return m(this.isoWeekYear()%100,2)},GGGG:function(){return m(this.isoWeekYear(),4)},GGGGG:function(){return m(this.isoWeekYear(),5)},e:function(){return this.weekday()},E:function(){return this.isoWeekday()},a:function(){return this.lang().meridiem(this.hours(),this.minutes(),!0)},A:function(){return this.lang().meridiem(this.hours(),this.minutes(),!1)},H:function(){return this.hours()},h:function(){return this.hours()%12||12},m:function(){return this.minutes()},s:function(){return this.seconds()},S:function(){return u(this.milliseconds()/100)},SS:function(){return m(u(this.milliseconds()/10),2)},SSS:function(){return m(this.milliseconds(),3)},SSSS:function(){return m(this.milliseconds(),3)},Z:function(){var a=-this.zone(),b="+";return 0>a&&(a=-a,b="-"),b+m(u(a/60),2)+":"+m(u(a)%60,2)},ZZ:function(){var a=-this.zone(),b="+";return 0>a&&(a=-a,b="-"),b+m(u(a/60),2)+m(u(a)%60,2)},z:function(){return this.zoneAbbr()},zz:function(){return this.zoneName()},X:function(){return this.unix()},Q:function(){return this.quarter()}},ic=["months","monthsShort","weekdays","weekdaysShort","weekdaysMin"];fc.length;)ob=fc.pop(),hc[ob+"o"]=f(hc[ob],ob);for(;gc.length;)ob=gc.pop(),hc[ob+ob]=e(hc[ob],2);for(hc.DDDD=e(hc.DDD,3),j(g.prototype,{set:function(a){var b,c;for(c in a)b=a[c],"function"==typeof b?this[c]=b:this["_"+c]=b},_months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),months:function(a){return this._months[a.month()]},_monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),monthsShort:function(a){return this._monthsShort[a.month()]},monthsParse:function(a){var b,c,d;for(this._monthsParse||(this._monthsParse=[]),b=0;12>b;b++)if(this._monthsParse[b]||(c=mb.utc([2e3,b]),d="^"+this.months(c,"")+"|^"+this.monthsShort(c,""),this._monthsParse[b]=new RegExp(d.replace(".",""),"i")),this._monthsParse[b].test(a))return b},_weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdays:function(a){return this._weekdays[a.day()]},_weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysShort:function(a){return this._weekdaysShort[a.day()]},_weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),weekdaysMin:function(a){return this._weekdaysMin[a.day()]},weekdaysParse:function(a){var b,c,d;for(this._weekdaysParse||(this._weekdaysParse=[]),b=0;7>b;b++)if(this._weekdaysParse[b]||(c=mb([2e3,1]).day(b),d="^"+this.weekdays(c,"")+"|^"+this.weekdaysShort(c,"")+"|^"+this.weekdaysMin(c,""),this._weekdaysParse[b]=new RegExp(d.replace(".",""),"i")),this._weekdaysParse[b].test(a))return b},_longDateFormat:{LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D YYYY",LLL:"MMMM D YYYY LT",LLLL:"dddd, MMMM D YYYY LT"},longDateFormat:function(a){var b=this._longDateFormat[a];return!b&&this._longDateFormat[a.toUpperCase()]&&(b=this._longDateFormat[a.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a]=b),b},isPM:function(a){return"p"===(a+"").toLowerCase().charAt(0)},_meridiemParse:/[ap]\.?m?\.?/i,meridiem:function(a,b,c){return a>11?c?"pm":"PM":c?"am":"AM"},_calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},calendar:function(a,b){var c=this._calendar[a];return"function"==typeof c?c.apply(b):c},_relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},relativeTime:function(a,b,c,d){var e=this._relativeTime[c];return"function"==typeof e?e(a,b,c,d):e.replace(/%d/i,a)},pastFuture:function(a,b){var c=this._relativeTime[a>0?"future":"past"];return"function"==typeof c?c(b):c.replace(/%s/i,b)},ordinal:function(a){return this._ordinal.replace("%d",a)},_ordinal:"%d",preparse:function(a){return a},postformat:function(a){return a},week:function(a){return bb(a,this._week.dow,this._week.doy).week},_week:{dow:0,doy:6},_invalidDate:"Invalid date",invalidDate:function(){return this._invalidDate}}),mb=function(b,d,e,f){var g;return"boolean"==typeof e&&(f=e,e=a),g={},g._isAMomentObject=!0,g._i=b,g._f=d,g._l=e,g._strict=f,g._isUTC=!1,g._pf=c(),db(g)},mb.suppressDeprecationWarnings=!1,mb.createFromInputFallback=d("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",function(a){a._d=new Date(a._i)}),mb.min=function(){var a=[].slice.call(arguments,0);return eb("isBefore",a)},mb.max=function(){var a=[].slice.call(arguments,0);return eb("isAfter",a)},mb.utc=function(b,d,e,f){var g;return"boolean"==typeof e&&(f=e,e=a),g={},g._isAMomentObject=!0,g._useUTC=!0,g._isUTC=!0,g._l=e,g._i=b,g._f=d,g._strict=f,g._pf=c(),db(g).utc()},mb.unix=function(a){return mb(1e3*a)},mb.duration=function(a,b){var c,d,e,f=a,g=null;return mb.isDuration(a)?f={ms:a._milliseconds,d:a._days,M:a._months}:"number"==typeof a?(f={},b?f[b]=a:f.milliseconds=a):(g=Db.exec(a))?(c="-"===g[1]?-1:1,f={y:0,d:u(g[ub])*c,h:u(g[vb])*c,m:u(g[wb])*c,s:u(g[xb])*c,ms:u(g[yb])*c}):(g=Eb.exec(a))&&(c="-"===g[1]?-1:1,e=function(a){var b=a&&parseFloat(a.replace(",","."));return(isNaN(b)?0:b)*c},f={y:e(g[2]),M:e(g[3]),d:e(g[4]),h:e(g[5]),m:e(g[6]),s:e(g[7]),w:e(g[8])}),d=new i(f),mb.isDuration(a)&&a.hasOwnProperty("_lang")&&(d._lang=a._lang),d},mb.version=pb,mb.defaultFormat=Yb,mb.ISO_8601=function(){},mb.momentProperties=Ab,mb.updateOffset=function(){},mb.relativeTimeThreshold=function(b,c){return ec[b]===a?!1:(ec[b]=c,!0)},mb.lang=function(a,b){var c;return a?(b?D(B(a),b):null===b?(E(a),a="en"):zb[a]||F(a),c=mb.duration.fn._lang=mb.fn._lang=F(a),c._abbr):mb.fn._lang._abbr},mb.langData=function(a){return a&&a._lang&&a._lang._abbr&&(a=a._lang._abbr),F(a)},mb.isMoment=function(a){return a instanceof h||null!=a&&a.hasOwnProperty("_isAMomentObject")},mb.isDuration=function(a){return a instanceof i},ob=ic.length-1;ob>=0;--ob)t(ic[ob]);mb.normalizeUnits=function(a){return r(a)},mb.invalid=function(a){var b=mb.utc(0/0);return null!=a?j(b._pf,a):b._pf.userInvalidated=!0,b},mb.parseZone=function(){return mb.apply(null,arguments).parseZone()},mb.parseTwoDigitYear=function(a){return u(a)+(u(a)>68?1900:2e3)},j(mb.fn=h.prototype,{clone:function(){return mb(this)},valueOf:function(){return+this._d+6e4*(this._offset||0)},unix:function(){return Math.floor(+this/1e3)},toString:function(){return this.clone().lang("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},toDate:function(){return this._offset?new Date(+this):this._d},toISOString:function(){var a=mb(this).utc();return 0<a.year()&&a.year()<=9999?I(a,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):I(a,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")},toArray:function(){var a=this;return[a.year(),a.month(),a.date(),a.hours(),a.minutes(),a.seconds(),a.milliseconds()]},isValid:function(){return A(this)},isDSTShifted:function(){return this._a?this.isValid()&&q(this._a,(this._isUTC?mb.utc(this._a):mb(this._a)).toArray())>0:!1},parsingFlags:function(){return j({},this._pf)},invalidAt:function(){return this._pf.overflow},utc:function(){return this.zone(0)},local:function(){return this.zone(0),this._isUTC=!1,this},format:function(a){var b=I(this,a||mb.defaultFormat);return this.lang().postformat(b)},add:function(a,b){var c;return c="string"==typeof a&&"string"==typeof b?mb.duration(isNaN(+b)?+a:+b,isNaN(+b)?b:a):"string"==typeof a?mb.duration(+b,a):mb.duration(a,b),n(this,c,1),this},subtract:function(a,b){var c;return c="string"==typeof a&&"string"==typeof b?mb.duration(isNaN(+b)?+a:+b,isNaN(+b)?b:a):"string"==typeof a?mb.duration(+b,a):mb.duration(a,b),n(this,c,-1),this},diff:function(a,b,c){var d,e,f=C(a,this),g=6e4*(this.zone()-f.zone());return b=r(b),"year"===b||"month"===b?(d=432e5*(this.daysInMonth()+f.daysInMonth()),e=12*(this.year()-f.year())+(this.month()-f.month()),e+=(this-mb(this).startOf("month")-(f-mb(f).startOf("month")))/d,e-=6e4*(this.zone()-mb(this).startOf("month").zone()-(f.zone()-mb(f).startOf("month").zone()))/d,"year"===b&&(e/=12)):(d=this-f,e="second"===b?d/1e3:"minute"===b?d/6e4:"hour"===b?d/36e5:"day"===b?(d-g)/864e5:"week"===b?(d-g)/6048e5:d),c?e:l(e)},from:function(a,b){return mb.duration(this.diff(a)).lang(this.lang()._abbr).humanize(!b)},fromNow:function(a){return this.from(mb(),a)},calendar:function(a){var b=a||mb(),c=C(b,this).startOf("day"),d=this.diff(c,"days",!0),e=-6>d?"sameElse":-1>d?"lastWeek":0>d?"lastDay":1>d?"sameDay":2>d?"nextDay":7>d?"nextWeek":"sameElse";return this.format(this.lang().calendar(e,this))},isLeapYear:function(){return y(this.year())},isDST:function(){return this.zone()<this.clone().month(0).zone()||this.zone()<this.clone().month(5).zone()},day:function(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=$(a,this.lang()),this.add({d:a-b})):b},month:ib("Month",!0),startOf:function(a){switch(a=r(a)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===a?this.weekday(0):"isoWeek"===a&&this.isoWeekday(1),"quarter"===a&&this.month(3*Math.floor(this.month()/3)),this},endOf:function(a){return a=r(a),this.startOf(a).add("isoWeek"===a?"week":a,1).subtract("ms",1)},isAfter:function(a,b){return b="undefined"!=typeof b?b:"millisecond",+this.clone().startOf(b)>+mb(a).startOf(b)},isBefore:function(a,b){return b="undefined"!=typeof b?b:"millisecond",+this.clone().startOf(b)<+mb(a).startOf(b)},isSame:function(a,b){return b=b||"ms",+this.clone().startOf(b)===+C(a,this).startOf(b)},min:d("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",function(a){return a=mb.apply(null,arguments),this>a?this:a}),max:d("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",function(a){return a=mb.apply(null,arguments),a>this?this:a}),zone:function(a,b){var c=this._offset||0;return null==a?this._isUTC?c:this._d.getTimezoneOffset():("string"==typeof a&&(a=L(a)),Math.abs(a)<16&&(a=60*a),this._offset=a,this._isUTC=!0,c!==a&&(!b||this._changeInProgress?n(this,mb.duration(c-a,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,mb.updateOffset(this,!0),this._changeInProgress=null)),this)},zoneAbbr:function(){return this._isUTC?"UTC":""},zoneName:function(){return this._isUTC?"Coordinated Universal Time":""},parseZone:function(){return this._tzm?this.zone(this._tzm):"string"==typeof this._i&&this.zone(this._i),this},hasAlignedHourOffset:function(a){return a=a?mb(a).zone():0,(this.zone()-a)%60===0},daysInMonth:function(){return v(this.year(),this.month())},dayOfYear:function(a){var b=rb((mb(this).startOf("day")-mb(this).startOf("year"))/864e5)+1;return null==a?b:this.add("d",a-b)},quarter:function(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)},weekYear:function(a){var b=bb(this,this.lang()._week.dow,this.lang()._week.doy).year;return null==a?b:this.add("y",a-b)},isoWeekYear:function(a){var b=bb(this,1,4).year;return null==a?b:this.add("y",a-b)},week:function(a){var b=this.lang().week(this);return null==a?b:this.add("d",7*(a-b))},isoWeek:function(a){var b=bb(this,1,4).week;return null==a?b:this.add("d",7*(a-b))},weekday:function(a){var b=(this.day()+7-this.lang()._week.dow)%7;return null==a?b:this.add("d",a-b)},isoWeekday:function(a){return null==a?this.day()||7:this.day(this.day()%7?a:a-7)},isoWeeksInYear:function(){return w(this.year(),1,4)},weeksInYear:function(){var a=this._lang._week;return w(this.year(),a.dow,a.doy)},get:function(a){return a=r(a),this[a]()},set:function(a,b){return a=r(a),"function"==typeof this[a]&&this[a](b),this},lang:function(b){return b===a?this._lang:(this._lang=F(b),this)}}),mb.fn.millisecond=mb.fn.milliseconds=ib("Milliseconds",!1),mb.fn.second=mb.fn.seconds=ib("Seconds",!1),mb.fn.minute=mb.fn.minutes=ib("Minutes",!1),mb.fn.hour=mb.fn.hours=ib("Hours",!0),mb.fn.date=ib("Date",!0),mb.fn.dates=d("dates accessor is deprecated. Use date instead.",ib("Date",!0)),mb.fn.year=ib("FullYear",!0),mb.fn.years=d("years accessor is deprecated. Use year instead.",ib("FullYear",!0)),mb.fn.days=mb.fn.day,mb.fn.months=mb.fn.month,mb.fn.weeks=mb.fn.week,mb.fn.isoWeeks=mb.fn.isoWeek,mb.fn.quarters=mb.fn.quarter,mb.fn.toJSON=mb.fn.toISOString,j(mb.duration.fn=i.prototype,{_bubble:function(){var a,b,c,d,e=this._milliseconds,f=this._days,g=this._months,h=this._data;h.milliseconds=e%1e3,a=l(e/1e3),h.seconds=a%60,b=l(a/60),h.minutes=b%60,c=l(b/60),h.hours=c%24,f+=l(c/24),h.days=f%30,g+=l(f/30),h.months=g%12,d=l(g/12),h.years=d},weeks:function(){return l(this.days()/7)},valueOf:function(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*u(this._months/12)},humanize:function(a){var b=+this,c=ab(b,!a,this.lang());return a&&(c=this.lang().pastFuture(b,c)),this.lang().postformat(c)},add:function(a,b){var c=mb.duration(a,b);return this._milliseconds+=c._milliseconds,this._days+=c._days,this._months+=c._months,this._bubble(),this},subtract:function(a,b){var c=mb.duration(a,b);return this._milliseconds-=c._milliseconds,this._days-=c._days,this._months-=c._months,this._bubble(),this},get:function(a){return a=r(a),this[a.toLowerCase()+"s"]()},as:function(a){return a=r(a),this["as"+a.charAt(0).toUpperCase()+a.slice(1)+"s"]()},lang:mb.fn.lang,toIsoString:function(){var a=Math.abs(this.years()),b=Math.abs(this.months()),c=Math.abs(this.days()),d=Math.abs(this.hours()),e=Math.abs(this.minutes()),f=Math.abs(this.seconds()+this.milliseconds()/1e3);return this.asSeconds()?(this.asSeconds()<0?"-":"")+"P"+(a?a+"Y":"")+(b?b+"M":"")+(c?c+"D":"")+(d||e||f?"T":"")+(d?d+"H":"")+(e?e+"M":"")+(f?f+"S":""):"P0D"}});for(ob in ac)ac.hasOwnProperty(ob)&&(kb(ob,ac[ob]),jb(ob.toLowerCase()));kb("Weeks",6048e5),mb.duration.fn.asMonths=function(){return(+this-31536e6*this.years())/2592e6+12*this.years()},mb.lang("en",{ordinal:function(a){var b=a%10,c=1===u(a%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th";return a+c}}),function(a){a(mb)}(function(a){return a.lang("ar-ma",{months:"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),monthsShort:"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),weekdays:"الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),longDateFormat:{LT:"HH:mm",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY LT",LLLL:"dddd D MMMM YYYY LT"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},week:{dow:6,doy:12}})}),function(a){a(mb)}(function(a){var b={1:"١",2:"٢",3:"٣",4:"٤",5:"٥",6:"٦",7:"٧",8:"٨",9:"٩",0:"٠"},c={"١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","٠":"0"};return a.lang("ar-sa",{months:"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),monthsShort:"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),longDateFormat:{LT:"HH:mm",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY LT",LLLL:"dddd D MMMM YYYY LT"},meridiem:function(a){return 12>a?"ص":"م"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},preparse:function(a){return a.replace(/[۰-۹]/g,function(a){return c[a]}).replace(/،/g,",")},postformat:function(a){return a.replace(/\d/g,function(a){return b[a]}).replace(/,/g,"،")},week:{dow:6,doy:12}})}),function(a){a(mb)}(function(a){var b={1:"١",2:"٢",3:"٣",4:"٤",5:"٥",6:"٦",7:"٧",8:"٨",9:"٩",0:"٠"},c={"١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","٠":"0"};return a.lang("ar",{months:"يناير/ كانون الثاني_فبراير/ شباط_مارس/ آذار_أبريل/ نيسان_مايو/ أيار_يونيو/ حزيران_يوليو/ تموز_أغسطس/ آب_سبتمبر/ أيلول_أكتوبر/ تشرين الأول_نوفمبر/ تشرين الثاني_ديسمبر/ كانون الأول".split("_"),monthsShort:"يناير/ كانون الثاني_فبراير/ شباط_مارس/ آذار_أبريل/ نيسان_مايو/ أيار_يونيو/ حزيران_يوليو/ تموز_أغسطس/ آب_سبتمبر/ أيلول_أكتوبر/ تشرين الأول_نوفمبر/ تشرين الثاني_ديسمبر/ كانون الأول".split("_"),weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),longDateFormat:{LT:"HH:mm",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY LT",LLLL:"dddd D MMMM YYYY LT"},meridiem:function(a){return 12>a?"ص":"م"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},preparse:function(a){return a.replace(/[۰-۹]/g,function(a){return c[a]}).replace(/،/g,",")},postformat:function(a){return a.replace(/\d/g,function(a){return b[a]}).replace(/,/g,"،")
tests/codeception/common/_support/FixtureHelper.php:        $this->loadFixtures();
tests/codeception/common/_support/FixtureHelper.php:        $this->unloadFixtures();
tests/codeception/common/_pages/LoginPage.php:        $this->actor->fillField('input[name="LoginForm[username]"]', $username);
tests/codeception/common/_pages/LoginPage.php:        $this->actor->fillField('input[name="LoginForm[password]"]', $password);
tests/codeception/common/_pages/LoginPage.php:        $this->actor->click('login-button');
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Condition('amInPath', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('openFile', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('deleteFile', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('deleteDir', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('copyDir', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeInThisFile', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeInThisFile', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeFileContentsEqual', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeFileContentsEqual', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeInThisFile', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeInThisFile', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('deleteThisFile', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeFileFound', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeFileFound', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeFileFound', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeFileFound', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('cleanDir', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('writeToFile', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('haveRecord', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeRecord', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeRecord', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeRecord', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeRecord', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('grabRecord', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Condition('amOnPage', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Condition('amHttpAuthenticated', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('click', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('see', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('see', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSee', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSee', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeLink', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeLink', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeLink', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeLink', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeInCurrentUrl', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeInCurrentUrl', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeInCurrentUrl', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeInCurrentUrl', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeCurrentUrlEquals', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeCurrentUrlEquals', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeCurrentUrlEquals', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeCurrentUrlEquals', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeCurrentUrlMatches', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeCurrentUrlMatches', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeCurrentUrlMatches', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeCurrentUrlMatches', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('grabFromCurrentUrl', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeCheckboxIsChecked', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeCheckboxIsChecked', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeCheckboxIsChecked', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeCheckboxIsChecked', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeInField', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeInField', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeInField', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeInField', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeInFormFields', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeInFormFields', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeInFormFields', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeInFormFields', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('submitForm', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('fillField', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('selectOption', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('checkOption', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('uncheckOption', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('attachFile', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('sendAjaxGetRequest', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('sendAjaxPostRequest', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('sendAjaxRequest', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('grabTextFrom', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('grabAttributeFrom', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('grabValueFrom', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('setCookie', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('grabCookie', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeCookie', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeCookie', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeCookie', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeCookie', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('resetCookie', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeElement', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeElement', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeElement', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeElement', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeNumberOfElements', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeNumberOfElements', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeOptionIsSelected', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeOptionIsSelected', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeOptionIsSelected', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeOptionIsSelected', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seePageNotFound', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seePageNotFound', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeResponseCodeIs', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeResponseCodeIs', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeInTitle', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeInTitle', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeInTitle', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeInTitle', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('globalFixtures', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('fixtures', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('loadFixtures', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('createFixtures', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('setHeader', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('deleteHeader', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Condition('amOnUrl', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Condition('amOnSubdomain', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('executeInGuzzle', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('haveHttpHeader', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeHttpHeader', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeHttpHeader', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeHttpHeader', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeHttpHeader', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeHttpHeaderOnce', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeHttpHeaderOnce', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('grabHttpHeader', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Condition('amDigestAuthenticated', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Condition('amBearerAuthenticated', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('sendPOST', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('sendHEAD', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('sendOPTIONS', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('sendGET', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('sendPUT', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('sendPATCH', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('sendDELETE', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('sendLINK', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('sendUNLINK', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeResponseIsJson', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeResponseIsJson', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeResponseIsXml', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeResponseIsXml', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeResponseContains', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeResponseContains', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeResponseContains', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeResponseContains', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeResponseContainsJson', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeResponseContainsJson', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('grabResponse', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('grabDataFromJsonResponse', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Action('grabDataFromResponseByJsonPath', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeResponseJsonMatchesXpath', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeResponseJsonMatchesXpath', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeResponseJsonMatchesJsonPath', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeResponseJsonMatchesJsonPath', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeResponseJsonMatchesJsonPath', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeResponseJsonMatchesJsonPath', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeResponseContainsJson', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeResponseContainsJson', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('seeResponseEquals', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('seeResponseEquals', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\ConditionalAssertion('dontSeeResponseCodeIs', func_get_args()));
tests/codeception/api/api/ApiTester.php:        return $this->scenario->runStep(new \Codeception\Step\Assertion('dontSeeResponseCodeIs', func_get_args()));
tests/codeception/common/unit/models/LoginFormTest.php:        $this->specify('user should not be able to login, when there is no identity', function () use ($model) {
tests/codeception/common/unit/models/LoginFormTest.php:        $this->specify('user should not be able to login with wrong password', function () use ($model) {
tests/codeception/common/unit/models/LoginFormTest.php:        $this->specify('user should be able to login with correct credentials', function () use ($model) {
backend/gii/crud/krajee/backend/views/view.php:$this->title = $model-><?= $generator->getNameAttribute() ?>;
backend/gii/crud/krajee/backend/views/view.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/krajee/backend/views/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/krajee/backend/views/view.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
tests/codeception/frontend/unit/models/ResetPasswordFormTest.php:        $form = new ResetPasswordForm($this->user[0]['password_reset_token']);
tests/codeception/frontend/unit/models/SignupFormTest.php:        $this->assertInstanceOf('common\models\User', $user, 'user should be valid');
tests/codeception/frontend/unit/models/PasswordResetRequestFormTest.php:        @unlink($this->getMessageFile());
tests/codeception/frontend/unit/models/PasswordResetRequestFormTest.php:        $this->specify('no user with such email, message should not be sent', function () {
tests/codeception/frontend/unit/models/PasswordResetRequestFormTest.php:        $this->specify('user is not active, message should not be sent', function () {
tests/codeception/frontend/unit/models/PasswordResetRequestFormTest.php:            $model->email = $this->user[1]['email'];
tests/codeception/frontend/unit/models/PasswordResetRequestFormTest.php:        $model->email = $this->user[0]['email'];
tests/codeception/frontend/unit/models/PasswordResetRequestFormTest.php:        $user = User::findOne(['password_reset_token' => $this->user[0]['password_reset_token']]);
tests/codeception/frontend/unit/models/PasswordResetRequestFormTest.php:        $this->specify('message has correct format', function () use ($model) {
tests/codeception/frontend/unit/models/PasswordResetRequestFormTest.php:            expect('message file exists', file_exists($this->getMessageFile()))->true();
tests/codeception/frontend/unit/models/PasswordResetRequestFormTest.php:            $message = file_get_contents($this->getMessageFile());
tests/codeception/frontend/unit/models/ContactFormTest.php:        unlink($this->getMessageFile());
tests/codeception/frontend/unit/models/ContactFormTest.php:        $this->specify('email should be send', function () {
tests/codeception/frontend/unit/models/ContactFormTest.php:            expect('email file should exist', file_exists($this->getMessageFile()))->true();
tests/codeception/frontend/unit/models/ContactFormTest.php:        $this->specify('message should contain correct data', function () use ($model) {
tests/codeception/frontend/unit/models/ContactFormTest.php:            $emailMessage = file_get_contents($this->getMessageFile());
backend/gii/crud/krajee/backend/views/create.php:$this->title = <?= $generator->generateString('Create ' . Inflector::camel2words(StringHelper::basename($generator->modelClass))) ?>;
backend/gii/crud/krajee/backend/views/create.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/krajee/backend/views/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/krajee/backend/views/create.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
backend/gii/crud/krajee/backend/views/create.php:    <?= "<?= " ?>$this->render('_form', [
backend/gii/crud/krajee/backend/views/index.php:$this->title = <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>;
backend/gii/crud/krajee/backend/views/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/krajee/backend/views/index.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
backend/gii/crud/krajee/backend/views/index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? "// " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
backend/themes/adminlte/views/site/index.php:$this->title = 'My Yii Application';
backend/themes/adminlte/views/site/login.php:$this->title = 'Login';
backend/themes/adminlte/views/site/login.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/krajee/backend/views/update.php:$this->title = <?= $generator->generateString('Update {modelClass}: ', ['modelClass' => Inflector::camel2words(StringHelper::basename($generator->modelClass))]) ?> . ' ' . $model-><?= $generator->getNameAttribute() ?>;
backend/gii/crud/krajee/backend/views/update.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/krajee/backend/views/update.php:$this->params['breadcrumbs'][] = ['label' => $model-><?= $generator->getNameAttribute() ?>, 'url' => ['view', <?= $urlParams ?>]];
backend/gii/crud/krajee/backend/views/update.php:$this->params['breadcrumbs'][] = <?= $generator->generateString('Update') ?>;
backend/gii/crud/krajee/backend/views/update.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
backend/gii/crud/krajee/backend/views/update.php:    <?= "<?= " ?>$this->render('_form', [
backend/gii/crud/krajee/backend/controller.php:        return $this->render('index', [
backend/gii/crud/krajee/backend/controller.php:        return $this->render('index', [
backend/gii/crud/krajee/backend/controller.php:        return $this->render('view', [
backend/gii/crud/krajee/backend/controller.php:            'model' => $this->findModel(<?= $actionParams ?>),
backend/gii/crud/krajee/backend/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
backend/gii/crud/krajee/backend/controller.php:            return $this->render('create', [
backend/gii/crud/krajee/backend/controller.php:        $model = $this->findModel(<?= $actionParams ?>);
backend/gii/crud/krajee/backend/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
backend/gii/crud/krajee/backend/controller.php:            return $this->render('update', [
backend/gii/crud/krajee/backend/controller.php:        $this->findModel(<?= $actionParams ?>)->delete();
backend/gii/crud/krajee/backend/controller.php:        return $this->redirect(['index']);
backend/themes/adminlte/views/layouts/main0.php:<?php $this->beginPage() ?>
backend/themes/adminlte/views/layouts/main0.php:    <title><?= Html::encode($this->title) ?></title>
backend/themes/adminlte/views/layouts/main0.php:    <?php $this->head() ?>
backend/themes/adminlte/views/layouts/main0.php:    <?php $this->beginBody() ?>
backend/themes/adminlte/views/layouts/main0.php:            'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],
backend/themes/adminlte/views/layouts/main0.php:    <?php $this->endBody() ?>
backend/themes/adminlte/views/layouts/main0.php:<?php $this->endPage() ?>
backend/themes/easyui/views/migration/index.php:$this->title = 'Migrations';
backend/themes/easyui/views/migration/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/easyui/views/migration/index.php:    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>
backend/themes/easyui/views/migration/index.php:    <?php  echo $this->render('_search', ['model' => $searchModel]); ?>
backend/themes/easyui/views/migration/create.php:$this->title = 'Create Migration';
backend/themes/easyui/views/migration/create.php:$this->params['breadcrumbs'][] = ['label' => 'Migrations', 'url' => ['index']];
backend/themes/easyui/views/migration/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/easyui/views/migration/create.php:    <div class="easyui-panel" title="<?= Html::encode($this->title) ?>" style="width:100%;padding:10px;">
backend/themes/easyui/views/migration/create.php:    <?= $this->render('_form', [
backend/themes/easyui/views/migration/view.php:$this->title = $model->version;
backend/themes/easyui/views/migration/view.php:$this->params['breadcrumbs'][] = ['label' => 'Migrations', 'url' => ['index']];
backend/themes/easyui/views/migration/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/default/views/view.php:$this->title = $model-><?= $generator->getNameAttribute() ?>;
backend/gii/crud/easyui/templates/default/views/view.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/easyui/templates/default/views/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/default/views/create.php:$this->title = <?= $generator->generateString('Create {modelClass}', ['modelClass' => Inflector::camel2words(StringHelper::basename($generator->modelClass))]) ?>;
backend/gii/crud/easyui/templates/default/views/create.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/easyui/templates/default/views/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/default/views/create.php:    <div class="easyui-panel" title="<?= "<?= " ?>Html::encode($this->title) ?>" style="width:100%;padding:10px;">
backend/gii/crud/easyui/templates/default/views/create.php:    <?= "<?= " ?>$this->render('_form', [
backend/gii/crud/easyui/templates/ajax/views/create.php:$this->title = <?= $generator->generateString('Create {modelClass}', ['modelClass' => Inflector::camel2words(StringHelper::basename($generator->modelClass))]) ?>;
backend/gii/crud/easyui/templates/ajax/views/create.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/easyui/templates/ajax/views/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/ajax/views/create.php:    <div class="easyui-panel" title="<?= "<?= " ?>Html::encode($this->title) ?>" style="width:100%;padding:10px;">
backend/gii/crud/easyui/templates/ajax/views/create.php:    <?= "<?= " ?>$this->render('_form', [
backend/themes/easyui/views/migration/update.php:$this->title = 'Update Migration: ' . ' ' . $model->version;
backend/themes/easyui/views/migration/update.php:$this->params['breadcrumbs'][] = ['label' => 'Migrations', 'url' => ['index']];
backend/themes/easyui/views/migration/update.php:$this->params['breadcrumbs'][] = ['label' => $model->version, 'url' => ['view', 'id' => $model->version]];
backend/themes/easyui/views/migration/update.php:$this->params['breadcrumbs'][] = 'Update';
backend/themes/easyui/views/migration/update.php:    <div class="easyui-panel" title="<?= Html::encode($this->title) ?>" style="width:100%;padding:10px;">
backend/themes/easyui/views/migration/update.php:    <?= $this->render('_form', [
backend/gii/crud/easyui/templates/ajax/views/view.php:$this->title = $model-><?= $generator->getNameAttribute() ?>;
backend/gii/crud/easyui/templates/ajax/views/view.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/easyui/templates/ajax/views/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/default/views/index.php:$this->title = <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>;
backend/gii/crud/easyui/templates/default/views/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/default/views/index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? "// " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
backend/gii/crud/easyui/templates/default/views/index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? " " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
backend/gii/crud/easyui/templates/_layout4cooperation/iframe.php:<?php $this->beginPage() ?>
backend/gii/crud/easyui/templates/_layout4cooperation/iframe.php:    <title><?= Html::encode($this->title) ?></title>
backend/gii/crud/easyui/templates/_layout4cooperation/iframe.php:    <?php $this->head() ?>
backend/gii/crud/easyui/templates/_layout4cooperation/iframe.php:<?php $this->beginBody() ?>
backend/gii/crud/easyui/templates/_layout4cooperation/iframe.php:                <?= '&nbsp;' . Html::encode($this->title) ?>
backend/gii/crud/easyui/templates/_layout4cooperation/iframe.php:            $breadcrumbs = isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [];
backend/gii/crud/easyui/templates/_layout4cooperation/iframe.php:<?php $this->endBody() ?>
backend/gii/crud/easyui/templates/_layout4cooperation/iframe.php:<?php $this->endPage() ?>
backend/gii/crud/easyui/templates/default/views/update.php:$this->title = <?= $generator->generateString('Update {modelClass}: ', ['modelClass' => Inflector::camel2words(StringHelper::basename($generator->modelClass))]) ?> . ' ' . $model-><?= $generator->getNameAttribute() ?>;
backend/gii/crud/easyui/templates/default/views/update.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/easyui/templates/default/views/update.php:$this->params['breadcrumbs'][] = ['label' => $model-><?= $generator->getNameAttribute() ?>, 'url' => ['view', <?= $urlParams ?>]];
backend/gii/crud/easyui/templates/default/views/update.php:$this->params['breadcrumbs'][] = <?= $generator->generateString('Update') ?>;
backend/gii/crud/easyui/templates/default/views/update.php:    <div class="easyui-panel" title="<?= "<?= " ?>Html::encode($this->title) ?>" style="width:100%;padding:10px;">
backend/gii/crud/easyui/templates/default/views/update.php:    <?= "<?= " ?>$this->render('_form', [
backend/themes/easyui/views/admin-menu/view.php:$this->title = $model->name;
backend/themes/easyui/views/admin-menu/view.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/easyui/views/admin-menu/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/ajax/views/update.php:$this->title = <?= $generator->generateString('Update {modelClass}: ', ['modelClass' => Inflector::camel2words(StringHelper::basename($generator->modelClass))]) ?> . ' ' . $model-><?= $generator->getNameAttribute() ?>;
backend/gii/crud/easyui/templates/ajax/views/update.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/easyui/templates/ajax/views/update.php:$this->params['breadcrumbs'][] = ['label' => $model-><?= $generator->getNameAttribute() ?>, 'url' => ['view', <?= $urlParams ?>]];
backend/gii/crud/easyui/templates/ajax/views/update.php:$this->params['breadcrumbs'][] = <?= $generator->generateString('Update') ?>;
backend/gii/crud/easyui/templates/ajax/views/update.php:    <div class="easyui-panel" title="<?= "<?= " ?>Html::encode($this->title) ?>" style="width:100%;padding:10px;">
backend/gii/crud/easyui/templates/ajax/views/update.php:    <?= "<?= " ?>$this->render('_form', [
backend/themes/easyui/views/admin-menu/create.php:$this->title = Yii::t('app', 'Create {modelClass}', [
backend/themes/easyui/views/admin-menu/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/easyui/views/admin-menu/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/easyui/views/admin-menu/create.php:    <div class="easyui-panel" title="<?= Html::encode($this->title) ?>" style="width:100%;padding:10px;">
backend/themes/easyui/views/admin-menu/create.php:    <?= $this->render('_form', [
backend/gii/crud/easyui/templates/_layout4cooperation/main.php:<?php $this->beginPage() ?>
backend/gii/crud/easyui/templates/_layout4cooperation/main.php:    <title><?= Html::encode($this->title) ?></title>
backend/gii/crud/easyui/templates/_layout4cooperation/main.php:    <?php $this->head() ?>
backend/gii/crud/easyui/templates/_layout4cooperation/main.php:<?php $this->beginBody() ?>
backend/gii/crud/easyui/templates/_layout4cooperation/main.php:        <?= '&nbsp;' . Html::encode($this->title) ?>
backend/gii/crud/easyui/templates/_layout4cooperation/main.php:    $breadcrumbs = isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [];
backend/gii/crud/easyui/templates/_layout4cooperation/main.php:<?php $this->endBody() ?>
backend/gii/crud/easyui/templates/_layout4cooperation/main.php:<?php $this->endPage() ?>
backend/themes/easyui/views/admin-menu/index.php:$this->title = Yii::t('app', 'Admin Menus');
backend/themes/easyui/views/admin-menu/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/easyui/views/admin-menu/index.php:    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>
backend/gii/crud/bs3/backend/views/view.php:$this->title = $model-><?= $generator->getNameAttribute() ?>;
backend/gii/crud/bs3/backend/views/view.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/bs3/backend/views/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/bs3/backend/views/view.php:                'headerTitle'=>'<i class="glyphicon glyphicon-eye-open"></i> '.Html::encode($this->title),
backend/gii/crud/bs3/backend/views/view.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
backend/themes/easyui/views/admin-menu/update.php:$this->title = Yii::t('app', 'Update {modelClass}: ', [
backend/themes/easyui/views/admin-menu/update.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/easyui/views/admin-menu/update.php:$this->params['breadcrumbs'][] = ['label' => $model->name, 'url' => ['view', 'id' => $model->id]];
backend/themes/easyui/views/admin-menu/update.php:$this->params['breadcrumbs'][] = Yii::t('app', 'Update');
backend/themes/easyui/views/admin-menu/update.php:    <?= $this->render('_form', [
backend/gii/crud/easyui/templates/_layout4cooperation/main_ajax_tabs.php:<?php $this->beginPage() ?>
backend/gii/crud/easyui/templates/_layout4cooperation/main_ajax_tabs.php:    <title><?= Html::encode($this->title) ?></title>
backend/gii/crud/easyui/templates/_layout4cooperation/main_ajax_tabs.php:    <?php $this->head() ?>
backend/gii/crud/easyui/templates/_layout4cooperation/main_ajax_tabs.php:<?php $this->beginBody() ?>
backend/gii/crud/easyui/templates/_layout4cooperation/main_ajax_tabs.php:        <?= '&nbsp;' . Html::encode($this->title) ?>
backend/gii/crud/easyui/templates/_layout4cooperation/main_ajax_tabs.php:    $breadcrumbs = isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [];
backend/gii/crud/easyui/templates/_layout4cooperation/main_ajax_tabs.php:<?php $this->endBody() ?>
backend/gii/crud/easyui/templates/_layout4cooperation/main_ajax_tabs.php:<?php $this->endPage() ?>
backend/gii/crud/bs3/backend/views/_search.php:            'headerTitle'=>'<i class="glyphicon glyphicon-search"></i> '.Html::encode($this->title),
backend/gii/crud/bs3/backend/views/index.php:$this->title = <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>;
backend/gii/crud/bs3/backend/views/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/bs3/backend/views/index.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
backend/gii/crud/bs3/backend/views/index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? "// " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
backend/gii/crud/bs3/backend/views/index.php:        'headerTitle'=>'<i class="glyphicon glyphicon-th"></i> '.Html::encode($this->title),
backend/gii/crud/bs3/backend/views/create.php:$this->title = <?= $generator->generateString('Create ' . Inflector::camel2words(StringHelper::basename($generator->modelClass))) ?>;
backend/gii/crud/bs3/backend/views/create.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/bs3/backend/views/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/bs3/backend/views/create.php:       'headerTitle'=>'<i class="glyphicon glyphicon-plus"></i> '.Html::encode($this->title),
backend/gii/crud/bs3/backend/views/create.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
backend/gii/crud/bs3/backend/views/create.php:    <?= "<?= " ?>$this->render('_form', [
backend/gii/crud/easyui/templates/ajax/controller.php:        return $this->render('index', [
backend/gii/crud/easyui/templates/ajax/controller.php:        return $this->render('index', [
backend/gii/crud/easyui/templates/ajax/controller.php:        return $this->render('view', [
backend/gii/crud/easyui/templates/ajax/controller.php:            'model' => $this->findModel(<?= $actionParams ?>),
backend/gii/crud/easyui/templates/ajax/controller.php:                return $this->redirect(['view', <?= $urlParams ?>]);
backend/gii/crud/easyui/templates/ajax/controller.php:                $formContent =  $this->renderAjax('_form',[
backend/gii/crud/easyui/templates/ajax/controller.php:                return $this->render('create', [
backend/gii/crud/easyui/templates/ajax/controller.php:        $model = $this->findModel(<?= $actionParams ?>);
backend/gii/crud/easyui/templates/ajax/controller.php:                 return $this->redirect(['view', <?= $urlParams ?>]);
backend/gii/crud/easyui/templates/ajax/controller.php:                $formContent =  $this->renderAjax('_form',[
backend/gii/crud/easyui/templates/ajax/controller.php:                return $this->render('update', [
backend/gii/crud/easyui/templates/ajax/controller.php:        $this->findModel(<?= $actionParams ?>)->delete();
backend/gii/crud/easyui/templates/ajax/controller.php:            return $this->redirect(['index']);
backend/gii/crud/easyui/templates/ajax/views/index.php:$this->title = <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>;
backend/gii/crud/easyui/templates/ajax/views/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/ajax/views/index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? "// " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
backend/gii/crud/easyui/templates/ajax/views/index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? " " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
backend/themes/easyui/views/site/error.php:$this->title = $name;
backend/themes/easyui/views/site/error.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/gii/crud/easyui/templates/default/search.php:        if (!($this->load($params) && $this->validate())) {
backend/gii/crud/easyui/templates/default/controller.php:        return $this->render('index', [
backend/gii/crud/easyui/templates/default/controller.php:        return $this->render('index', [
backend/gii/crud/easyui/templates/default/controller.php:        return $this->render('view', [
backend/gii/crud/easyui/templates/default/controller.php:            'model' => $this->findModel(<?= $actionParams ?>),
backend/gii/crud/easyui/templates/default/controller.php:                return $this->redirect(['view', <?= $urlParams ?>]);
backend/gii/crud/easyui/templates/default/controller.php:                $formContent =  $this->renderAjax('_form',[
backend/gii/crud/easyui/templates/default/controller.php:                return $this->render('create', [
backend/gii/crud/easyui/templates/default/controller.php:        $model = $this->findModel(<?= $actionParams ?>);
backend/gii/crud/easyui/templates/default/controller.php:                 return $this->redirect(['view', <?= $urlParams ?>]);
backend/gii/crud/easyui/templates/default/controller.php:                $formContent =  $this->renderAjax('_form',[
backend/gii/crud/easyui/templates/default/controller.php:                return $this->render('update', [
backend/gii/crud/easyui/templates/default/controller.php:        $this->findModel(<?= $actionParams ?>)->delete();
backend/gii/crud/easyui/templates/default/controller.php:            return $this->redirect(['index']);
backend/themes/easyui/views/layouts/iframe.php:<?php $this->beginPage() ?>
backend/themes/easyui/views/layouts/iframe.php:    <title><?= Html::encode($this->title) ?></title>
backend/themes/easyui/views/layouts/iframe.php:    <?php $this->head() ?>
backend/themes/easyui/views/layouts/iframe.php:<?php $this->beginBody() ?>
backend/themes/easyui/views/layouts/iframe.php:                <?= '&nbsp;' . Html::encode($this->title) ?>
backend/themes/easyui/views/layouts/iframe.php:            $breadcrumbs = isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [];
backend/themes/easyui/views/layouts/iframe.php:<?php $this->endBody() ?>
backend/themes/easyui/views/layouts/iframe.php:<?php $this->endPage() ?>
backend/themes/easyui/views/layouts/main_v0.php:<?php $this->beginPage() ?>
backend/themes/easyui/views/layouts/main_v0.php:    <title><?= Html::encode($this->title) ?></title>
backend/themes/easyui/views/layouts/main_v0.php:    <?php $this->head() ?>
backend/themes/easyui/views/layouts/main_v0.php:<?php $this->beginBody() ?>
backend/themes/easyui/views/layouts/main_v0.php:                <?= '&nbsp;' . Html::encode($this->title) ?>
backend/themes/easyui/views/layouts/main_v0.php:            $breadcrumbs = isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [];
backend/themes/easyui/views/layouts/main_v0.php:<?php $this->endBody() ?>
backend/themes/easyui/views/layouts/main_v0.php:<?php $this->endPage() ?>
backend/gii/crud/easyui/templates/ajax/search.php:        if (!($this->load($params) && $this->validate())) {
backend/themes/easyui/views/layouts/main_v2.php:<?php $this->beginPage() ?>
backend/themes/easyui/views/layouts/main_v2.php:    <title><?= Html::encode($this->title) ?></title>
backend/themes/easyui/views/layouts/main_v2.php:    <?php $this->head() ?>
backend/themes/easyui/views/layouts/main_v2.php:<?php $this->beginBody() ?>
backend/themes/easyui/views/layouts/main_v2.php:        <?= '&nbsp;' . Html::encode($this->title) ?>
backend/themes/easyui/views/layouts/main_v2.php:    $breadcrumbs = isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [];
backend/themes/easyui/views/layouts/main_v2.php:<?php $this->endBody() ?>
backend/themes/easyui/views/layouts/main_v2.php:<?php $this->endPage() ?>
backend/themes/easyui/views/site/index.php:$this->title = 'My Yii Application';
backend/gii/crud/bs3/backend-dolphin/views/_search.php:            'headerTitle'=>'<i class="glyphicon glyphicon-search"></i> '.Html::encode($this->title),
backend/gii/crud/bs3/backend-dolphin/views/batch-update.php:$this->title = <?= $generator->generateString('batch update {modelClass}', ['modelClass' => Inflector::camel2words(StringHelper::basename($generator->modelClass))]) ?>;
backend/gii/crud/bs3/backend-dolphin/views/batch-update.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/bs3/backend-dolphin/views/batch-update.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/bs3/backend-dolphin/views/index.php:$this->title = <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>;
backend/gii/crud/bs3/backend-dolphin/views/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/bs3/backend-dolphin/views/index.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
backend/gii/crud/bs3/backend-dolphin/views/index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? "// " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
backend/gii/crud/bs3/backend-dolphin/views/view.php:$this->title = $model-><?= $generator->getNameAttribute() ?>;
backend/gii/crud/bs3/backend-dolphin/views/view.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/bs3/backend-dolphin/views/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/bs3/backend-dolphin/views/view.php:                'headerTitle'=>'<i class="glyphicon glyphicon-eye-open"></i> '.Html::encode($this->title),
backend/gii/crud/bs3/backend-dolphin/views/view.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
backend/gii/crud/bs3/backend-dolphin/controller.php:        return $this->render('index', [
backend/gii/crud/bs3/backend-dolphin/controller.php:        return $this->render('index', [
backend/gii/crud/bs3/backend-dolphin/controller.php:        return $this->render('view', [
backend/gii/crud/bs3/backend-dolphin/controller.php:            'model' => $this->findModel(<?= $actionParams ?>),
backend/gii/crud/bs3/backend-dolphin/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
backend/gii/crud/bs3/backend-dolphin/controller.php:            return $this->render('create', [
backend/gii/crud/bs3/backend-dolphin/controller.php:        $model = $this->findModel(<?= $actionParams ?>);
backend/gii/crud/bs3/backend-dolphin/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
backend/gii/crud/bs3/backend-dolphin/controller.php:            return $this->render('update', [
backend/gii/crud/bs3/backend-dolphin/controller.php:        $this->findModel(<?= $actionParams ?>)->delete();
backend/gii/crud/bs3/backend-dolphin/controller.php:        return $this->redirect(['index']);
backend/gii/crud/bs3/backend-dolphin/controller.php:        $items = $this->getItemsToUpdate();
backend/gii/crud/bs3/backend-dolphin/controller.php:              return $this->redirect(['index']); // redirect to your next desired page
backend/gii/crud/bs3/backend-dolphin/controller.php:            return $this->redirect(['index']); // redirect to your next desired page
backend/gii/crud/bs3/backend-dolphin/controller.php:            return $this->render('batch-update', [
backend/themes/easyui/views/user/view.php:$this->title = $model->id;
backend/themes/easyui/views/user/view.php:$this->params['breadcrumbs'][] = ['label' => 'Users', 'url' => ['index']];
backend/themes/easyui/views/user/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/easyui/views/user/create.php:$this->title = 'Create User';
backend/themes/easyui/views/user/create.php:$this->params['breadcrumbs'][] = ['label' => 'Users', 'url' => ['index']];
backend/themes/easyui/views/user/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/easyui/views/user/create.php:    <div class="easyui-panel" title="<?= Html::encode($this->title) ?>" style="width:100%;padding:10px;">
backend/themes/easyui/views/user/create.php:    <?= $this->render('_form', [
backend/gii/crud/bs3/backend-dolphin/views/update.php:$this->title = <?= $generator->generateString('Update {modelClass}: ', ['modelClass' => Inflector::camel2words(StringHelper::basename($generator->modelClass))]) ?> . ' ' . $model-><?= $generator->getNameAttribute() ?>;
backend/gii/crud/bs3/backend-dolphin/views/update.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/bs3/backend-dolphin/views/update.php:$this->params['breadcrumbs'][] = ['label' => $model-><?= $generator->getNameAttribute() ?>, 'url' => ['view', <?= $urlParams ?>]];
backend/gii/crud/bs3/backend-dolphin/views/update.php:$this->params['breadcrumbs'][] = <?= $generator->generateString('Update') ?>;
backend/gii/crud/bs3/backend-dolphin/views/update.php:         'headerTitle'=>'<i class="glyphicon glyphicon-edit"></i> '.Html::encode($this->title),
backend/gii/crud/bs3/backend-dolphin/views/update.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
backend/gii/crud/bs3/backend-dolphin/views/update.php:    <?= "<?= " ?>$this->render('_form', [
backend/themes/easyui/views/site/login.php:$this->title = 'Login';
backend/themes/easyui/views/site/login.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/easyui/views/site/login.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/gii/crud/bs3/backend-dolphin/search.php:        $this->load($params);
backend/gii/crud/bs3/backend-dolphin/search.php:        if (!$this->validate()) {
backend/gii/crud/bs3/backend/search.php:        $this->load($params);
backend/gii/crud/bs3/backend/search.php:        if (!$this->validate()) {
backend/gii/crud/bs3/backend/controller.php:        return $this->render('index', [
backend/gii/crud/bs3/backend/controller.php:        return $this->render('index', [
backend/gii/crud/bs3/backend/controller.php:        return $this->render('view', [
backend/gii/crud/bs3/backend/controller.php:            'model' => $this->findModel(<?= $actionParams ?>),
backend/gii/crud/bs3/backend/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
backend/gii/crud/bs3/backend/controller.php:            return $this->render('create', [
backend/gii/crud/bs3/backend/controller.php:        $model = $this->findModel(<?= $actionParams ?>);
backend/gii/crud/bs3/backend/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
backend/gii/crud/bs3/backend/controller.php:            return $this->render('update', [
backend/gii/crud/bs3/backend/controller.php:        $this->findModel(<?= $actionParams ?>)->delete();
backend/gii/crud/bs3/backend/controller.php:        return $this->redirect(['index']);
backend/themes/adminlte/views/layouts/_main.php:<?php $this->beginPage() ?>
backend/themes/adminlte/views/layouts/_main.php:    <title><?= Html::encode($this->title) ?></title>
backend/themes/adminlte/views/layouts/_main.php:    <?php $this->head() ?>
backend/themes/adminlte/views/layouts/_main.php:<?php $this->beginBody() ?>
backend/themes/adminlte/views/layouts/_main.php:                <?= Html::encode(isset($this->params['h1']) ? $this->params['h1'] : $this->title) ?>
backend/themes/adminlte/views/layouts/_main.php:            <?php if (isset($this->params['breadcrumbs'])): ?>
backend/themes/adminlte/views/layouts/_main.php:                        'links' => $this->params['breadcrumbs'],
backend/themes/adminlte/views/layouts/_main.php:<?php $this->endBody() ?>
backend/themes/adminlte/views/layouts/_main.php:<?php $this->endPage() ?>
backend/themes/easyui/views/user/index.php:$this->title = 'Users';
backend/themes/easyui/views/user/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/easyui/views/user/index.php:    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>
backend/themes/easyui/views/user/index.php:    <?php  echo $this->render('_search', ['model' => $searchModel]); ?>
backend/themes/easyui/views/user/update.php:$this->title = 'Update User: ' . ' ' . $model->id;
backend/themes/easyui/views/user/update.php:$this->params['breadcrumbs'][] = ['label' => 'Users', 'url' => ['index']];
backend/themes/easyui/views/user/update.php:$this->params['breadcrumbs'][] = ['label' => $model->id, 'url' => ['view', 'id' => $model->id]];
backend/themes/easyui/views/user/update.php:$this->params['breadcrumbs'][] = 'Update';
backend/themes/easyui/views/user/update.php:    <div class="easyui-panel" title="<?= Html::encode($this->title) ?>" style="width:100%;padding:10px;">
backend/themes/easyui/views/user/update.php:    <?= $this->render('_form', [
backend/gii/crud/easyui/templates/default_v1/search.php:        if (!($this->load($params) && $this->validate())) {
backend/gii/crud/easyui/templates/default_v1/controller.php:        return $this->render('index', [
backend/gii/crud/easyui/templates/default_v1/controller.php:        return $this->render('index', [
backend/gii/crud/easyui/templates/default_v1/controller.php:        return $this->render('view', [
backend/gii/crud/easyui/templates/default_v1/controller.php:            'model' => $this->findModel(<?= $actionParams ?>),
backend/gii/crud/easyui/templates/default_v1/controller.php:                return $this->redirect(['view', <?= $urlParams ?>]);
backend/gii/crud/easyui/templates/default_v1/controller.php:                $formContent =  $this->renderAjax('_form',[
backend/gii/crud/easyui/templates/default_v1/controller.php:                return $this->render('create', [
backend/gii/crud/easyui/templates/default_v1/controller.php:        $model = $this->findModel(<?= $actionParams ?>);
backend/gii/crud/easyui/templates/default_v1/controller.php:                 return $this->redirect(['view', <?= $urlParams ?>]);
backend/gii/crud/easyui/templates/default_v1/controller.php:                $formContent =  $this->renderAjax('_form',[
backend/gii/crud/easyui/templates/default_v1/controller.php:                return $this->render('update', [
backend/gii/crud/easyui/templates/default_v1/controller.php:        $this->findModel(<?= $actionParams ?>)->delete();
backend/gii/crud/easyui/templates/default_v1/controller.php:            return $this->redirect(['index']);
backend/gii/crud/easyui/templates/old/views/_index.php:$this->title = <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>;
backend/gii/crud/easyui/templates/old/views/_index.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/old/views/_index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? "// " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
backend/gii/crud/easyui/templates/old/views/index.php:$this->title = <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>;
backend/gii/crud/easyui/templates/old/views/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/old/views/index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? "// " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
backend/gii/crud/easyui/templates/default_v1/views/view.php:$this->title = $model-><?= $generator->getNameAttribute() ?>;
backend/gii/crud/easyui/templates/default_v1/views/view.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/easyui/templates/default_v1/views/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/default_v1/views/create.php:$this->title = <?= $generator->generateString('Create {modelClass}', ['modelClass' => Inflector::camel2words(StringHelper::basename($generator->modelClass))]) ?>;
backend/gii/crud/easyui/templates/default_v1/views/create.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/easyui/templates/default_v1/views/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/default_v1/views/create.php:    <div class="easyui-panel" title="<?= "<?= " ?>Html::encode($this->title) ?>" style="width:100%;padding:10px;">
backend/gii/crud/easyui/templates/default_v1/views/create.php:    <?= "<?= " ?>$this->render('_form', [
backend/gii/crud/easyui/templates/default_v1/views/index_v2.php:$this->title = <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>;
backend/gii/crud/easyui/templates/default_v1/views/index_v2.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/default_v1/views/index_v2.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? "// " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
backend/gii/crud/easyui/templates/default_v1/views/index_v2.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? " " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
backend/gii/crud/bs3/backend/views/update.php:$this->title = <?= $generator->generateString('Update {modelClass}: ', ['modelClass' => Inflector::camel2words(StringHelper::basename($generator->modelClass))]) ?> . ' ' . $model-><?= $generator->getNameAttribute() ?>;
backend/gii/crud/bs3/backend/views/update.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/bs3/backend/views/update.php:$this->params['breadcrumbs'][] = ['label' => $model-><?= $generator->getNameAttribute() ?>, 'url' => ['view', <?= $urlParams ?>]];
backend/gii/crud/bs3/backend/views/update.php:$this->params['breadcrumbs'][] = <?= $generator->generateString('Update') ?>;
backend/gii/crud/bs3/backend/views/update.php:         'headerTitle'=>'<i class="glyphicon glyphicon-edit"></i> '.Html::encode($this->title),
backend/gii/crud/bs3/backend/views/update.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
backend/gii/crud/bs3/backend/views/update.php:    <?= "<?= " ?>$this->render('_form', [
backend/themes/easyui/views/layouts/main.php:<?php $this->beginPage() ?>
backend/themes/easyui/views/layouts/main.php:    <title><?= Html::encode($this->title) ?></title>
backend/themes/easyui/views/layouts/main.php:    <?php $this->head() ?>
backend/themes/easyui/views/layouts/main.php:<?php $this->beginBody() ?>
backend/themes/easyui/views/layouts/main.php:        <?= '&nbsp;' . Html::encode($this->title) ?>
backend/themes/easyui/views/layouts/main.php:    $breadcrumbs = isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [];
backend/themes/easyui/views/layouts/main.php:<?php $this->endBody() ?>
backend/themes/easyui/views/layouts/main.php:<?php $this->endPage() ?>
backend/themes/adminlte/views/layouts/main.php:$this->beginContent(__DIR__.'/_main.php')
backend/themes/adminlte/views/layouts/main.php:<?= $this->render('header') ?>
backend/themes/adminlte/views/layouts/main.php:                'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],
backend/themes/adminlte/views/layouts/main.php:<?= $this->render('footer'); ?>
backend/themes/adminlte/views/layouts/main.php:<?php $this->endContent() ?>
backend/themes/adminlte/views/layouts/login.php:$this->beginContent('@backend/themes/bootstrap/views/layouts/_main.php')
backend/themes/adminlte/views/layouts/login.php:<?= $this->render('header',[
backend/themes/adminlte/views/layouts/login.php:<?= $this->render('footer',[
backend/themes/adminlte/views/layouts/login.php:<?php $this->endContent() ?>
backend/gii/crud/bs3/backend-dolphin/views/create.php:$this->title = <?= $generator->generateString('Create ' . Inflector::camel2words(StringHelper::basename($generator->modelClass))) ?>;
backend/gii/crud/bs3/backend-dolphin/views/create.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/bs3/backend-dolphin/views/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/bs3/backend-dolphin/views/create.php:       'headerTitle'=>'<i class="glyphicon glyphicon-plus"></i> '.Html::encode($this->title),
backend/gii/crud/bs3/backend-dolphin/views/create.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
backend/gii/crud/bs3/backend-dolphin/views/create.php:    <?= "<?= " ?>$this->render('_form', [
backend/gii/crud/easyui/templates/default_v1/views/index.php:$this->title = <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>;
backend/gii/crud/easyui/templates/default_v1/views/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/gii/crud/easyui/templates/default_v1/views/index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? "// " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
backend/gii/crud/easyui/templates/default_v1/views/index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? " " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
backend/gii/crud/easyui/templates/default_v1/views/update.php:$this->title = <?= $generator->generateString('Update {modelClass}: ', ['modelClass' => Inflector::camel2words(StringHelper::basename($generator->modelClass))]) ?> . ' ' . $model-><?= $generator->getNameAttribute() ?>;
backend/gii/crud/easyui/templates/default_v1/views/update.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
backend/gii/crud/easyui/templates/default_v1/views/update.php:$this->params['breadcrumbs'][] = ['label' => $model-><?= $generator->getNameAttribute() ?>, 'url' => ['view', <?= $urlParams ?>]];
backend/gii/crud/easyui/templates/default_v1/views/update.php:$this->params['breadcrumbs'][] = <?= $generator->generateString('Update') ?>;
backend/gii/crud/easyui/templates/default_v1/views/update.php:    <div class="easyui-panel" title="<?= "<?= " ?>Html::encode($this->title) ?>" style="width:100%;padding:10px;">
backend/gii/crud/easyui/templates/default_v1/views/update.php:    <?= "<?= " ?>$this->render('_form', [
backend/controllers/AdminMenuController.php:        return $this->render('index', [
backend/controllers/AdminMenuController.php:        return $this->render('view', [
backend/controllers/AdminMenuController.php:            'model' => $this->findModel($id),
backend/controllers/AdminMenuController.php:            return $this->redirect(['view', 'id' => $model->id]);
backend/controllers/AdminMenuController.php:                $formContent =  $this->renderAjax('_form',[
backend/controllers/AdminMenuController.php:                return $this->render('create', [
backend/controllers/AdminMenuController.php:        $model = $this->findModel($id);
backend/controllers/AdminMenuController.php:            return $this->redirect(['view', 'id' => $model->id]);
backend/controllers/AdminMenuController.php:            return $this->render('update', [
backend/controllers/AdminMenuController.php:        $this->findModel($id)->delete();
backend/controllers/AdminMenuController.php:        return $this->redirect(['index']);
backend/views/site/vue-naiveui.php:// $this->registerJsFile('https://cdn.jsdelivr.net/npm/vue3-sfc-loader/dist/vue3-sfc-loader.js',[]);
backend/themes/bootstrap/views/layouts/main.php:$this->beginContent('@backend/themes/bootstrap/views/layouts/_main.php')
backend/themes/bootstrap/views/layouts/main.php:<?= $this->render('header') ?>
backend/themes/bootstrap/views/layouts/main.php:                'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],
backend/themes/bootstrap/views/layouts/main.php:<?= $this->render('footer'); ?>
backend/themes/bootstrap/views/layouts/main.php:<?php $this->endContent() ?>
backend/themes/bootstrap/views/site/login.php:$this->title = 'Login';
backend/themes/bootstrap/views/site/login.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/bootstrap/views/site/login0.php:$this->title = 'Login';
backend/themes/bootstrap/views/site/login0.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/bootstrap/views/site/login0.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/bootstrap/views/site/error.php:$this->title = $name;
backend/themes/bootstrap/views/site/error.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/bootstrap/views/site/index.php:$this->title = 'My Yii Application';
backend/themes/bootstrap/views/admin-menu/create.php:$this->title = Yii::t('app', 'Create Admin Menu');
backend/themes/bootstrap/views/admin-menu/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/bootstrap/views/admin-menu/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/bootstrap/views/admin-menu/create.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/bootstrap/views/admin-menu/create.php:    <?= $this->render('_form', [
backend/themes/bootstrap/views/admin-menu/view.php:$this->title = $model->name;
backend/themes/bootstrap/views/admin-menu/view.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/bootstrap/views/admin-menu/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/bootstrap/views/admin-menu/view.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/bootstrap/views/admin-menu/tree-view/_form.php:    return $this->render($nodeAddlViews[$part], $p);
backend/views/site/vue-components.php:// $this->registerJsFile('https://cdn.jsdelivr.net/npm/vue3-sfc-loader/dist/vue3-sfc-loader.js',[]);
backend/themes/bootstrap/views/admin-menu/index.php:$this->title = Yii::t('app', 'Admin Menus');
backend/themes/bootstrap/views/admin-menu/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/bootstrap/views/admin-menu/index.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/bootstrap/views/admin-menu/index.php:    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>
backend/views/site/error.php:$this->title = $name;
backend/views/site/error.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/bootstrap/views/layouts/main0.php:<?php $this->beginPage() ?>
backend/themes/bootstrap/views/layouts/main0.php:    <title><?= Html::encode($this->title) ?></title>
backend/themes/bootstrap/views/layouts/main0.php:    <?php $this->head() ?>
backend/themes/bootstrap/views/layouts/main0.php:    <?php $this->beginBody() ?>
backend/themes/bootstrap/views/layouts/main0.php:            'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],
backend/themes/bootstrap/views/layouts/main0.php:    <?php $this->endBody() ?>
backend/themes/bootstrap/views/layouts/main0.php:<?php $this->endPage() ?>
backend/themes/bootstrap/views/admin-menu/update.php:$this->title = Yii::t('app', 'Update {modelClass}: ', [
backend/themes/bootstrap/views/admin-menu/update.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/bootstrap/views/admin-menu/update.php:$this->params['breadcrumbs'][] = ['label' => $model->name, 'url' => ['view', 'id' => $model->id]];
backend/themes/bootstrap/views/admin-menu/update.php:$this->params['breadcrumbs'][] = Yii::t('app', 'Update');
backend/themes/bootstrap/views/admin-menu/update.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/bootstrap/views/admin-menu/update.php:    <?= $this->render('_form', [
backend/views/site/index.php:$this->title = 'My Yii Application';
backend/themes/bootstrap/views/layouts/_main.php:<?php $this->beginPage() ?>
backend/themes/bootstrap/views/layouts/_main.php:        <title><?= Html::encode($this->title) ?></title>
backend/themes/bootstrap/views/layouts/_main.php:        <?php $this->head() ?>
backend/themes/bootstrap/views/layouts/_main.php:    <?php $this->beginBody() ?>
backend/themes/bootstrap/views/layouts/_main.php:    <?php $this->endBody() ?>
backend/themes/bootstrap/views/layouts/_main.php:<?php $this->endPage() ?>
backend/views/site/login.php:$this->title = 'Login';
backend/views/site/login.php:$this->params['breadcrumbs'][] = $this->title;
backend/views/site/login.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/bootstrap/views/layouts/login.php:$this->beginContent('@backend/themes/bootstrap/views/layouts/_main.php')
backend/themes/bootstrap/views/layouts/login.php:<?= $this->render('header',[
backend/themes/bootstrap/views/layouts/login.php:<?= $this->render('footer',[
backend/themes/bootstrap/views/layouts/login.php:<?php $this->endContent() ?>
backend/views/site/vue-sfc.php:// $this->registerJsFile('https://cdn.jsdelivr.net/npm/vue3-sfc-loader/dist/vue3-sfc-loader.js',[]);
backend/views/admin-menu/tree-view/_form.php:    return $this->render($nodeAddlViews[$part], $p);
backend/themes/gentelella/views/admin-menu/tree-view/_form.php:    return $this->render($nodeAddlViews[$part], $p);
backend/themes/adminlte2/views/admin-menu/update.php:$this->title = Yii::t('app', 'Update {modelClass}: ', [
backend/themes/adminlte2/views/admin-menu/update.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/adminlte2/views/admin-menu/update.php:$this->params['breadcrumbs'][] = ['label' => $model->name, 'url' => ['view', 'id' => $model->id]];
backend/themes/adminlte2/views/admin-menu/update.php:$this->params['breadcrumbs'][] = Yii::t('app', 'Update');
backend/themes/adminlte2/views/admin-menu/update.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/adminlte2/views/admin-menu/update.php:    <?= $this->render('_form', [
backend/themes/adminlte2/views/admin-menu/view.php:$this->title = $model->name;
backend/themes/adminlte2/views/admin-menu/view.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/adminlte2/views/admin-menu/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/adminlte2/views/admin-menu/view.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/adminlte2/views/layouts/main-login.php:<?php $this->beginPage() ?>
backend/themes/adminlte2/views/layouts/main-login.php:    <title><?= Html::encode($this->title) ?></title>
backend/themes/adminlte2/views/layouts/main-login.php:    <?php $this->head() ?>
backend/themes/adminlte2/views/layouts/main-login.php:<?php $this->beginBody() ?>
backend/themes/adminlte2/views/layouts/main-login.php:<?php $this->endBody() ?>
backend/themes/adminlte2/views/layouts/main-login.php:<?php $this->endPage() ?>
backend/themes/adminlte2/views/site/error.php:$this->title = $name;
backend/themes/adminlte2/views/admin-menu/index.php:$this->title = Yii::t('app', 'Admin Menus');
backend/themes/adminlte2/views/admin-menu/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/adminlte2/views/admin-menu/index.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/adminlte2/views/admin-menu/index.php:    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>
backend/themes/adminlte2/views/site/login.php:$this->title = 'Sign In';
backend/themes/adminlte2/views/layouts/main.php: * Instead, use the code  $this->layout = '//main-login'; in your controller.
backend/themes/adminlte2/views/layouts/main.php:    echo $this->render(
backend/themes/adminlte2/views/layouts/main.php:    <?php $this->beginPage() ?>
backend/themes/adminlte2/views/layouts/main.php:        <title><?= Html::encode($this->title) ?></title>
backend/themes/adminlte2/views/layouts/main.php:        <?php $this->head() ?>
backend/themes/adminlte2/views/layouts/main.php:    <?php $this->beginBody() ?>
backend/themes/adminlte2/views/layouts/main.php:        <?= $this->render(
backend/themes/adminlte2/views/layouts/main.php:        <?= $this->render(
backend/themes/adminlte2/views/layouts/main.php:        <?= $this->render(
backend/themes/adminlte2/views/layouts/main.php:    <?php $this->endBody() ?>
backend/themes/adminlte2/views/layouts/main.php:    <?php $this->endPage() ?>
backend/themes/adminlte2/views/admin-menu/tree-view/_form.php:    return $this->render($nodeAddlViews[$part], $p);
backend/themes/adminlte2/views/layouts/content.php:        <?php if (isset($this->blocks['content-header'])) { ?>
backend/themes/adminlte2/views/layouts/content.php:            <h1><?= $this->blocks['content-header'] ?></h1>
backend/themes/adminlte2/views/layouts/content.php:                if ($this->title !== null) {
backend/themes/adminlte2/views/layouts/content.php:                    echo \yii\helpers\Html::encode($this->title);
backend/themes/adminlte2/views/layouts/content.php:                        \yii\helpers\Inflector::id2camel($this->context->module->id)
backend/themes/adminlte2/views/layouts/content.php:                    echo ($this->context->module->id !== \Yii::$app->id) ? '<small>Module</small>' : '';
backend/themes/adminlte2/views/layouts/content.php:                'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],
backend/themes/adminlte2/views/admin-menu/create.php:$this->title = Yii::t('app', 'Create Admin Menu');
backend/themes/adminlte2/views/admin-menu/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/adminlte2/views/admin-menu/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/adminlte2/views/admin-menu/create.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/adminlte2/views/admin-menu/create.php:    <?= $this->render('_form', [
backend/themes/gentelella/views/admin-menu/view.php:$this->title = $model->name;
backend/themes/gentelella/views/admin-menu/view.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/gentelella/views/admin-menu/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/gentelella/views/admin-menu/view.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/views/admin-menu/index.php:$this->title = Yii::t('app', 'Admin Menus');
backend/views/admin-menu/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/views/admin-menu/index.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/views/admin-menu/index.php:    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>
backend/themes/gentelella/views/admin-menu/index.php:$this->title = Yii::t('app', 'Admin Menus');
backend/themes/gentelella/views/admin-menu/index.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/gentelella/views/admin-menu/index.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/gentelella/views/admin-menu/index.php:    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>
backend/themes/gentelella/views/admin-menu/update.php:$this->title = Yii::t('app', 'Update {modelClass}: ', [
backend/themes/gentelella/views/admin-menu/update.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/gentelella/views/admin-menu/update.php:$this->params['breadcrumbs'][] = ['label' => $model->name, 'url' => ['view', 'id' => $model->id]];
backend/themes/gentelella/views/admin-menu/update.php:$this->params['breadcrumbs'][] = Yii::t('app', 'Update');
backend/themes/gentelella/views/admin-menu/update.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/gentelella/views/admin-menu/update.php:    <?= $this->render('_form', [
backend/views/admin-menu/create.php:$this->title = Yii::t('app', 'Create Admin Menu');
backend/views/admin-menu/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/views/admin-menu/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/views/admin-menu/create.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/views/admin-menu/create.php:    <?= $this->render('_form', [
backend/views/admin-menu/update.php:$this->title = Yii::t('app', 'Update {modelClass}: ', [
backend/views/admin-menu/update.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/views/admin-menu/update.php:$this->params['breadcrumbs'][] = ['label' => $model->name, 'url' => ['view', 'id' => $model->id]];
backend/views/admin-menu/update.php:$this->params['breadcrumbs'][] = Yii::t('app', 'Update');
backend/views/admin-menu/update.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/views/admin-menu/update.php:    <?= $this->render('_form', [
backend/controllers/MigrationController.php:        return $this->render('index', [
backend/controllers/MigrationController.php:        return $this->render('view', [
backend/controllers/MigrationController.php:            'model' => $this->findModel($id),
backend/controllers/MigrationController.php:                return $this->redirect(['view', 'id' => $model->version]);
backend/controllers/MigrationController.php:                $formContent =  $this->renderAjax('_form',[
backend/controllers/MigrationController.php:                return $this->render('create', [
backend/controllers/MigrationController.php:        $model = $this->findModel($id);
backend/controllers/MigrationController.php:                 return $this->redirect(['view', 'id' => $model->version]);
backend/controllers/MigrationController.php:                $formContent =  $this->renderAjax('_form',[
backend/controllers/MigrationController.php:                return $this->render('update', [
backend/controllers/MigrationController.php:        $this->findModel($id)->delete();
backend/controllers/MigrationController.php:            return $this->redirect(['index']);
backend/controllers/UserController.php:        return $this->render('index', [
backend/controllers/UserController.php:        return $this->render('view', [
backend/controllers/UserController.php:            'model' => $this->findModel($id),
backend/controllers/UserController.php:                return $this->redirect(['view', 'id' => $model->id]);
backend/controllers/UserController.php:                $formContent =  $this->renderAjax('_form',[
backend/controllers/UserController.php:                return $this->render('create', [
backend/controllers/UserController.php:        $model = $this->findModel($id);
backend/controllers/UserController.php:                 return $this->redirect(['view', 'id' => $model->id]);
backend/controllers/UserController.php:                $formContent =  $this->renderAjax('_form',[
backend/controllers/UserController.php:                return $this->render('update', [
backend/controllers/UserController.php:        $this->findModel($id)->delete();
backend/controllers/UserController.php:            return $this->redirect(['index']);
backend/controllers/SiteController.php:        return $this->render('index');
backend/controllers/SiteController.php:            return $this->goHome();
backend/controllers/SiteController.php:        $this->layout = 'login' ;
backend/controllers/SiteController.php:            return $this->goBack();
backend/controllers/SiteController.php:            return $this->render('login', [
backend/controllers/SiteController.php:        return $this->goHome();
backend/controllers/SiteController.php://        $config1 = $this->returnConfig() ;
backend/controllers/SiteController.php:    //    $this->renderContent($result) ;
backend/controllers/SiteController.php://        return $this->renderContent(dump($result));
backend/controllers/SiteController.php:            return $this->render($to);
backend/controllers/SiteController.php:            return $this->render('vue-form');
backend/controllers/SiteController.php:            return $this->render('vue-router');
backend/controllers/SiteController.php:            return $this->render('vue-sfc');
backend/controllers/SiteController.php:        return $this->render('vue');
backend/controllers/DynamicController.php:        //        if ($this->modelClass === null) {
backend/controllers/DynamicController.php:        $this->setViewPath(sprintf("@backend/runtime/dynamic/views/%s/%s",static::$dbID,static::$tableName)  );
backend/controllers/DynamicController.php:        return $this->render('index', [
backend/controllers/DynamicController.php:        return $this->render('view', [
backend/controllers/DynamicController.php:            'model' => $this->findModel($id),
backend/controllers/DynamicController.php:        if ($this->request->isPost) {
backend/controllers/DynamicController.php:            if ($model->load($this->request->post()) && $model->save()) {
backend/controllers/DynamicController.php:                return $this->redirect(['view', 'id' => $model->id]);
backend/controllers/DynamicController.php:        return $this->render('create', [
backend/controllers/DynamicController.php:        $model = $this->findModel($id);
backend/controllers/DynamicController.php:        if ($this->request->isPost && $model->load($this->request->post()) && $model->save()) {
backend/controllers/DynamicController.php:            return $this->redirect(['view', 'id' => $model->id]);
backend/controllers/DynamicController.php:        return $this->render('update', [
backend/controllers/DynamicController.php:        $this->findModel($id)->delete();
backend/controllers/DynamicController.php:        return $this->redirect(['index']);
backend/themes/gentelella/views/site/error.php:$this->title = $name;
backend/themes/gentelella/views/site/error.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/gentelella/views/site/index.php:$this->title = 'My Yii Application';
backend/themes/gentelella/views/site/login.php:$this->title = 'Login';
backend/themes/gentelella/views/site/login.php:$this->params['breadcrumbs'][] = $this->title;
backend/components/DbMan.php:        // print_r($this->getDatabases()) ;
backend/components/DbMan.php:        $dbNames = $this->getDatabases() ;
backend/themes/gentelella/views/layouts/main0.php:<?php $this->beginPage() ?>
backend/themes/gentelella/views/layouts/main0.php:    <title><?= Html::encode($this->title) ?></title>
backend/themes/gentelella/views/layouts/main0.php:    <?php $this->head() ?>
backend/themes/gentelella/views/layouts/main0.php:    <?php $this->beginBody() ?>
backend/themes/gentelella/views/layouts/main0.php:            'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],
backend/themes/gentelella/views/layouts/main0.php:    <?php $this->endBody() ?>
backend/themes/gentelella/views/layouts/main0.php:<?php $this->endPage() ?>
backend/themes/gentelella/views/layouts/_main.php:<?php $this->beginPage(); ?>
backend/themes/gentelella/views/layouts/_main.php:    <title><?= Html::encode($this->title) ?></title>
backend/themes/gentelella/views/layouts/_main.php:    <?php $this->head() ?>
backend/themes/gentelella/views/layouts/_main.php:<?php $this->beginBody(); ?>
backend/themes/gentelella/views/layouts/_main.php:            <?php if (isset($this->params['h1'])): ?>
backend/themes/gentelella/views/layouts/_main.php:                        <h1><?= $this->params['h1'] ?></h1>
backend/themes/gentelella/views/layouts/_main.php:<?php $this->endBody(); ?>
backend/themes/gentelella/views/layouts/_main.php:<?php $this->endPage(); ?>
backend/themes/gentelella/views/layouts/login.php:$this->beginContent(__DIR__.'/_main.php')
backend/themes/gentelella/views/layouts/login.php:<?= $this->render('header',[
backend/themes/gentelella/views/layouts/login.php:<?= $this->render('footer',[
backend/themes/gentelella/views/layouts/login.php:<?php $this->endContent() ?>
backend/themes/gentelella/views/layouts/main.php:$this->beginContent(__DIR__.'/_main.php')
backend/themes/gentelella/views/layouts/main.php:<?= $this->render('header') ?>
backend/themes/gentelella/views/layouts/main.php:                'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],
backend/themes/gentelella/views/layouts/main.php:<?= $this->render('footer'); ?>
backend/themes/gentelella/views/layouts/main.php:<?php $this->endContent() ?>
backend/views/layouts/login.php:<?php $this->beginPage() ?>
backend/views/layouts/login.php:    <title><?= Html::encode($this->title) ?></title>
backend/views/layouts/login.php:    <?php $this->head() ?>
backend/views/layouts/login.php:<?php $this->beginBody() ?>
backend/views/layouts/login.php:<?php $this->endBody() ?>
backend/views/layouts/login.php:<?php $this->endPage() ?>
backend/models/LoginForm.php:        if (!$this->hasErrors()) {
backend/models/LoginForm.php:            $user = $this->getUser();
backend/models/LoginForm.php:            if (!$user || !$user->validatePassword($this->password)) {
backend/models/LoginForm.php:                $this->addError($attribute, 'Incorrect username or password.');
backend/models/LoginForm.php:        if ($this->validate()) {
backend/models/LoginForm.php:            return Yii::$app->user->login($this->getUser(), $this->rememberMe ? 3600 * 24 * 30 : 0);
backend/models/LoginForm.php:        if ($this->_user === false) {
backend/models/LoginForm.php:            $this->_user =  \backend\models\User::findByUsername($this->username);
backend/models/LoginForm.php:        return $this->_user;
backend/models/AdminMenuSearch.php:        $this->load($params);
backend/models/AdminMenuSearch.php:        if (!$this->validate()) {
backend/models/AdminMenuSearch.php:            'id' => $this->id,
backend/models/AdminMenuSearch.php:            'root' => $this->root,
backend/models/AdminMenuSearch.php:            'lft' => $this->lft,
backend/models/AdminMenuSearch.php:            'rgt' => $this->rgt,
backend/models/AdminMenuSearch.php:            'lvl' => $this->lvl,
backend/models/AdminMenuSearch.php:            'icon_type' => $this->icon_type,
backend/models/AdminMenuSearch.php:            'active' => $this->active,
backend/models/AdminMenuSearch.php:            'selected' => $this->selected,
backend/models/AdminMenuSearch.php:            'disabled' => $this->disabled,
backend/models/AdminMenuSearch.php:            'readonly' => $this->readonly,
backend/models/AdminMenuSearch.php:            'visible' => $this->visible,
backend/models/AdminMenuSearch.php:            'collapsed' => $this->collapsed,
backend/models/AdminMenuSearch.php:            'movable_u' => $this->movable_u,
backend/models/AdminMenuSearch.php:            'movable_d' => $this->movable_d,
backend/models/AdminMenuSearch.php:            'movable_l' => $this->movable_l,
backend/models/AdminMenuSearch.php:            'movable_r' => $this->movable_r,
backend/models/AdminMenuSearch.php:            'removable' => $this->removable,
backend/models/AdminMenuSearch.php:            'removable_all' => $this->removable_all,
backend/models/AdminMenuSearch.php:        $query->andFilterWhere(['like', 'name', $this->name])
backend/models/AdminMenuSearch.php:            ->andFilterWhere(['like', 'icon', $this->icon]);
backend/views/layouts/main.php:<?php $this->beginPage() ?>
backend/views/layouts/main.php:    <title><?= Html::encode($this->title) ?></title>
backend/views/layouts/main.php:    <?php $this->head() ?>
backend/views/layouts/main.php:    <?php $this->beginBody() ?>
backend/views/layouts/main.php:            'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],
backend/views/layouts/main.php:    <?php $this->endBody() ?>
backend/views/layouts/main.php:<?php $this->endPage() ?>
backend/models/AdminMenu.php:        if (empty($this->icon_type)) {
backend/models/AdminMenu.php:            $this->icon_type = TreeView::ICON_CSS;
backend/models/User.php:        return $this->id;
backend/models/User.php:        return $this->authKey;
backend/models/User.php:        return $this->authKey === $authKey;
backend/models/User.php:        return $this->password === $password;
console/controllers/KeyController.php:        $this->stdout("Cookie validation key '$key' generated successfully.\n");
console/controllers/KeyController.php:        $this->stdout('Cookie validation key: ' . getenv('COOKIE_VALIDATION_KEY') . "\n");
console/controllers/HelloController.php:        $this->stdout("hello {$name}.\n");
console/models/query/TokenQuery.php:        $this->andWhere('[[status]]=1');
console/models/query/UserDatumQuery.php:        $this->andWhere('[[status]]=1');
console/models/query/UserQuery.php:        $this->andWhere('[[status]]=1');
console/migrations/m130524_201442_init.php:        if ($this->db->driverName === 'mysql') {
console/migrations/m130524_201442_init.php:        $this->createTable('{{%user}}', [
console/migrations/m130524_201442_init.php:        $this->dropTable('{{%user}}');
installer/widgets/Alert.php:        $appendCss = isset($this->options['class']) ? ' ' . $this->options['class'] : '';
installer/widgets/Alert.php:            if (isset($this->alertTypes[$type])) {
installer/widgets/Alert.php:                    $this->options['class'] = $this->alertTypes[$type] . $appendCss;
installer/widgets/Alert.php:                    $this->options['id'] = $this->getId() . '-' . $type . '-' . $i;
installer/widgets/Alert.php:                        'closeButton' => $this->closeButton,
installer/widgets/Alert.php:                        'options' => $this->options,
installer/views/site/login.php:$this->title = 'Login';
installer/views/site/login.php:$this->params['breadcrumbs'][] = $this->title;
installer/views/site/login.php:    <h1><?= Html::encode($this->title) ?></h1>
installer/views/site/error.php:$this->title = $name;
installer/views/site/error.php:    <h1><?= Html::encode($this->title) ?></h1>
installer/views/layouts/main.php:<?php $this->beginPage() ?>
installer/views/layouts/main.php:    <title><?= Html::encode($this->title) ?></title>
installer/views/layouts/main.php:    <?php $this->head() ?>
installer/views/layouts/main.php:    <?php $this->beginBody() ?>
installer/views/layouts/main.php:            'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],
installer/views/layouts/main.php:    <?php $this->endBody() ?>
installer/views/layouts/main.php:<?php $this->endPage() ?>
installer/views/site/about.php:$this->title = 'About';
installer/views/site/about.php:$this->params['breadcrumbs'][] = $this->title;
installer/views/site/about.php:    <h1><?= Html::encode($this->title) ?></h1>
installer/models/ContactForm.php:            ->setFrom([$this->email => $this->name])
installer/models/ContactForm.php:            ->setSubject($this->subject)
installer/models/ContactForm.php:            ->setTextBody($this->body)
installer/views/site/resetPassword.php:$this->title = 'Reset password';
installer/views/site/resetPassword.php:$this->params['breadcrumbs'][] = $this->title;
installer/views/site/resetPassword.php:    <h1><?= Html::encode($this->title) ?></h1>
installer/views/site/requestPasswordResetToken.php:$this->title = 'Request password reset';
installer/views/site/requestPasswordResetToken.php:$this->params['breadcrumbs'][] = $this->title;
installer/views/site/requestPasswordResetToken.php:    <h1><?= Html::encode($this->title) ?></h1>
installer/models/settings/Database.php:            ->setFrom([$this->email => $this->name])
installer/models/settings/Database.php:            ->setSubject($this->subject)
installer/models/settings/Database.php:            ->setTextBody($this->body)
installer/views/site/signup.php:$this->title = 'Signup';
installer/views/site/signup.php:$this->params['breadcrumbs'][] = $this->title;
installer/views/site/signup.php:    <h1><?= Html::encode($this->title) ?></h1>
installer/views/site/index.php:$this->title = 'My Yii Application';
installer/views/site/index.php:                    <?= $this->render('steps/step1') ?>
installer/views/site/contact.php:$this->title = 'Contact';
installer/views/site/contact.php:$this->params['breadcrumbs'][] = $this->title;
installer/views/site/contact.php:    <h1><?= Html::encode($this->title) ?></h1>
installer/controllers/SiteController.php:        return $this->render('index');
installer/controllers/SiteController.php:        return $this->render('about');
data/2016-1-23.sql:insert  into `blog_post`(`id`,`author_id`,`content`,`summary`,`tags`,`status`,`created`,`updated`,`rep_image`,`featured`,`views`,`rate`,`rate_count`,`cmt_count`,`allow_rate`,`allow_cmt`,`last_cmt_time`,`category_id`,`title`) values (1,1,'This blog system is developed using Yii. It is meant to demonstrate how to use Yii to build a complete real-world application. Complete source code may be found in the Yii releases.\n\nFeel free to try this system by writing new posts and posting comments.','This blog system is developed using Yii. It is meant to demonstrate how to use Yii to build a complete real-world application. Complete source code may be found in the Yii releases.','yii, blog',2,1230952187,1230952187,NULL,0,0,0,0,0,1,1,0,0,'Welcome!'),(72,1,'<p>sdfsadgdfgdf<br /></p>','sdfdfgdfg','',1,1370623143,1394538846,NULL,0,0,0,0,13,1,1,1395019365,9,'sdfsdf'),(75,1,'<p>sdfsdg<br /></p>','sdgdf','',1,1372265241,1394533393,NULL,0,0,0,0,0,1,1,0,32,'dsfsf'),(76,3,'<p>风吹屁屁凉<br /></p>','撒旦法撒旦个大发光火','',1,1372265356,1372265356,NULL,0,0,0,0,0,1,1,0,12,'屁屁凉'),(3,1,'最新更新我的博客，新版感觉怎么样呀！','最新更新我的博客，新版感觉怎么样呀！','',2,1322064648,1322064686,NULL,0,0,0,0,0,1,1,0,0,'我的博客'),(7,1,'<p><a style=\"text-decoration:underline;\" href=\"http://code.google.com/p/ueditor-for-yii/\"><span style=\"font-size:16px\">ueditor-for-yii</span></a></p><div id=\"psum\"><a id=\"project_summary_link\" href=\"http://code.google.com/p/ueditor-for-yii/\">Ueditor是由百度web前端研发部开发的所见即所得富文本web编辑器，开源基于BSD协议。 &nbsp; &nbsp; &nbsp; &nbsp;</a></div><div>最近看到百度开源的一个产品Ueditor 所见即所得富文本web编辑器，感觉很不错，最近又有一个项目，是用YiiFramework 开发的，就把Ueditor 用在这项目里了，于是就把它写成了extensions形式提供给大家下载！yii 地址：<a href=\"http://www.yiiframework.com/extension/ueditor-for-yii/\">http://www.yiiframework.com/extension/ueditor-for-yii/ &nbsp; &nbsp; &nbsp; &nbsp;</a></div><div>由于文件大过2M上传不了到YII官方网站的extensions库里！不一会就好几个差评了！最来就把它上传到谷歌上面了！</div><div>如果有用到的话大家拿去吧！下载地址：<a href=\"http://code.google.com/p/ueditor-for-yii/downloads/list\">http://code.google.com/p/ueditor-for-yii/downloads/list &nbsp; &nbsp; &nbsp; &nbsp;</a></div><div>使用方法：</div><p>…how to use this extension…</p><p>把ueditor插件放到 extensions/ 在Html 调用</p><pre class=\"brush:php;toolbar:false;\">&lt;?php    \r\n    $this-&gt;widget(\'ext.ueditor.Ueditor\',    \r\n            array(    \r\n                \'getId\'=&gt;\'Article_content\',    \r\n                \'textarea\'=&gt;\"Article[content]\",    \r\n                \'imagePath\'=&gt;\'/attachment/ueditor/\',    \r\n                \'UEDITOR_HOME_URL\'=&gt;\'/\',    \r\n            ));    \r\n?&gt;</pre><p>订制Toolbars 方法</p><pre class=\"brush:php;toolbar:false;\">&lt;?php    \r\n    $this-&gt;widget(\'ext.ueditor.Ueditor\',    \r\n            array(    \r\n                \'getId\'=&gt;\'Settings_about\',    \r\n                \'minFrameHeight\'=&gt;180,    \r\n                \'textarea\'=&gt;\"Article[content]\",    \r\n                \'imagePath\'=&gt;\'/attachment/ueditor/\',    \r\n                \'UEDITOR_HOME_URL\'=&gt;\'/\',    \r\n                \'toolbars\'=&gt;\"\'Undo\',\'Redo\',\'ForeColor\', \'BackColor\', \'Bold\',\'Italic\',\'Underline\', \'JustifyLeft\',\'JustifyCenter\',\'JustifyRight\', ,\'InsertImage\',\'ImageNone\',\'ImageLeft\',\'ImageRight\',\'ImageCenter\',\",    \r\n            ));    \r\n?&gt;</pre><p><br /></p><p>关于UEditor</p><p>Ueditor概述 Ueditor是由百度web前端研发部开发的所见即所得富文本web编辑器，具有轻量，可定制，注重用户体验等特点，开源基于BSD协议，允许自由使用和使用代码 为什么使用Ueditor 体积小巧，性能优良，使用简单 分层架构，方便定制与扩展 满足不同层次用户需求，更加适合团队开发 丰富完善的中文文档 多个浏览器支持：Mozilla, MSIE, FireFox?, Maxthon,Safari 和Chrome 更好的使用体验 拥有专业QA团队持续支持，已应用在百度各大产品线上</p><p><br /></p>','Ueditor是由百度web前端研发部开发的所见即所得富文本web编辑器，开源基于BSD协议。</a></div><div>最近看到百度开源的一个产品Ueditor 所见即所得富文本web编辑器，感觉很不错，最近又有一个项目，是用YiiFramework 开发的，就把Ueditor 用在这项目里了，于是就把它写成了extensions形式提供给大家下载！','UEditor',2,1322404562,1342545530,NULL,0,0,0,0,0,1,1,0,1,'ueditor-for-yii 所见即所得富文本web编辑器'),(8,1,'break-all','Your title here','yii',2,1322580959,1342664214,NULL,0,0,0,0,0,1,1,0,1,'Your title here'),(24,1,'<p>新增文章归档功能<br /></p><p><span style=\"color:#ffffff;font-family:&#39;helvetica neue&#39;, helvetica, arial, sans-serif;font-size:18px;font-weight:bold;line-height:18px;background-color:#1187dc;\">Archives</span><br /></p>','新增文章归档功能','Archives,文章归档',2,1347253302,1347253302,NULL,0,0,0,0,0,1,1,0,1,'新增文章归档功能'),(9,1,'Your&nbsp;title&nbsp;here...\r\n==================Y\r\nour&nbsp;title&nbsp;here...\r\n------------------\r\n###&nbsp;Your&nbsp;title&nbsp;here...\r\n###&nbsp;Your&nbsp;title&nbsp;here...\r\n#####&nbsp;Your&nbsp;title&nbsp;here...\r\n######&nbsp;Your&nbsp;title&nbsp;here...\r\n~~~\r\n[php]\r\nYour&nbsp;Code&nbsp;here...\r\n~~~','Your Code here','Your Code here',2,1323511144,1342663980,NULL,0,0,0,0,0,1,1,0,1,'Your Code here'),(11,1,'Your title here...\r\n==================\r\nYour title here...\r\n------------------\r\n### Your title here...\r\n#### Your title here...\r\n##### Your title here...\r\n###### Your title here...\r\n\r\n','','',2,1323705679,1323705679,NULL,0,0,0,0,0,1,1,0,0,'标题 cannot be blank. '),(12,1,'<p id=\"initContent\">这在测试中</p><p id=\"initContent\">这在测试中<br /></p><ol style=\"list-style-type:decimal;\"><li><p id=\"initContent\">这在测试中</p></li><li><p id=\"initContent\">这在测试中</p></li><li><p id=\"initContent\">这在测试中</p></li><li><p id=\"initContent\"><span>这在测试中</span><br /></p></li></ol>','test\r\n','test',2,1342540719,1342593593,NULL,0,0,0,0,0,1,1,0,1,'这在测试中'),(13,1,'<p id=\"initContent\">我要做测试<br /></p><p><strong>我要做测试</strong><br /></p><ol style=\"list-style-type:decimal;\"><li><p><strong>我要做测试</strong></p></li><li><p><strong>我要做测试</strong></p></li><li><p><strong>我要做测试</strong></p></li><li><p><strong>我要做测试<br /></strong></p></li></ol><p><br /></p>','test','test',2,1342540786,1342593609,NULL,0,0,0,0,0,1,1,0,1,'我要做测试'),(14,1,'<p>it is code </p><p><span style=\"color:#222222;font-family:arial, sans-serif;font-size:13px;font-style:italic;line-height:19px;background-color:#ffffff;\">Ueditor是由百度web前端研发部开发的所见即所得富文本web编辑器，开源基于BSD协议。</span><br /></p><pre class=\"brush:php;toolbar:false;\">&lt;?php\r\n    $this-&gt;widget(\'ext.ueditor.Ueditor\',\r\n            array(\r\n                \'getId\'=&gt;\'Post_content\',\r\n                \'UEDITOR_HOME_URL\'=&gt;\"/\",\r\n                \'options\'=&gt;\'toolbars:[[\"fontfamily\",\"fontsize\",\"forecolor\",\"bold\",\"italic\",\"strikethrough\",\"|\",\r\n\"insertunorderedlist\",\"insertorderedlist\",\"blockquote\",\"|\",\r\n\"link\",\"unlink\",\"highlightcode\",\"|\",\"undo\",\"redo\",\"source\"]],\r\n                    wordCount:false,\r\n                    elementPathEnabled:false,\r\n                    imagePath:\"/attachment/ueditor/\",\r\n                    \',\r\n            ));\r\n?&gt;</pre><p><br /></p>','Ueditor是由百度web前端研发部开发的所见即所得富文本web编辑器，开源基于BSD协议。','php',2,1342541883,1342606184,NULL,0,0,0,0,0,1,1,0,1,'ueditor-for-yii '),(17,1,'<p>代码如下：</p><p><span style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\"></span></p><pre class=\"brush:php;toolbar:false;\">&lt;?php\r\nfunction _99 ($n) {\r\nfor ($i=1;$i&lt;=$n;$i++) {\r\necho $i.’*’.$n.’=’.$n*$i.’&amp;nbsp;’;\r\n}\r\necho ‘&lt;br/&gt;’;\r\n$pre = $n – 1;\r\nif ($pre &lt; $n &amp;&amp; $pre &gt; 0) {\r\n_99 ($pre);\r\n}   \r\n}\r\n_99 (9);  \r\n?&gt;</pre><p><span style=\"color:#333333;font-family:georgia, bitstream charter, serif;\"><span style=\"line-height:24px;\"><span style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\">结果如下：</span><br /></span></span></p><p><span style=\"color:#333333;font-family:georgia, bitstream charter, serif;\"><span style=\"line-height:24px;\"><span style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\"><br /></span></span></span></p><blockquote><p><span style=\"color:#333333;font-family:georgia, bitstream charter, serif;\"><span style=\"line-height:24px;\"><span style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\"><span style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\">1*9=9 2*9=18 3*9=27 4*9=36 5*9=45 6*9=54 7*9=63 8*9=72 9*9=81</span><br style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\" /><span style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\">1*8=8 2*8=16 3*8=24 4*8=32 5*8=40 6*8=48 7*8=56 8*8=64</span><br style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\" /><span style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\">1*7=7 2*7=14 3*7=21 4*7=28 5</span><br /></span></span></span></p></blockquote><p><span style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\"><br /></span></p>','代码如下：','php',2,1342606433,1342606475,NULL,0,0,0,0,0,1,1,0,2,'php递归实现99乘法表'),(18,1,'<p><span style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\">1. Nginx配置</span><br style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\" /><span style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\">在nginx.conf的server {段添加类似如下代码：</span><br style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\" /><span style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\">Nginx.conf代码:</span><br style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\" /><font color=\"#333333\" face=\"monaco, consolas, andale mono, dejavu sans mono, monospace\" size=\"2\"><span style=\"line-height:24px;\"></span></font></p><pre class=\"brush:bash;toolbar:false;\">location / {\r\nif (!-e $request_filename){\r\nrewrite ^/(.*) /index.php last;\r\n}\r\n}</pre><p><font color=\"#333333\" face=\"monaco, consolas, andale mono, dejavu sans mono, monospace\" size=\"2\"><span style=\"line-height:24px;\"><br style=\"background-color:#FFFFFF;\" /></span></font><span style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\">2. 在Yii的protected/conf/main.php去掉如下的注释</span><br style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\" /><span style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\">Php代码:</span><br style=\"color:#333333;font-family:georgia, &#39;bitstream charter&#39;, serif;line-height:24px;background-color:#ffffff;\" /><font color=\"#333333\" face=\"monaco, consolas, andale mono, dejavu sans mono, monospace\" size=\"2\"><span style=\"line-height:24px;\"></span></font></p><pre class=\"brush:php;toolbar:false;\">\'urlManager\'=&gt;array(\r\n\'urlFormat\'=&gt;\'path\',\r\n\'rules\'=&gt;array(\r\n\'/\'=&gt;\'/view\',\r\n\'//\'=&gt;\'/\',\r\n\'/\'=&gt;\'/\',\r\n),\r\n),</pre><p><font color=\"#333333\" face=\"monaco, consolas, andale mono, dejavu sans mono, monospace\" size=\"2\"><span style=\"line-height:24px;\"><br /></span></font></p>','Nginx配置','yii',2,1342606936,1342606936,NULL,0,0,0,0,0,1,1,0,1,'Yii在Nginx下的rewrite配置'),(25,1,'<h2 style=\"margin:0px;color:#555555;font-family:arial, helvetica, sans-serif;background-color:#ffffff;padding-bottom:12px;\">钓鱼岛是中国的</h2><h2 style=\"margin:0px;color:#555555;font-family:arial, helvetica, sans-serif;background-color:#ffffff;padding-bottom:12px;\">钓鱼岛是中国的</h2><h2 style=\"margin:0px;color:#555555;font-family:arial, helvetica, sans-serif;background-color:#ffffff;padding-bottom:12px;\">钓鱼岛是中国的</h2><h2 style=\"margin:0px;color:#555555;font-family:arial, helvetica, sans-serif;background-color:#ffffff;padding-bottom:12px;\">钓鱼岛是中国的</h2><p><br /><br /></p><p><br /></p>','钓鱼岛是中国的','钓鱼岛',2,1347357597,1347357597,NULL,0,0,0,0,0,1,1,0,1,'钓鱼岛是中国的'),(26,1,'<p>新增皮肤功能</p><p>修改<br />在config/main.php</p><pre class=\"brush:php;toolbar:false;\">\'theme\'=&gt;\'classic\',     //皮肤配置 default为默认或注释掉</pre><p>欢迎大家下载学习。</p><p><a href=\"https://github.com/windsdeng/dlfblog\">https://github.com/windsdeng/dlfblog</a></p><p><br /></p><h2><a name=\"qq交流群\" class=\"anchor\" href=\"https://github.com/windsdeng/dlfblog#qq%E4%BA%A4%E6%B5%81%E7%BE%A4\"></a>QQ交流群</h2><p><code>1、185207750</code></p><p><br /></p><p>有什么建议可以提出来</p><p>所有功能都先是架起一个大至的框架，到时慢慢细致。<br /></p>','新增皮肤功能\r\n有什么建议可以提出来','classic,theme',2,1348392308,1348398138,NULL,0,0,0,0,0,1,1,0,1,'新增皮肤功能'),(27,1,'<p>sdsfsdgdfg<br /></p>','sdfsdgdfg','',1,1357115018,1369330667,NULL,0,0,0,0,0,1,1,0,11,'sdfsdf'),(28,1,'<p>fdghfghfghfdg<br /></p>','dsfgdfgfdgh','',2,1357143919,1357143919,NULL,0,0,0,0,0,1,1,0,1,'edfsdfgsdg'),(29,3,'<p>sdfdsfgdfgdsfg<br /></p>','dsfsdf','',2,1357223912,1357223912,NULL,0,0,0,0,0,1,1,0,1,'hello'),(30,3,'<p>哈哈哈哈哈哈<br /></p>','测试啦','',1,1367983100,1367983100,NULL,0,0,0,0,0,1,1,0,1,'fgdg'),(31,3,'<p>heeheheh<br /></p>','sdsdg','Archives, hello,yiqing',1,1367993234,1367993234,NULL,0,0,0,0,0,1,1,0,1,'testByYiqing95 2'),(32,3,'<p>sdfsdf<br /></p>','dsfgdfg','dfgd,test,hello',1,1367994113,1367994113,NULL,0,0,0,0,0,1,1,0,1,'shenme a '),(33,3,'<p>thissssssssssssssssssssssssssssssssssssssssssssssssssssssss<br /></p><p>thissssssssssssssssssssssssssssssssssssssssssssssssssssssss<br /></p><p>thissssssssssssssssssssssssssssssssssssssssssssssssssssssss<br /></p><p>thissssssssssssssssssssssssssssssssssssssssssssssssssssssss<br /></p><p><br /></p>','蛋疼的啊','',1,1368031991,1368031991,NULL,0,0,0,0,0,1,1,0,2,'shehh'),(34,3,'<p>到房管局劳动法看几个看 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br /></p>','生','',1,1368032688,1368032688,NULL,0,0,0,0,0,1,1,0,1,'刀剑如梦=345'),(35,2,'<p>sdfsdfg<br /></p>','sdgdfg','',1,1368116939,1368116939,NULL,0,0,0,0,0,1,1,0,1,'teww'),(36,2,'<p>sdfsdgdf<br /></p>','sdgdfg','',1,1368117488,1368117488,NULL,0,0,0,0,0,1,1,0,1,'sdfsdf'),(37,2,'<p>是打发第三方<br /></p>','加加减减','',1,1368150942,1368150942,NULL,0,0,0,0,0,1,1,0,1,'电饭锅'),(38,2,'<p>sd敢达双方各电饭锅<br /></p>','是打发第三方给','',1,1368153754,1368153754,NULL,0,0,0,0,0,1,1,0,6,'蛇呵呵呵'),(39,2,'<p>送电饭锅第三方给<br /></p>','撒旦个的双方各','',1,1368154967,1368154967,NULL,0,0,0,0,0,1,1,0,6,'撒剪短发卡萨丁'),(40,2,'<p>撒旦嘎斯电饭锅<br /></p>','撒电饭锅','',1,1368155244,1368155244,NULL,0,0,0,0,0,1,1,0,0,'说地方撒旦'),(41,2,'<p>阿斯顿个飞洒 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br /></p>','阿斯顿个第三个','',1,1368155651,1368155651,NULL,0,0,0,0,0,1,1,0,0,'是大家发顺丰'),(42,1,'<p>撒旦郭殿方<br /></p>','多个','',1,1368156337,1368156337,NULL,0,0,0,0,0,1,1,0,9,'说地方撒旦'),(43,2,'<p>sdfsdgdfg<br /></p>','dfgdsfgdsf','',2,1368160052,1368160052,NULL,0,0,0,0,0,1,1,0,0,'sdfsajdkfjk'),(44,3,'<p>撒打发<br /></p>','是打发斯蒂芬','',1,1368294485,1368294485,NULL,0,0,0,0,0,1,1,0,12,'收到发送到'),(45,3,'<p>撒旦嘎斯电饭锅 <br /></p>','撒旦法撒旦个','',2,1368294572,1368294572,NULL,0,0,0,0,0,1,1,0,12,'说地方撒旦'),(46,2,'<p>但神风怪盗东方红<br /></p>','撒大幅度','',1,1368326791,1368326791,NULL,0,0,0,0,0,1,1,0,29,'收到发送到'),(47,1,'<p>随碟附送大概电饭锅<br /></p>','斯蒂芬','',1,1368363029,1368363722,NULL,0,0,0,0,0,1,1,0,11,'的所发生的'),(48,3,'<p>送大幅度覆盖电饭锅<br /></p>','速度飞洒地方给','',1,1368687666,1368687666,NULL,0,0,0,0,0,1,1,0,31,'收到发送到'),(49,2,'<p>jhlkjhlkjhlkjhkl<br /></p>','bgfjhgfhjgfhjgfjhgfjhg','',1,1368719504,1368719504,NULL,0,0,0,0,0,1,1,1394186361,6,'uuuu'),(50,2,'<p>asgdsfgdsfhg<br /></p>','dfhfgh','',1,1368757048,1368757048,NULL,0,0,0,0,0,1,1,0,6,'sadfsdfgdsf'),(51,2,'<p>sadgdsfg<br /></p>','sdfgdsfhg','',1,1368758141,1368758141,NULL,0,0,0,0,0,1,1,0,6,'sdfasd'),(52,2,'<p>sadgsdfhg<br /></p>','sadgdfgdfg','',1,1368759650,1368759650,NULL,0,0,0,0,0,1,1,0,17,'sadffsdfg'),(53,2,'<p>dfgdsfghdsfh<br /></p>','sdfgdfh','',1,1368759738,1368759738,NULL,0,0,0,0,0,1,1,0,6,'sdfsadg'),(54,2,'<p>dfhdsfhfgh<br /></p>','asdfgfgh','',1,1368759794,1368759794,NULL,0,0,0,0,0,1,1,0,6,'sdgdsafg'),(55,2,'<p>撒打发呵呵呵呵<br /></p>','省心 吧','',1,1368759836,1368759836,NULL,0,0,0,0,0,1,1,0,6,'认真的标题啊'),(56,2,'<p>撒旦郭殿方<br /></p>','撒旦郭殿方 ','',1,1368761209,1368761209,NULL,0,0,0,0,0,1,1,0,6,'撒旦法撒旦个是'),(57,3,'<p>哈哈水电费和<br /></p>','撒旦法撒旦个','',1,1368761305,1368761305,NULL,0,0,0,0,3,1,1,1394985272,12,'什么情况'),(58,1,'<p>与图腾<br /></p>','快交换机','',1,1368762129,1368762129,NULL,0,0,0,0,0,1,1,0,9,'急急急'),(59,1,'<p>撒旦发送到</p>','撒打发','',1,1368765491,1368765491,NULL,0,0,0,0,0,1,1,0,9,'撒打发'),(60,1,'<p>阿斯顿嘎斯<br /></p>','说但发鬼地方','',1,1368766172,1368766172,NULL,0,0,0,0,0,1,1,0,9,'速度飞洒地方'),(61,1,'<p>的发送到</p>','电饭锅','',1,1368766643,1368766643,NULL,0,0,0,0,0,1,1,0,9,'撒旦个电饭锅'),(62,1,'<p>是打发斯蒂芬<br /></p>','十多个','',1,1368769360,1368769360,NULL,0,0,0,0,0,1,1,0,9,'是打发斯蒂芬'),(63,1,'<p>撒旦发送到<br /></p>','撒旦发送到','',1,1368769702,1368769702,NULL,0,0,0,0,0,1,1,0,9,'撒旦发送到'),(64,1,'<p>sdfgdfghdfhfgh<br /></p>','sdfsadg','',1,1368896342,1368896342,NULL,0,0,0,0,0,1,1,0,9,'sdfsadg'),(65,3,'<p>撒打发送电饭锅第三方给电饭锅<br /></p>','打底衫','',1,1368981449,1368981449,NULL,0,0,0,0,4,1,1,1394985058,12,'撒旦发送到'),(66,1,'<p>说地方撒旦<br /></p>','盛大富翁 ','',1,1369240440,1369240441,NULL,0,0,0,0,0,1,1,0,9,'速度飞洒地方'),(67,1,'<p>说地方撒旦<br /></p>','随碟附送','',1,1369240535,1369240535,NULL,0,0,0,0,0,1,1,0,9,'说地方撒旦'),(68,1,'<p>个发速度飞洒地方<br /></p>','说地方撒旦','',1,1369240637,1369240637,NULL,0,0,0,0,0,1,1,0,9,'说地方撒旦'),(69,1,'<p>说地方撒旦速度飞洒地方<br /></p>','随碟附送','',1,1369240938,1369241812,NULL,0,0,0,0,0,1,1,0,9,'说地方撒旦'),(70,1,'<p>sdgdfg<br /></p>','sdgdfg','',1,1369323185,1369323185,NULL,0,0,0,0,0,1,1,0,9,'tewst'),(71,1,'<p>撒的发生连快递费<br /></p>','撒打发','yii, pp,单独',1,1369330770,1369330770,NULL,0,0,0,0,0,1,1,0,32,'标题'),(77,3,'<p>墨迹安排 &nbsp;什么情况 &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;<br /></p>','总结下啊 a','',1,1372265418,1372265418,NULL,0,0,0,0,4,1,1,1392460272,33,'吉安帕'),(78,2,'<p>是打发斯蒂芬<br /></p>','时代复分','',1,1391269603,1391269603,NULL,0,0,0,0,0,1,1,0,6,'广发华福多个');
data/2016-1-23.sql:insert  into `tbl_comments`(`object_name`,`object_id`,`cmt_id`,`cmt_parent_id`,`author_id`,`user_name`,`user_email`,`cmt_text`,`create_time`,`update_time`,`status`,`replies`,`mood`) values ('User',1,29,0,1,'亦清','yiqing@qq.com','sdfsdgdfgdsf',1354983552,1358757087,2,0,0),('User',1,30,0,1,'亦清','yiqing@qq.com','sdfsdgsdg',1354983558,1358757087,2,0,0),('User',1,35,0,1,'亦清','yiqing@qq.com','dfggg',1355042449,1358757087,2,0,0),('User',1,36,0,1,'亦清','yiqing@qq.com','sdfgdfg',1355042455,1358757087,2,0,0),('User',1,39,0,1,'亦清','yiqing@qq.com','ppjj',1355042480,1358757087,2,0,0),('User',1,43,42,1,'亦清','yiqing@qq.com','efsdgdsfgdfsgdsfgdsf',1355043391,1358757087,2,0,0),('User',1,44,43,1,'亦清','yiqing@qq.com','sdfsadgsdfgsd',1355043395,1358757087,2,0,0),('User',1,45,44,1,'亦清','yiqing@qq.com','sdgfdfgdfhgfdg',1355043400,1358757087,2,0,0),('User',1,46,45,1,'亦清','yiqing@qq.com','sdfsdfgdfgdfh',1355043406,1358757087,2,0,0),('User',1,48,47,1,'亦清','yiqing@qq.com','dfgdfghdfgh',1355043414,1358757087,2,0,0),('User',1,49,48,1,'yes  it works !',NULL,'dfghfghfgh',1355043418,1355113133,2,0,0),('User',1,50,49,1,'yes  it works !',NULL,'sfdfhfghfgh',1355043422,1355113161,2,0,0),('User',1,51,36,1,'yes  it works !',NULL,'ffffffffg',1355047450,1355047455,2,0,0),('User',2,52,0,2,'yes  it works !',NULL,'dsfgdfgdfg',1355106941,1355106945,2,0,0),('User',2,53,32,2,'yes  it works !',NULL,'eegdsfgdsfhg',1355106949,1355195257,2,0,0),('User',2,54,53,2,'yes  it works !',NULL,'dfgdfhfgh',1355106952,1355129458,2,0,0),('User',2,55,54,2,'yes  it works !',NULL,'fdgdfhfdgh',1355106956,1355106982,2,0,0),('User',2,56,0,2,'yes  it works !',NULL,'dfgfghfgjghjghj',1355106965,1355129458,2,0,0),('User',2,57,55,2,'yes  it works !',NULL,'xfgdfhfgh',1355106976,1355106980,2,0,0),('User',2,58,54,2,'yes  it works !',NULL,'sdsgdfg',1355107099,1355129457,2,0,0),('User',1,59,36,1,'hi ',NULL,'ghsdfsdf',1355107223,1358079382,2,0,0),('User',1,60,59,1,'hi ',NULL,'似懂非懂广告费',1355107284,1358079382,2,0,0),('User',1,61,0,1,'hi ',NULL,'法国的风格',1355107385,1358079382,2,0,0),('User',1,62,37,1,'hi ',NULL,'额度发鬼地方',1355107452,1358079382,2,0,0),('User',1,63,36,1,'hi ',NULL,'gggg',1355107483,1358079382,2,0,0),('User',1,64,61,1,'hi ',NULL,'efwetrewr',1355109849,1358079382,2,0,0),('User',1,65,61,1,'hi ',NULL,'fsdfdfgdfg',1355109859,1358079382,2,0,0),('User',1,66,36,1,'hi ',NULL,'sdfsdg',1355109866,1358079382,2,0,0),('User',1,68,NULL,1,'hi ',NULL,'zxdfgdfg',1355127026,1358079382,1,0,0),('User',1,69,NULL,1,'hi ',NULL,'zxdfgdfg',1355127104,1358079382,1,0,0),('User',1,70,NULL,1,NULL,NULL,'jjpp',1355127151,NULL,1,0,0),('User',1,71,NULL,1,NULL,NULL,'jjpp',1355127167,1355127508,2,0,0),('User',1,72,NULL,1,NULL,NULL,'fgdfgdfsdfsdffff',1355127306,1355127492,2,0,0),('User',1,73,NULL,1,NULL,NULL,'ppppppp',1355127345,1355127480,2,0,0),('User',1,74,NULL,1,NULL,NULL,'dsfgdfg',1355127531,1355127997,2,0,0),('User',2,75,NULL,2,NULL,NULL,'dfasdfdfgdfg',1355127628,1355129456,2,0,0),('User',2,76,NULL,2,NULL,NULL,'uuuuuuuu',1355127639,1355129455,2,0,0),('User',2,77,NULL,2,NULL,NULL,'woshi shei ',1355127660,1355129464,2,0,0),('User',2,78,32,2,NULL,NULL,'fsdgdfghdfhhfgh',1355127750,1355129464,2,0,0),('User',2,79,NULL,2,NULL,NULL,'woshi shei ',1355127761,1355129463,2,0,0),('User',2,80,53,2,NULL,NULL,'dsffdgdfg',1355127810,1355129462,2,0,0),('User',1,81,NULL,1,NULL,NULL,'sdgdfgdf',1355127950,1355127995,2,0,0),('User',1,82,NULL,1,NULL,NULL,'hoooo',1355127960,1355127991,2,0,0),('User',1,83,NULL,1,NULL,NULL,'hoooosdfsdfgdfg',1355127977,NULL,1,0,0),('User',1,84,NULL,1,NULL,NULL,'pppppp',1355128010,NULL,1,0,0),('User',1,85,NULL,1,NULL,NULL,'jjjjjj',1355128016,NULL,1,0,0),('User',1,86,68,1,NULL,NULL,'fdhfghfghj',1355128070,NULL,1,0,0),('User',1,87,NULL,1,NULL,NULL,'srgdfh',1355128371,NULL,1,0,0),('User',2,88,NULL,2,NULL,NULL,' $this->validatedComment :',1355128613,1355129462,2,0,0),('User',1,89,87,1,NULL,NULL,'fghfdgj',1355128822,NULL,1,0,0),('User',1,90,NULL,1,NULL,NULL,'grsdrgsd',1355128861,NULL,1,0,0),('User',1,91,NULL,1,NULL,NULL,'grsdrgsd',1355128900,NULL,1,0,0),('User',1,92,NULL,1,NULL,NULL,'asdfasdfg',1355128938,NULL,1,0,0),('User',2,93,NULL,2,NULL,NULL,'算计儿妈妈对司法斯蒂芬  ',1355129000,1355129443,2,0,0),('User',2,94,77,2,NULL,NULL,'范甘迪发覆盖',1355129010,1355129442,2,0,0),('User',2,95,79,2,NULL,NULL,'二姨太热通用',1355129042,1355129441,2,0,0),('User',2,96,NULL,2,NULL,NULL,'水云间哈',1355129109,1355129440,2,0,0),('User',2,97,95,2,NULL,NULL,'而特瑞',1355129121,1355129438,2,0,0),('User',2,98,96,2,NULL,NULL,'也是',1355129221,1355129452,2,0,0),('User',2,99,96,2,NULL,NULL,'呀呀呀呀呀呀',1355129237,1355129451,2,0,0),('User',2,100,98,2,NULL,NULL,'什么情况',1355129257,1355129450,2,0,0),('User',2,101,100,2,NULL,NULL,'顶顶顶顶 是么子意思',1355129279,1355129450,2,0,0),('User',2,102,96,2,NULL,NULL,'hi8u',1355129386,1355129449,2,0,0),('User',2,103,97,2,NULL,NULL,'哈iii爱i',1355129394,1355129432,2,0,0),('User',2,104,98,2,NULL,NULL,'平平平平平',1355129401,1355129430,2,0,0),('User',2,105,32,2,NULL,NULL,'速度飞洒地方',1355129414,1355129434,2,0,0),('User',2,106,105,2,NULL,NULL,'啥啊',1355129424,1355129429,2,0,0),('User',2,107,53,2,NULL,NULL,'水电费及速度快',1355129472,1355195217,2,0,0),('User',2,108,32,2,'神来',NULL,'收到发送到',1355129477,1357964348,2,0,0),('User',2,109,NULL,2,'神来',NULL,'速度飞洒地方',1355129480,1357964348,2,0,0),('User',2,110,NULL,2,'神来',NULL,'地发生地方',1355129486,1357964348,2,0,0),('User',2,111,32,2,'神来',NULL,'pppppp啦啦啦啦啦',1355129503,1357964348,2,0,0),('User',2,112,110,2,'神来',NULL,'大多数覆盖',1355129522,1357964348,2,0,0),('User',2,113,111,2,'神来',NULL,'来来来来来来来来来来来来来',1355129540,1357964348,2,0,0),('User',2,114,NULL,2,'神来',NULL,'sd敢达覆盖',1355129550,1357964348,2,0,0),('User',2,115,113,2,'神来',NULL,'回复啦啦啦啦',1355129563,1357964348,2,0,0),('User',2,116,111,2,'神来',NULL,'时好时坏是',1355129641,1357964348,2,0,0),('User',2,117,116,2,'神来',NULL,'信息',1355129652,1357964348,2,0,0),('User',2,118,NULL,2,NULL,NULL,'dapp大批\r\n\r\n',1355129787,1355129802,2,0,0),('User',2,119,109,2,NULL,NULL,'sheyyy',1355130291,1355130612,2,0,0),('User',2,120,119,2,NULL,NULL,'shshhshh',1355130301,1355130610,2,0,0),('User',2,121,NULL,2,NULL,NULL,'sdfsdf',1355130305,1355130606,2,0,0),('User',2,122,113,2,NULL,NULL,'fgfg',1355130619,1355130650,2,0,0),('User',2,123,122,2,NULL,NULL,'gfhjghjghj',1355130633,1355130647,2,0,0),('User',2,124,107,2,NULL,NULL,'ergrfhfdh',1355130661,1355195211,2,0,0),('User',2,125,124,2,NULL,NULL,'dfdghdfgh',1355130666,1355195209,2,0,0),('User',2,126,NULL,2,NULL,NULL,'sdfhdfgjfgj',1355130675,1355139677,2,0,0),('User',2,127,NULL,2,NULL,NULL,'相册法国的风格',1355139548,1355139674,2,0,0),('User',2,128,127,2,'亦清',NULL,'啪啪啪 减肥减肥姐姐姐夫',1355139570,1357964200,2,0,0),('User',2,129,32,2,'亦清',NULL,'静境多独得',1355139650,1357964200,2,0,0),('User',2,130,129,2,'亦清',NULL,'反反复复',1355139665,1357964200,2,0,0),('User',2,131,NULL,2,'亦清',NULL,'踩踩踩的东东',1355139692,1357964200,2,0,0),('User',2,132,124,2,'亦清',NULL,'国等复合弓',1355139699,1357964200,2,0,0),('User',2,133,NULL,2,'亦清',NULL,'asdasdfsdf',1355195228,1357964200,2,0,0),('User',2,134,NULL,2,'亦清',NULL,'fdgdfg',1355195233,1357964200,2,0,0),('User',2,135,134,2,'亦清',NULL,'sdfsdfgdfg',1355195239,1357964200,2,0,0),('User',2,136,NULL,2,'亦清',NULL,'fdgdfg',1355195260,1357964200,2,0,0),('User',2,138,NULL,2,'亦清',NULL,'dfgfghfgh',1355195274,1357964200,2,0,0),('User',2,139,NULL,2,NULL,NULL,'gfhghj',1355195277,1355195283,2,0,0),('User',2,140,137,2,NULL,NULL,'rthgfhjghj',1355195288,1355195326,2,0,0),('User',2,141,140,2,NULL,NULL,'oip;klop\'o[o',1355195293,1355195324,2,0,0),('User',2,142,140,2,NULL,NULL,'ytjhgjkhjljhkl',1355195301,1355195322,2,0,0),('User',2,143,NULL,2,NULL,NULL,'dsgfhfdghgfj',1355195315,1355195319,2,0,0),('User',2,144,NULL,2,NULL,NULL,'dsgdfg',1355195329,NULL,1,0,0),('User',2,145,144,2,NULL,NULL,'dsgdfghfg',1355195365,NULL,1,0,0),('User',2,146,NULL,2,NULL,NULL,'fgfghghj',1355195368,NULL,1,0,0),('User',1,147,87,1,NULL,NULL,'dfsdafasdgdg',1355217892,NULL,1,0,0),('User',1,148,147,1,NULL,NULL,'uuuuuuu',1355217900,NULL,1,0,0),('Photo',22,149,NULL,2,NULL,NULL,'太漂亮了',1355236712,1356863835,2,0,0),('Photo',22,150,NULL,2,NULL,NULL,'太漂亮了',1355237068,1356859148,2,0,0),('Photo',22,151,NULL,1,NULL,NULL,'凤飞飞',1355237216,1356863825,2,0,0),('Photo',22,152,NULL,1,NULL,NULL,'凤飞飞',1355237279,1356859141,2,0,0),('Photo',22,153,NULL,1,NULL,NULL,'凤飞飞',1355237362,1356857509,2,0,0),('Photo',22,154,NULL,1,NULL,NULL,'fdsfsdgdf',1355237455,1355495528,2,0,0),('Photo',22,155,NULL,1,NULL,NULL,'在说地方撒旦个',1355239240,1355494798,2,0,0),('Photo',22,156,NULL,1,NULL,NULL,'解决跑跑',1355239302,1355241955,2,0,0),('Photo',22,157,156,1,NULL,NULL,'蛋疼的真慢',1355239346,1355241954,2,0,0),('Photo',22,158,150,2,NULL,NULL,'地方规定发给和法国和',1355241893,1355241939,2,0,0),('Photo',22,159,157,NULL,'解决','iqng@qq.com','dfjasdjgdfjgjsdfg',1355242346,1356857503,2,0,0),('Photo',15,160,NULL,1,NULL,NULL,'黄瓜是屌丝女的最爱',1355242488,1356792425,2,0,0),('Photo',15,161,160,1,NULL,NULL,'太搞了那个是丝瓜哦',1355242514,1356792417,2,0,0),('Photo',23,162,NULL,2,NULL,NULL,'sfdsdgdf',1355282351,1355368097,2,0,0),('Photo',23,163,162,2,NULL,NULL,'dfgfsdghfgh',1355282510,NULL,1,0,0),('Photo',23,164,NULL,2,NULL,NULL,'dfgdfs',1355283131,NULL,1,0,0),('Photo',23,165,NULL,2,NULL,NULL,';;;;',1355295641,NULL,1,0,0),('Photo',14,166,NULL,2,NULL,NULL,';;;jjjjjjj',1355295876,1355369359,2,0,0),('Photo',14,167,166,2,NULL,NULL,'lkl;kjhjhggh',1355295887,1355369356,2,0,0),('Photo',14,168,167,2,NULL,NULL,'l;lll;;;;',1355295900,1355369361,2,0,0),('photo',3,169,NULL,1,NULL,NULL,'速度感',1355299204,1355369807,2,0,0),('photo',3,170,NULL,1,NULL,NULL,'jjj',1355299394,1355371390,2,0,0),('photo',3,171,NULL,1,NULL,NULL,'kkk',1355299575,1355369802,2,0,0),('Photo',6,172,NULL,1,NULL,NULL,'kkk',1355299683,NULL,1,0,0),('Photo',6,173,NULL,1,NULL,NULL,'kkk',1355299684,NULL,1,0,0),('photo',3,174,NULL,1,NULL,NULL,'速度飞洒地方',1355331255,1355369806,2,0,0),('photo',3,175,169,1,NULL,NULL,'dangting ',1355331289,1355369800,2,0,0),('photo',3,176,0,1,NULL,NULL,'地方规定发给',1355331863,1355369798,2,0,0),('photo',3,177,176,1,NULL,NULL,'地发生地方个',1355331891,1355371388,2,0,0),('photo',3,178,0,1,NULL,NULL,'sd敢达覆盖',1355332077,1355369813,2,0,0),('photo',3,179,0,1,NULL,NULL,'sd敢达覆盖',1355332096,1355402881,2,0,0),('photo',3,180,179,1,NULL,NULL,'法国队',1355332134,1355369795,2,0,0),('photo',3,181,NULL,1,NULL,NULL,'wet',1355332219,1355402875,2,0,0),('photo',3,182,181,1,NULL,NULL,'类品牌',1355332271,1355369792,2,0,0),('photo',3,183,NULL,1,NULL,NULL,'大幅度覆盖',1355333063,1355369853,2,0,0),('photo',3,184,0,1,NULL,NULL,'生非个人',1355333153,1355369790,2,0,0),('photo',3,185,184,1,NULL,NULL,'而特特',1355333315,1355371315,2,0,0),('photo',3,186,175,2,NULL,NULL,'儿无污染',1355366548,1355371322,2,0,0),('photo',3,187,NULL,2,NULL,NULL,'但司法第三方',1355366573,1355371301,2,0,0),('photo',3,188,184,2,NULL,NULL,'为二位容器',1355366659,1355369846,2,0,0),('Photo',23,189,165,2,NULL,NULL,'凤飞飞',1355366722,NULL,1,0,0),('Photo',23,190,164,2,NULL,NULL,'方法',1355366754,1355368087,2,0,0),('Photo',23,191,164,2,NULL,NULL,'方法',1355366766,1355369876,2,0,0),('Photo',23,192,165,2,NULL,NULL,'人法地覆盖',1355366944,1355368084,2,0,0),('photo',3,193,183,2,NULL,NULL,'hhahha',1355367551,1355369844,2,0,0),('photo',3,194,174,2,NULL,NULL,'dsfsdaf',1355367589,1355369785,2,0,0),('Photo',23,195,192,2,NULL,NULL,'sdgdsfgdsfg',1355368065,1355368079,2,0,0),('Photo',23,196,195,2,NULL,NULL,'jjjjj',1355368071,1355368077,2,0,0),('Photo',23,197,191,2,NULL,NULL,'kkk',1355368105,NULL,1,0,0),('Photo',23,198,189,1,NULL,NULL,'斪',1355369294,1355369299,2,0,0),('Photo',23,199,0,1,NULL,NULL,'急急急',1355369310,NULL,1,0,0),('Photo',23,200,199,1,NULL,NULL,'家斤斤计较',1355369317,1356868439,2,0,0),('Photo',14,201,168,1,NULL,NULL,'红色\r\n',1355369350,1355369353,2,0,0),('Photo',14,202,0,1,NULL,NULL,'收到发送到覆盖',1355369366,NULL,1,0,0),('photo',3,203,0,2,NULL,NULL,'efdfgdfg',1355369403,1355369783,2,0,0),('photo',3,204,179,2,NULL,NULL,'dfsgsdfgdsfg',1355369818,1355369851,2,0,0),('photo',3,205,0,2,NULL,NULL,'kkkkk',1355369826,1355369842,2,0,0),('photo',3,206,204,2,NULL,NULL,'lllll',1355369833,1355369839,2,0,0),('Photo',14,207,202,1,NULL,NULL,'撒旦法撒旦个',1355369954,1355370015,2,0,0),('Photo',14,208,0,1,NULL,NULL,'是打发斯蒂芬感受到',1355369960,1356859364,2,0,0),('Photo',14,209,0,1,NULL,NULL,'果然是电饭锅的发生过',1355369969,1356859362,2,0,0),('Photo',14,210,207,1,NULL,NULL,'大幅度覆盖电饭锅',1355369978,NULL,1,0,0),('Photo',14,211,207,1,NULL,NULL,'快快快快快',1355369985,1355370010,2,0,0),('Photo',14,212,0,1,NULL,NULL,'加加减减',1355369992,1356859358,2,0,0),('Photo',14,213,212,1,NULL,NULL,'呵呵呵',1355370001,1355370020,2,0,0),('Photo',14,214,208,1,NULL,NULL,'sd敢达双方各',1355370685,1356859352,2,0,0),('Photo',14,215,214,1,NULL,NULL,'sd敢达覆盖电饭锅',1355370700,1356859350,2,0,0),('photo',3,216,187,2,NULL,NULL,'kkkk',1355370742,1355371398,2,0,0),('Photo',14,217,212,1,NULL,NULL,'地方规定发给',1355370765,1356859334,2,0,0),('Photo',14,218,0,1,NULL,NULL,'而格外让他',1355370773,1356859328,2,0,0),('Photo',14,219,218,1,NULL,NULL,'0额发生地批发速配而撒旦解放路撒大口径',1355370782,1355371270,2,0,0),('Photo',14,220,218,1,NULL,NULL,'iii看',1355371256,1355371643,2,0,0),('Photo',14,221,210,1,NULL,NULL,'哦哦哦',1355371265,1355371645,2,0,0),('photo',3,222,NULL,2,NULL,NULL,'kk',1355371292,1355371396,2,0,0),('photo',3,223,186,2,NULL,NULL,'kkk ',1355371298,1355371327,2,0,0),('photo',3,224,216,1,NULL,NULL,'快快快快',1355371335,1355402875,2,0,0),('photo',3,225,NULL,1,NULL,NULL,'kkk',1355371341,1355371381,2,0,0),('photo',3,226,179,1,NULL,NULL,'；；平',1355371355,1355371383,2,0,0),('photo',3,227,181,1,NULL,NULL,'；；；；； ',1355371365,1355371379,2,0,0),('photo',3,228,224,1,NULL,NULL,'啦啦啦啦啦',1355371374,1355371394,2,0,0),('photo',3,229,224,1,NULL,NULL,'噢噢噢噢',1355371404,1355402879,2,0,0),('photo',3,230,229,1,NULL,NULL,'快快快快',1355371424,1355371873,2,0,0),('photo',3,231,NULL,1,NULL,NULL,'噢噢噢噢',1355371430,1355371713,2,0,0),('photo',3,232,179,1,NULL,NULL,'啦啦啦啦',1355371438,1355371875,2,0,0),('photo',3,233,181,1,NULL,NULL,'；；；； ',1355371458,1355371831,2,0,0),('photo',3,234,179,1,NULL,NULL,'啦啦啦啦',1355371466,1355371824,2,0,0),('photo',3,235,179,1,NULL,NULL,'啦啦啦啦啦',1355371478,1355371809,2,0,0),('photo',3,236,235,1,NULL,NULL,'啦啦啦啦啦',1355371497,1355371792,2,0,0),('Photo',14,237,218,1,NULL,NULL,'哦了',1355371543,1355371641,2,0,0),('Photo',14,238,0,1,NULL,NULL,'婆婆哦',1355371548,1355371639,2,0,0),('Photo',14,239,237,1,NULL,NULL,'噢噢噢噢',1355371633,1355371636,2,0,0),('Photo',14,240,0,1,NULL,NULL,'婆婆哦ip',1355371651,1356859325,2,0,0),('Photo',14,241,240,1,NULL,NULL,'来来来',1355371658,1356859322,2,0,0),('photo',3,242,236,1,NULL,NULL,'哦哦看看',1355371668,1355371787,2,0,0),('photo',3,243,235,1,NULL,NULL,'噢噢噢噢年',1355371797,1355371821,2,0,0),('photo',3,244,0,1,NULL,NULL,'i急吼吼即可',1355371815,1355371819,2,0,0),('photo',3,245,232,1,NULL,NULL,'浏览',1355371843,1355371871,2,0,0),('photo',3,246,245,1,NULL,NULL,'哦啦啦啦',1355371863,1355371870,2,0,0),('Photo',7,247,0,1,NULL,NULL,'啦啦啦啦',1355371914,NULL,1,0,0),('Photo',7,248,247,1,NULL,NULL,'咯哦哦哦',1355371920,1355553433,2,0,0),('Photo',7,249,247,1,NULL,NULL,'来批评批评',1355371928,1355553430,2,0,0),('Photo',8,250,0,1,NULL,NULL,'平平平平平',1355371967,NULL,1,0,0),('Photo',8,251,250,1,NULL,NULL,'当事人对分公司覆盖',1355376139,1355376147,2,0,0),('Photo',8,252,250,1,NULL,NULL,'如法国会引发国际化',1355376154,NULL,1,0,0),('Photo',5,253,0,1,NULL,NULL,'hhh',1355379259,NULL,1,0,0),('photo',3,254,224,2,NULL,NULL,'速度飞洒地方\r\n',1355401171,1355402875,2,0,0),('photo',3,255,0,2,NULL,NULL,'iiii',1355402891,1356859226,2,0,0),('photo',3,256,255,2,NULL,NULL,'噢噢噢噢',1355402900,NULL,1,0,0),('photo',3,257,255,2,NULL,NULL,'uuuuu',1355403727,NULL,1,0,0),('photo',3,258,255,2,NULL,NULL,'uuuuu',1355403738,NULL,1,0,0),('photo',3,259,NULL,1,NULL,NULL,'ooo',1355403847,NULL,1,0,0),('photo',3,260,NULL,1,NULL,NULL,'ooo',1355403856,NULL,1,0,0),('photo',3,261,259,1,NULL,NULL,'sdgdfg',1355405740,NULL,1,0,0),('photo',3,262,259,1,NULL,NULL,'sdfsdf',1355406321,1356859216,2,0,0),('photo',3,263,262,1,NULL,NULL,'dfgdfgsdfg',1355406327,1356860789,2,0,0),('photo',3,264,262,1,NULL,NULL,'sdfsdfgsadg',1355407425,NULL,1,0,0),('Photo',23,265,199,2,NULL,NULL,'对司法斯蒂芬',1355407571,1356863859,2,0,0),('photo',3,266,0,1,NULL,NULL,'dfdsff',1355467793,1356859168,2,0,0),('photo',3,267,266,1,NULL,NULL,'sd敢达覆盖',1355467799,NULL,1,0,0),('Photo',7,268,249,1,NULL,NULL,'ppppppp噼噼啪啪',1355509123,1355553427,2,0,0),('Photo',15,269,161,2,NULL,NULL,'xzdgdfg',1355561009,1356792415,2,0,0),('Photo',24,270,0,1,NULL,NULL,'rgdfg',1356330006,NULL,1,0,0),('Photo',24,271,270,1,NULL,NULL,'奥么',1356330017,NULL,1,0,0),('Photo',21,272,0,1,NULL,NULL,'xcgdfg',1356366245,NULL,1,0,0),('Photo',15,273,269,2,NULL,NULL,'地方规定发给凤飞飞方法',1356792408,1356792412,2,0,0),('Photo',15,274,0,2,NULL,NULL,'二鬼地方',1356792432,NULL,1,0,0),('photo',17,275,NULL,1,NULL,NULL,'速度飞洒地方',1356850470,NULL,1,0,0),('photo',17,276,NULL,1,NULL,NULL,'在速度飞洒地方',1356850486,NULL,1,0,0),('photo',16,277,NULL,1,NULL,NULL,'dddd',1356856346,1356857252,2,0,0),('photo',3,278,262,1,NULL,NULL,'dsfgdfdg',1356856357,1356859159,2,0,0),('photo',16,279,NULL,1,NULL,NULL,'dsfdsfdfg',1356856434,1356856441,2,0,0),('photo',17,280,NULL,1,NULL,NULL,'xcvdsafgdfg',1356857065,NULL,1,0,0),('photo',17,281,275,1,NULL,NULL,'regrwthyrty',1356857071,NULL,1,0,0),('photo',17,282,280,1,NULL,NULL,'wertweryrety',1356857081,NULL,1,0,0),('photo',17,283,NULL,1,NULL,NULL,'dfgerthtyhj',1356857088,NULL,1,0,0),('photo',17,284,283,1,NULL,NULL,'wretertyrtu',1356857102,NULL,1,0,0),('photo',16,285,277,1,NULL,NULL,'regtythretyufgdfgh',1356857237,1356857245,2,0,0),('photo',16,286,0,1,NULL,NULL,'retewrytrety',1356857258,1356857488,2,0,0),('photo',16,287,286,1,NULL,NULL,'ddthyryuyt',1356857264,1356857378,2,0,0),('Photo',14,288,215,2,NULL,NULL,'人发过东方红',1356859343,1356859347,2,0,0),('Photo',14,289,210,2,NULL,NULL,'东方饭店个人',1356859372,NULL,1,0,0),('Photo',25,290,NULL,2,NULL,NULL,'梵蒂冈的发挥的发挥',1356859551,NULL,1,0,0),('Photo',22,291,NULL,1,NULL,NULL,'dfedf',1356869059,NULL,1,0,0),('Photo',22,292,291,1,NULL,NULL,'asdfsdfg',1356869068,NULL,1,0,0),('Photo',22,293,292,1,NULL,NULL,'sdgedfg',1356869078,NULL,1,0,0),('photo',16,294,NULL,1,NULL,NULL,'rgdfg',1356869100,NULL,1,0,0),('photo',10,295,NULL,1,NULL,NULL,'但司法第三方个电饭锅',1356939345,1356939357,2,0,0),('photo',21,296,NULL,1,NULL,NULL,'dsfdfgdf',1357118113,1357118119,2,0,0),('photo',21,297,272,1,NULL,NULL,'ooo',1357118129,NULL,1,0,0),('photo',21,298,272,1,NULL,NULL,'pppp;p;;;',1357118136,NULL,1,0,0),('photo',20,299,NULL,1,NULL,NULL,'sdgsadfg',1357144055,1357144080,2,0,0),('Photo',24,300,NULL,NULL,'yiqing','yiqing_95@qq.com','牛逼的小屁孩',1357469537,NULL,1,0,0),('Photo',24,301,300,NULL,'好','jj@jj.com','确实牛逼的',1357469562,NULL,1,0,0),('photo',21,302,NULL,1,NULL,NULL,'太漂亮了',1357469633,NULL,1,0,0);
year/helpers/WebJumperTrait.php:        return $this->jumperBasePath . '/' . $viewDir;
year/helpers/WebJumperTrait.php:        $this->jumperBasePath = $basePathAlias;
year/helpers/WebJumperTrait.php:        //$controller->layout = $this->layout;
year/helpers/WebJumperTrait.php:        $basePathAlias = $this->getJumperBasePath();
year/helpers/WebJumperTrait.php:        //$controller->layout = $this->layout;
year/helpers/WebJumperTrait.php:        return $controller->render($this->getJumperBasePath() . '/jumpToDialog', array('url' => $url, 'msg' => $msg, 'secs' => $secs));
year/helpers/WebJumperTrait.php:        //$controller->layout = $this->layout;
year/helpers/WebJumperTrait.php:        // $this->render('//public/jumpBack',array('msg'=>$msg,'secs'=>$secs));
year/helpers/WebJumperTrait.php:        return $controller->render($this->getJumperBasePath() . '/jumpBack', [
year/helpers/WebJumperTrait.php:        //$controller->layout = $this->layout;
year/helpers/WebJumperTrait.php:        // $this->render('//public/jumpBack',array('msg'=>$msg,'secs'=>$secs));
year/helpers/WebJumperTrait.php:        return $controller->render($this->getJumperBasePath() . '/jumpBackDialog', array('msg' => $msg, 'secs' => $secs, 'step' => $step));
backend/themes/gentelella/views/admin-menu/create.php:$this->title = Yii::t('app', 'Create Admin Menu');
backend/themes/gentelella/views/admin-menu/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/themes/gentelella/views/admin-menu/create.php:$this->params['breadcrumbs'][] = $this->title;
backend/themes/gentelella/views/admin-menu/create.php:    <h1><?= Html::encode($this->title) ?></h1>
backend/themes/gentelella/views/admin-menu/create.php:    <?= $this->render('_form', [
my/migration/console/views/db/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/migration/console/views/db/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/migration/console/views/db/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/migration/console/views/db/index.php:        in the "<?= $this->context->module->id ?>" module.
year/widgets/FileApiAsset.php:        if(empty($this->sourcePath)){
year/widgets/FileApiAsset.php:            $this->sourcePath = dirname(__FILE__) . DIRECTORY_SEPARATOR . 'assets/fileapi/dist';
year/widgets/FileApiAsset.php:        if (empty($this->js)) {
year/widgets/FileApiAsset.php:            $this->js = $this->getJs();
year/widgets/WebUploader.php:        if (empty($this->server)) {
year/widgets/WebUploader.php:            $this->server = \yii\helpers\Url::to([Yii::$app->controller->action->id]);
year/widgets/WebUploader.php:        if (empty($this->id)) {
year/widgets/WebUploader.php:            $this->id = $this->hasModel() ? Html::getInputId($this->model, $this->attribute) : $this->getId();
year/widgets/WebUploader.php:        $this->options['id'] = $this->id;
year/widgets/WebUploader.php:        if (empty($this->name)) {
year/widgets/WebUploader.php:            $this->name = $this->hasModel() ? Html::getInputName($this->model, $this->attribute) : $this->id;
year/widgets/WebUploader.php:        $assets = WebUploaderAsset::register($this->view);
year/widgets/WebUploader.php:        $this->assetBaseUrl  = $assets->baseUrl;
year/widgets/WebUploader.php:        if($this->init == true){
year/widgets/WebUploader.php:            $this->initOptions($assets);
year/widgets/WebUploader.php:        if($this->renderInput){
year/widgets/WebUploader.php:          return  $this->renderInput() ;
year/widgets/WebUploader.php:        if($this->init){
year/widgets/WebUploader.php:            $this->registerScripts();
year/widgets/WebUploader.php:        $baseUrl =  $this->assetBaseUrl  = $assets->baseUrl;
year/widgets/WebUploader.php:        $this->jsOptions['server'] = $this->server;
year/widgets/WebUploader.php:        $this->jsOptions['swf'] = $baseUrl . '/Uploader.swf';
year/widgets/WebUploader.php:        if ($this->csrf) {
year/widgets/WebUploader.php:            $this->initCsrfOption($this->jsOptions);
year/widgets/WebUploader.php:         * foreach ($this->jsOptions as $key => $val) {
year/widgets/WebUploader.php:         * if (in_array($key, $this->events) && !($val instanceof JsExpression)) {
year/widgets/WebUploader.php:         * $this->jsOptions[$key] = new JsExpression($val);
year/widgets/WebUploader.php:        if ($this->hasModel()) {
year/widgets/WebUploader.php:            $field = Html::activeFileInput($this->model, $this->attribute, $this->options);
year/widgets/WebUploader.php:            $field = Html::fileInput($this->name, $this->value, $this->options);
year/widgets/WebUploader.php:        $jsonOptions = Json::encode($this->jsOptions);
year/widgets/WebUploader.php:        var {$this->var} = WebUploader.create({$jsonOptions});
year/widgets/WebUploader.php:        $this->view->registerJs($script, View::POS_READY);
year/widgets/WebUploader.php:        if (!empty($this->clientEvents)) {
year/widgets/WebUploader.php:            foreach ($this->clientEvents as $event => $handler) {
year/widgets/WebUploader.php:                $js[] = ";{$this->var}.on('$event', $handler);";
year/widgets/WebUploader.php:            $this->view->registerJs(implode("\n", $js));
backend/views/admin-menu/view.php:$this->title = $model->name;
backend/views/admin-menu/view.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Admin Menus'), 'url' => ['index']];
backend/views/admin-menu/view.php:$this->params['breadcrumbs'][] = $this->title;
backend/views/admin-menu/view.php:    <h1><?= Html::encode($this->title) ?></h1>
year/widgets/ArtDialog.php:        $asset = ArtDialogAsset::register($this->view) ;
year/widgets/ArtDialog.php:        if($this->enablePlus){
year/widgets/ListSorter.php:    if ($this->sort === null) {
year/widgets/ListSorter.php:    echo $this->renderSortLinks();
year/widgets/ListSorter.php:    $attributes = empty($this->attributes) ? array_keys($this->sort->attributes) : $this->attributes;
year/widgets/ListSorter.php:        $links[] = $this->sort->link($name);
year/widgets/ListSorter.php:    if(empty($this->label)){
year/widgets/ListSorter.php:        $this->label = 'sort by ';
year/widgets/ListSorter.php:    // $this->options['encode'] = false ;
year/widgets/ListSorter.php:    return Html::dropDownList($this->label,null,$links,$this->options);
year/widgets/ListSorter.php:    // return Html::ul($links, array_merge($this->options, ['encode' => false]));
year/widgets/PrettifyAsset.php:            $this->js = [
year/widgets/PrettifyAsset.php:        $this->js = [
year/widgets/JsTree.php:       JsTreeAsset::register( $this->getView()) ;
year/widgets/SortableAsset.php:            $this->js = [
year/widgets/SortableAsset.php:            $this->js = [
year/widgets/FancyTreeAsset.php:        $this->css = [
year/widgets/IFrameResizer.php:        $view = $this->getView() ;
year/widgets/IFrameResizer.php:        IFrameResizerAsset::register($this->getView());
year/widgets/CssBlock.php:        if ($this->renderInPlace) {
year/widgets/CssBlock.php:        $this->view->registerCss($block, $this->options, $this->key);
year/widgets/IFrameAutoHeight.php:        IFrameAutoHeightAsset::register($this->getView());
year/widgets/IFrameAutoHeight.php:       if($this->selector !== false){
year/widgets/IFrameAutoHeight.php:           $jsOptions = empty($this->options) ? '' : Json::encode($this->options) ;
year/widgets/IFrameAutoHeight.php:        jQuery("{$this->selector}").iframeAutoHeight({$jsOptions});
year/widgets/IFrameAutoHeight.php:         $this->getView()->registerJs($jsInit,View::POS_READY);
year/widgets/featherlight/JFeatherlightGalleryAsset.php:        if(empty($this->sourcePath)){
year/widgets/featherlight/JFeatherlightGalleryAsset.php:            $this->sourcePath = __DIR__ . '/assets';
year/widgets/featherlight/JFeatherlightAsset.php:        if(empty($this->sourcePath)){
year/widgets/featherlight/JFeatherlightAsset.php:            $this->sourcePath = __DIR__ . '/assets';
year/widgets/featherlight/FeatherLight.php:        JFeatherlightAsset::register($this->view);
year/widgets/featherlight/FeatherLight.php:        return Html::a(Html::img($this->src, $this->imageOptions), $this->url, [
year/widgets/ZTree.php:        ZTreeAsset::register($this->getView()) ;
year/widgets/FancyTree.php:        FancyTreeAsset::register( $this->getView()) ;
year/widgets/assets/jqrelcopy/JQRelcopy.php:	 * $this->widget('zii.widgets.jui.CJuiDatePicker',$datePickerConfig);
year/widgets/assets/jqrelcopy/JQRelcopy.php:	 * $this->widget('ext.jqrelcopy.JQRelcopy',
year/widgets/assets/jqrelcopy/JQRelcopy.php:		$this->_assets = Yii::app()->assetManager->publish(dirname(__FILE__).DIRECTORY_SEPARATOR.'assets');
year/widgets/assets/jqrelcopy/JQRelcopy.php:		          ->registerScriptFile($this->_assets.'/js/jquery.relcopy.yii.1.1.js');
year/widgets/assets/jqrelcopy/JQRelcopy.php:		if (!empty($this->removeText))
year/widgets/assets/jqrelcopy/JQRelcopy.php:			$htmlOptions = array_merge($this->removeHtmlOptions,array('onclick'=>$onClick));
year/widgets/assets/jqrelcopy/JQRelcopy.php:			$append = CHtml::link($this->removeText,'#',$htmlOptions);
year/widgets/assets/jqrelcopy/JQRelcopy.php:			$this->options['append'] = empty($this->options['append']) ? $append : $append .' '.$this->options['append'];
year/widgets/assets/jqrelcopy/JQRelcopy.php:		if (!empty($this->jsBeforeClone))
year/widgets/assets/jqrelcopy/JQRelcopy.php:			$this->options['beforeClone'] = $this->jsBeforeClone;
year/widgets/assets/jqrelcopy/JQRelcopy.php:		if (!empty($this->jsAfterClone))
year/widgets/assets/jqrelcopy/JQRelcopy.php:			$this->options['afterClone'] = $this->jsAfterClone;
year/widgets/assets/jqrelcopy/JQRelcopy.php:		if (!empty($this->jsBeforeNewId))
year/widgets/assets/jqrelcopy/JQRelcopy.php:			$this->options['beforeNewId'] = $this->jsBeforeNewId;
year/widgets/assets/jqrelcopy/JQRelcopy.php:		if (!empty($this->jsAfterNewId))
year/widgets/assets/jqrelcopy/JQRelcopy.php:			$this->options['afterNewId'] = $this->jsAfterNewId;
year/widgets/assets/jqrelcopy/JQRelcopy.php:		$options = CJavaScript::encode($this->options);
year/widgets/assets/jqrelcopy/JQRelcopy.php:		Yii::app()->getClientScript()->registerScript(__CLASS__.'#'.$this->id,"jQuery('#{$this->id}').relCopy($options);");
year/widgets/assets/Wookmark-jQuery/example-api/server.php:    $this->data = $data;
year/widgets/assets/Wookmark-jQuery/example-api/server.php:    $this->itemsPerPage = $itemsPerPage;
year/widgets/assets/Wookmark-jQuery/example-api/server.php:    if ($page > 0 && $page <= $this->getNumberOfPages()) {
year/widgets/assets/Wookmark-jQuery/example-api/server.php:      $startOffset = ($page - 1) * $this->itemsPerPage;
year/widgets/assets/Wookmark-jQuery/example-api/server.php:      return array_slice($this->data, $startOffset, $this->itemsPerPage);
year/widgets/assets/Wookmark-jQuery/example-api/server.php:    return ceil(count($this->data) / $this->itemsPerPage);
year/widgets/featherlight/FeatherlightGallery.php:        JFeatherlightGalleryAsset::register($this->view);
year/widgets/featherlight/FeatherlightGallery.php:        $this->view->registerJs("$('section.flight-gallery a').featherlightGallery({previousIcon: '&#9664;', nextIcon: '&#9654;', galleryFadeIn: 100, galleryFadeOut: 300})", View::POS_READY);
year/widgets/featherlight/FeatherlightGallery.php:        foreach ($this->items as $item)
year/widgets/featherlight/FeatherlightGallery.php:            $innerHtml[] = Html::a(Html::img($item['src'], $this->previewOptions), $item['url']);
year/widgets/featherlight/FeatherlightGallery.php:        return Html::tag('section', implode('', $innerHtml), ArrayHelper::merge(['class' => 'flight-gallery'], $this->sectionOptions));
year/widgets/UEditor.php:        $view = $this->getView();
year/widgets/UEditor.php:            $this->js[] = 'ueditor.all.js';
year/widgets/UEditor.php:            $this->js[] = 'ueditor.all.min.js';
year/widgets/pubsub/JTinyPubSubAsset.php:            $this->js = [
year/widgets/pubsub/JTinyPubSubAsset.php:            $this->js = [
year/widgets/pubsub/PubSubJSAsset.php:            $this->js = [
year/widgets/pubsub/PubSubJSAsset.php:            $this->js = [
year/widgets/JWookmark.php:        print_r($this->getView());
year/widgets/JWookmark.php:        JWookmarkAsset::register( $this->getView()) ;
year/widgets/ArtDialogAsset.php:            $this->js = [
year/widgets/ArtDialogAsset.php:            $this->js = [
year/widgets/ArtDialogAsset.php:        $this->js = [
year/widgets/ArtDialogAsset.php:        if(empty($this->js)){
year/widgets/ArtDialogAsset.php:        //   $this->js[] = YII_DEBUG ?   'dialog-plus.js' :   'dialog-plus.min.js' ;
year/widgets/ArtDialogAsset.php:        $this->js[] = 'dialog-plus-min.js' ;
year/widgets/JCropper.php:        JCropperAsset::register($this->getView() ) ;
year/widgets/WebUploaderAsset.php:        if(empty($this->sourcePath)){
year/widgets/WebUploaderAsset.php:            $this->sourcePath = dirname(__FILE__) . DIRECTORY_SEPARATOR . 'assets/webuploader-0.1.5';
year/widgets/WebUploaderAsset.php:        if (empty($this->js)) {
year/widgets/WebUploaderAsset.php:            $this->js = $this->getJs();
year/widgets/ExSelect.php:        \year\widgets\ExSelectAsset::register($this->getView());
year/widgets/ExSelect.php:        // $this->registerPlugin();
year/widgets/ExSelect.php:        if (empty($this->container)) return;
year/widgets/ExSelect.php:        $this->options = array(
year/widgets/ExSelect.php:            'parentParam' => $this->parentParam,
year/widgets/ExSelect.php:            'maxLevel' => $this->maxLevel,
year/widgets/ExSelect.php:            'url' => $this->url,
year/widgets/ExSelect.php:            'parentId' => $this->parentId,
year/widgets/ExSelect.php:            'initNodeId' => empty($this->initNodeId)? 0 : $this->initNodeId,
year/widgets/ExSelect.php:            'loadAncestorsUrl' => $this->loadAncestorsUrl,
year/widgets/ExSelect.php:            'editable' => $this->editable,
year/widgets/ExSelect.php:            'selectHtmlOptions' => $this->selectHtmlOptions,
year/widgets/ExSelect.php:            'firstOptionValue' => $this->firstOptionValue,
year/widgets/ExSelect.php:            'firstOptionLabel' => $this->firstOptionLabel,
year/widgets/ExSelect.php:            'firstOptionCallBack' => $this->firstOptionCallBack,
year/widgets/ExSelect.php:            'callback' => $this->callback,
year/widgets/ExSelect.php:            'beforeLoadChildren' => $this->beforeLoadChildren,
year/widgets/ExSelect.php:            'debug' => $this->debug,
year/widgets/ExSelect.php:        if(!empty($this->options['initNodeId'])){
year/widgets/ExSelect.php:            if(empty($this->loadAncestorsUrl)){
year/widgets/ExSelect.php:        $options = \yii\helpers\Json::encode($this->options);
year/widgets/ExSelect.php:         * url:'<?php echo $this->createUrl('4ics2');?>',
year/widgets/ExSelect.php:           {$this->apiVar} = jQuery('{$this->container}').exSelect({$options});
year/widgets/ExSelect.php:        $view = $this->getView();
year/widgets/ExSelect.php:        $view->registerJs("var {$this->apiVar};", View::POS_HEAD, __CLASS__ . 'api-var#' . $this->apiVar);
year/widgets/ExSelect.php:        $view->registerJs($jsCode, View::POS_READY, __CLASS__ . '#' . $this->getId());
year/widgets/ExSelect.php:        $view = $this->getView();
year/widgets/JFileApiAsset.php:        if(empty($this->sourcePath)){
year/widgets/JFileApiAsset.php:            $this->sourcePath = dirname(__FILE__) . DIRECTORY_SEPARATOR . 'assets/jquery.fileapi/dist';
year/widgets/JFileApiAsset.php:        if (empty($this->js)) {
year/widgets/JFileApiAsset.php:            $this->js = $this->getJs();
year/widgets/JContextMenu.php:        JContextMenuAsset::register($this->getView());
year/widgets/ColumnListView.php:        $numColumns = (int)$this->columns; // Number of columns
year/widgets/ColumnListView.php:        $out[] = Html::beginTag($this->itemsTagName, ['class' => $this->itemsCssClass]);
year/widgets/ColumnListView.php:        // $models = $this->dataProvider->getModels();
year/widgets/ColumnListView.php:        $keys = $this->dataProvider->getKeys();
year/widgets/ColumnListView.php:        $data = $this->dataProvider->getModels();
year/widgets/ColumnListView.php:            $htmlTableOptions = ArrayHelper::merge(['class' => 'ui-table'],  $this->htmlTableOptions);
year/widgets/ColumnListView.php:                $out[] = $this->renderItem($item, $keys[$i], $i);
year/widgets/ColumnListView.php:            $this->renderEmpty();
year/widgets/ColumnListView.php:        $out[] = Html::endTag($this->itemsTagName);
year/widgets/ColumnListView.php:        return implode($this->separator, $out);
year/widgets/JCropperAsset.php:            $this->js = [
year/widgets/JCropperAsset.php:            $this->css = [
year/widgets/JCropperAsset.php:            $this->js = [
year/widgets/JCropperAsset.php:            $this->css = [
year/widgets/PageletBlock.php:        $block = ob_get_clean() . $this->content;
year/widgets/PageletBlock.php:        $id = $this->getId();
year/widgets/PageletBlock.php:       document.getElementById("{$this->targetId}").innerHTML =
year/widgets/AccountingJsAsset.php:            $this->js = [
year/widgets/AccountingJsAsset.php:            $this->js = [
year/widgets/JsBlock.php:        if(empty($this->content)){
year/widgets/JsBlock.php:        if(empty($this->content)){
year/widgets/JsBlock.php:            if ($this->renderInPlace) {
year/widgets/JsBlock.php:            $block = $this->content ;
year/widgets/JsBlock.php:        $this->view->registerJs($block, $this->pos,$this->key) ;
year/widgets/JQueryBbqAsset.php:            $this->js = [
year/widgets/JQueryBbqAsset.php:            $this->js = [
year/widgets/DetailLinkColumn.php:        if (empty($this->urlExpression)) {
year/widgets/DetailLinkColumn.php:         $this->registerClientScript();
year/widgets/DetailLinkColumn.php:        if ($this->urlExpression !== null)
year/widgets/DetailLinkColumn.php:            $url = call_user_func_array($this->urlExpression, [$model, $key, $index]);
year/widgets/DetailLinkColumn.php:            $url = $this->url;
year/widgets/DetailLinkColumn.php:        if ($this->labelExpression !== null)
year/widgets/DetailLinkColumn.php:            $label = call_user_func_array($this->labelExpression, [$model, $key, $index]);
year/widgets/DetailLinkColumn.php:            $label = $this->label;
year/widgets/DetailLinkColumn.php:        $options = $this->linkOptions;
year/widgets/DetailLinkColumn.php:        Html::addCssClass($options, $this->cssClass);
year/widgets/DetailLinkColumn.php:        if (is_string($this->imageUrl))
year/widgets/DetailLinkColumn.php:            return Html::a(Html::image($this->imageUrl, $label), $url, $options);
year/widgets/DetailLinkColumn.php:        $view = $this->grid->getView();
year/widgets/DetailLinkColumn.php:        $data = Json::encode($this->submitData);
year/widgets/DetailLinkColumn.php:        $afterAjaxUpdate = $this->afterAjaxUpdate;
year/widgets/DetailLinkColumn.php:        $responseFilter = $this->responseFilter ;
year/widgets/DetailLinkColumn.php:        $cache = Json::encode($this->cacheData) ;
year/widgets/DetailLinkColumn.php:       $this->ajaxErrorMessage = CHtml::encode($this->ajaxErrorMessage);
year/widgets/DetailLinkColumn.php:       $afterAjaxUpdate = CJavaScript::encode($this->afterAjaxUpdate);
year/widgets/DetailLinkColumn.php:        // 	$js[]="jQuery(document).on('click','#{$this->grid->id} a.{$class}',$function);";
year/widgets/DetailLinkColumn.php:\$(document).on('click','#{$this->grid->id} a.{$this->cssClass}', function(){
year/widgets/DetailLinkColumn.php:                              \$insertingTd.empty().html('{$this->ajaxErrorMessage}');
year/widgets/docs/ExSelect.md:        'url' => Url::to(['/sys/area-load-children']), // $this->createUrl('4areaSelect'),
year/widgets/docs/ExSelect.md:            $this->loadAreaParent($id, $ancestors);
year/widgets/docs/ExSelect.md:             $this->loadParent($pid,$ancestors);
year/widgets/JQRelCopyAsset.php:        if(empty($this->sourcePath)){
year/widgets/JQRelCopyAsset.php:           // $this->sourcePath = dirname(__FILE__) . DIRECTORY_SEPARATOR . 'assets/jquery.fileapi/dist';
year/widgets/JQRelCopyAsset.php:        if (empty($this->js)) {
year/widgets/JQRelCopyAsset.php:            $this->js = $this->getJs();
year/widgets/marquee/LiMarqueeAsset.php:        if(empty($this->sourcePath)){
year/widgets/marquee/LiMarqueeAsset.php:            $this->sourcePath = __DIR__ . '/assets';
year/widgets/marquee/JMarqueeAsset.php:        if(empty($this->sourcePath)){
year/widgets/marquee/JMarqueeAsset.php:            $this->sourcePath = __DIR__ . '/assets';
year/widgets/docs/how-to.md:        $assetBundle::register($this->getView());
year/widgets/docs/how-to.md:        $themeAsset::register($this->getView());
year/widgets/docs/how-to.md:           if (empty($this->$type)) {
year/widgets/docs/how-to.md:               $this->$type = YII_DEBUG ? $srcFiles : $minFiles;
year/widgets/docs/how-to.md:           if (empty($this->sourcePath)) {
year/widgets/docs/how-to.md:               $this->sourcePath = $path;
year/widgets/docs/how-to.md:           $this->setSourcePath(__DIR__ . '/../assets');
year/widgets/docs/how-to.md:           $this->setupAssets('css', ['css/typeahead', 'css/typeahead-kv']);
year/widgets/docs/how-to.md:           $this->setupAssets('js', ['js/typeahead.jquery', 'js/typeahead-kv']);
year/widgets/docs/how-to.md:          $language = $this->language ? $this->language : Yii::$app->language;
year/widgets/docs/how-to.md:          $this->js[] = 'language-' . $language . '.js';
year/widgets/BxSlider.php:        if(empty($this->selector)){
year/widgets/BxSlider.php:        $view = $this->getView();
year/widgets/BxSlider.php:        $options = empty($this->options)? '' : Json::encode($this->options);
year/widgets/BxSlider.php:       jQuery('{$this->selector}').bxSlider({$options});
year/widgets/BxSlider.php:        //$view->registerJs($jsInit,\yii\web\View::POS_READY,__CLASS__.$this->id);
year/widgets/JQRelCopy.php:     * $this->widget('zii.widgets.jui.CJuiDatePicker',$datePickerConfig);
year/widgets/JQRelCopy.php:     * $this->widget('ext.jqrelcopy.JQRelcopy',
year/widgets/JQRelCopy.php:        $this->_assets  = JQRelCopyAsset::register($this->view);
year/widgets/JQRelCopy.php:        if (!empty($this->removeText))
year/widgets/JQRelCopy.php:            $htmlOptions = array_merge($this->removeHtmlOptions,array('onclick'=>$onClick));
year/widgets/JQRelCopy.php:            $append =  Html::a($this->removeText,'#',$htmlOptions);
year/widgets/JQRelCopy.php:            $this->options['append'] = empty($this->options['append']) ? $append : $append .' '.$this->options['append'];
year/widgets/JQRelCopy.php:        if (!empty($this->jsBeforeClone)){
year/widgets/JQRelCopy.php:            $this->options['beforeClone'] = $this->jsBeforeClone;
year/widgets/JQRelCopy.php:        if (!empty($this->jsAfterClone)){
year/widgets/JQRelCopy.php:            $this->options['afterClone'] = $this->jsAfterClone;
year/widgets/JQRelCopy.php:        if (!empty($this->jsBeforeNewId)){
year/widgets/JQRelCopy.php:            $this->options['beforeNewId'] = $this->jsBeforeNewId;
year/widgets/JQRelCopy.php:        if (!empty($this->jsAfterNewId)){
year/widgets/JQRelCopy.php:            $this->options['afterNewId'] = $this->jsAfterNewId;
year/widgets/JQRelCopy.php:        if (!empty($this->jsPutClone)){
year/widgets/JQRelCopy.php:            $this->options['putClone'] = $this->jsPutClone;
year/widgets/JQRelCopy.php:        $options = Json::encode($this->options);
year/widgets/JQRelCopy.php:            jQuery('#{$this->id}').relCopy($options);
year/widgets/JQRelCopy.php:        $this->view->registerJs($jsInit,View::POS_READY,__CLASS__.'#'.$this->id);
year/helpers/WebJumper/jumpBackDialog.php:$this->beginWidget('zii.widgets.jui.CJuiDialog', array(
year/helpers/WebJumper/jumpBackDialog.php:<?php $this->endWidget('zii.widgets.jui.CJuiDialog'); ?>
year/widgets/ExSelectAsset.php:            $this->js = [
year/widgets/ExSelectAsset.php:            $this->css = [
year/widgets/ExSelectAsset.php:            $this->js = [
year/widgets/ExSelectAsset.php:            $this->css = [
year/widgets/JFileApi.php:        if (empty($this->url)) {
year/widgets/JFileApi.php:            $this->url = \yii\helpers\Url::to('');
year/widgets/JFileApi.php:        if (empty($this->id)) {
year/widgets/JFileApi.php:            $this->id = $this->hasModel() ? Html::getInputId($this->model, $this->attribute) : $this->getId();
year/widgets/JFileApi.php:        $this->options['id'] = $this->id;
year/widgets/JFileApi.php:        if (empty($this->name)) {
year/widgets/JFileApi.php:            $this->name = $this->hasModel() ? Html::getInputName($this->model, $this->attribute) : $this->id;
year/widgets/JFileApi.php:        $asset = JFileApiAsset::register($this->view);
year/widgets/JFileApi.php:      $this->view->registerJs($globalJs,View::POS_HEAD) ;
year/widgets/JFileApi.php:            $this->render('file-api/js-multiple',[]);
year/widgets/JFileApi.php:         $this->initOptions($asset);
year/widgets/JFileApi.php:        if(!isset($this->jsOptions['sessionName'])){
year/widgets/JFileApi.php:            $this->jsOptions['sessionName'] = \app\helpers\Web::getSessionNameIdPair()[0] ;
year/widgets/JFileApi.php:        if(!isset($this->jsOptions['sessionId'])){
year/widgets/JFileApi.php:            $this->jsOptions['sessionId'] = \app\helpers\Web::getSessionNameIdPair()[1] ;
year/widgets/JFileApi.php:        if(!isset($this->jsOptions['onComplete'])){
year/widgets/JFileApi.php:            $this->jsOptions['onComplete'] = new JsExpression('
year/widgets/JFileApi.php:        if(!isset($this->jsOptions['ele'])){
year/widgets/JFileApi.php:            $this->jsOptions['ele'] = new JsExpression("
year/widgets/JFileApi.php:                  document.getElementById('{$this->id}')
year/widgets/JFileApi.php:        if(!isset($this->jsOptions['url'])){
year/widgets/JFileApi.php:            $this->jsOptions['url'] = $this->url ;
year/widgets/JFileApi.php:        $this->jsOptions['url'] = isset($this->jsOptions['url']) ? $this->jsOptions['url'] : $this->url ;
year/widgets/JFileApi.php:        if(empty($this->jsOptions['url'])){
year/widgets/JFileApi.php:           $this->jsOptions['url'] = Url::to(['']);
year/widgets/JFileApi.php:        $this->registerScripts();
year/widgets/JFileApi.php:        if ($this->renderTag === true) {
year/widgets/JFileApi.php:            echo $this->renderTag();
year/widgets/JFileApi.php:        return Html::fileInput($this->name, null, $this->options);
year/widgets/JFileApi.php:        $jsOptions = Json::encode($this->jsOptions);
year/widgets/JFileApi.php:        $this->view->registerJs($script, View::POS_END);
year/widgets/JFileApi.php:        foreach ($this->jsOptions as $key => $val) {
year/widgets/JFileApi.php:            if (in_array($key, $this->events) && !($val instanceof JsExpression)) {
year/widgets/JFileApi.php:                $this->jsOptions[$key] = new JsExpression($val);
year/helpers/WebJumper/jumpToDialog.php:$this->beginWidget('zii.widgets.jui.CJuiDialog', array(
year/helpers/WebJumper/jumpToDialog.php:<?php $this->endWidget('zii.widgets.jui.CJuiDialog'); ?>
year/helpers/WebJumper/alice/jumpBackDialog.php:$this->beginWidget('zii.widgets.jui.CJuiDialog', array(
year/helpers/WebJumper/alice/jumpBackDialog.php:<?php $this->endWidget('zii.widgets.jui.CJuiDialog'); ?>
year/helpers/WebJumper/alice/jumpToDialog.php:$this->beginWidget('zii.widgets.jui.CJuiDialog', array(
year/helpers/WebJumper/alice/jumpToDialog.php:<?php $this->endWidget('zii.widgets.jui.CJuiDialog'); ?>
year/widgets/DetailView.php:        if(empty($this->attributes)){
year/widgets/DetailView.php:            $this->attributes = [] ;
year/widgets/DetailView.php:            if(!empty($this->columnAttributes)){
year/widgets/DetailView.php:                foreach($this->columnAttributes as $colAttributes){
year/widgets/DetailView.php:                    $this->attributes = array_merge($this->attributes,$colAttributes);
year/widgets/DetailView.php:                     $this->colIndexAttributes[] = range($colIdx,($colIdx + $colAttributesCount)-1);
year/widgets/DetailView.php:        foreach ($this->attributes as $idx => $attribute) {
year/widgets/DetailView.php:                $attributeContents[$attrName] = $this->renderAttribute($attribute, $i++);
year/widgets/DetailView.php:            $attributeIndexContents[$idx] = $this->renderAttribute($attribute, $i++);
year/widgets/DetailView.php:        if (empty($this->colIndexAttributes)) {
year/widgets/DetailView.php:            }, $this->colIndexAttributes));
year/widgets/DetailView.php:                foreach ($this->colIndexAttributes as $colIndexAttributes) {
year/widgets/DetailView.php:        $tag = ArrayHelper::remove($this->options, 'tag', 'table');
year/widgets/DetailView.php:        echo Html::tag($tag, implode("\n", $rows), $this->options);
year/helpers/WebJumper/bootstrap/jumpBackDialog.php:$this->beginWidget('zii.widgets.jui.CJuiDialog', array(
year/helpers/WebJumper/bootstrap/jumpBackDialog.php:<?php $this->endWidget('zii.widgets.jui.CJuiDialog'); ?>
year/api/rest/DeleteAction.php:        $model = $this->findModel($id);
year/api/rest/DeleteAction.php:        if ($this->checkAccess) {
year/api/rest/DeleteAction.php:            call_user_func($this->checkAccess, $this->id, $model);
year/api/service/ServiceExecutor.php:        $this->serviceObj = $serviceObj;
year/api/service/ServiceExecutor.php:        return $this->serviceObj;
year/api/service/ServiceExecutor.php:        $serviceObj = $this->getServiceObject();
year/api/service/ServiceExecutor.php:        if (empty($this->serviceObj)) {
year/api/service/ServiceExecutor.php:        $methodParams = $this->buildMethodParams($method, $params);
year/api/service/ServiceExecutor.php:        //   todo return $this->invoke($name ,)
year/api/service/ServiceExecutor.php:        $this->serviceClass = $serviceClass;
year/api/service/ServiceExecutor.php:        $this->serviceObj = \Yii::createObject($this->serviceClass);
year/api/service/ServiceExecutor.php:        return $this->serviceClass;
year/api/service/ServiceExecutor.php:        $method = new \ReflectionMethod($this->serviceObj, $method);
year/api/base/README.md:                            'order_id' => $this->order_id,
year/api/base/README.md:                            'province_id' => $this->province_id,
year/api/base/README.md:                            'city_id' => $this->city_id,
year/api/base/README.md:                            'district_id' => $this->district_id,
year/api/base/README.md:                            'area_id' => $this->area_id,
year/api/base/README.md:                        $query->andFilterWhere(['like', 'consignee', $this->consignee])
year/api/base/README.md:                            ->andFilterWhere(['like', 'tel', $this->tel])
year/api/base/Runner.php:        $this->init();
year/api/base/Runner.php:        $this->requestMethod = \Yii::$app->request->getMethod();
year/api/base/Runner.php:        $this->requestParams = $params;
year/api/base/Runner.php:        if (empty($this->requestParams)) {
year/api/base/Runner.php:            // $this->requestParams =  $get + \Yii::$app->request->post();
year/api/base/Runner.php:            $this->requestParams = ArrayHelper::merge($get, \Yii::$app->request->post());
year/api/base/Runner.php:        return $this->requestParams;
year/api/base/Runner.php:        $this->module = $module;
year/api/base/Runner.php:        // unset($this->module);
year/api/base/Runner.php://        print_r($this->hostModules);
year/api/base/Runner.php:        foreach ($this->hostModules as $pattern => $module) {
year/api/base/Runner.php:                $this->module = $module;
year/api/base/Runner.php:        if(empty($this->module)){
year/api/base/Runner.php:                $this->module = $methodParts[0] ; // count(arr) -1
year/api/base/Runner.php:        if (is_string($this->module)) {
year/api/base/Runner.php:            $this->module = \Yii::$app->getModule($this->module);
year/api/base/Runner.php:        return $this->module;
year/api/base/Runner.php:        $this->module = null;
year/api/base/Runner.php:        $module = $this->getModule($apiMethod);
year/api/base/Runner.php:        if (isset($this->apiHandlerMap[$apiMethod])) {
year/api/base/Runner.php:        list($serviceObj, $methodName) = $this->resolveApiHandler($apiMethod);
year/api/base/Runner.php:        $requestParams = $this->getRequestParams();
year/api/base/Runner.php:        if (isset($requestParams[$this->apiMethodIdParam])) {
year/api/base/Runner.php:            $this->apiMethodId = $requestParams[$this->apiMethodIdParam];
year/api/base/Runner.php:        list($handler, $params) = $this->createApiHandler($apiMethod, $apiMethodParams);
year/api/base/Runner.php:                    if (!in_array($this->requestMethod, $allowed)) {
year/api/base/Runner.php:            $this->setRequestParams($callParams);
year/api/base/Runner.php:            $result = $this->run();
year/api/base/Runner.php:            if (null != $this->apiMethodId) {
year/api/base/Runner.php:                $results[$this->apiMethodId] = $result;
year/api/base/Runner.php:            // unset($this->module);
year/api/base/Runner.php:        $this->set_error_handlers(array(set_error_handler($handler), $handler));
year/api/base/Runner.php:        $this->set_error_handlers(array($handler, set_error_handler($handler)));
year/api/base/ApiClientException.php:        $this->bizCode = $bizCode ;
year/api/base/SampleAspect.php:        $this->joinPoints = $joinPoints ;
year/api/base/SampleAspect.php:        $this->joinPoints[] = $joinPoint ;
year/api/base/SampleAspect.php:        foreach ($this->joinPoints as $idx=>$joinPoint){
year/helpers/WebJumper/bootstrap/jumpToDialog.php:$this->beginWidget('zii.widgets.jui.CJuiDialog', array(
year/helpers/WebJumper/bootstrap/jumpToDialog.php:<?php $this->endWidget('zii.widgets.jui.CJuiDialog'); ?>
year/api/service/CrudService.php:        if ($this->modelClass === null) {
year/api/service/CrudService.php:        return $this->findModel($id);
year/api/service/ServiceProxy.php:        $this->target = $target ;
year/api/service/ServiceProxy.php:       $rc =  new \ReflectionClass($this->target) ;
year/api/service/ServiceProxy.php:            if (is_string($this->target)){
year/api/service/ServiceProxy.php:               // $this->target =  $rc->newInstance();
year/api/service/ServiceProxy.php:            $return = $method->invokeArgs($this->target , $arguments) ;
year/api/rest/OptionsAction.php:        $options = $id === null ? $this->collectionOptions : $this->resourceOptions;
year/api/rest/ActiveController.php:        if ($this->serviceClass === null) {
year/api/rest/ActiveController.php:                'serviceClass' => $this->serviceClass,
year/api/rest/ActiveController.php:                'serviceClass' => $this->serviceClass,
year/api/rest/ActiveController.php:                'serviceClass' => $this->serviceClass,
year/api/rest/ActiveController.php:                'scenario' => $this->createScenario,
year/api/rest/ActiveController.php:                'serviceClass' => $this->serviceClass,
year/api/rest/ActiveController.php:                'scenario' => $this->updateScenario,
year/api/rest/ActiveController.php:                'serviceClass' => $this->serviceClass,
year/api/rest/UpdateAction.php:        $model =   $this->getServiceExecutor()
year/api/rest/UpdateAction.php:        if ($this->checkAccess) {
year/api/rest/UpdateAction.php:            call_user_func($this->checkAccess, $this->id, $model);
year/api/rest/UpdateAction.php:        $model->scenario = $this->scenario;
year/api/rest/ViewAction.php:        $model =   $this->getServiceExecutor()
year/api/rest/ViewAction.php:        if ($this->checkAccess) {
year/api/rest/ViewAction.php:            call_user_func($this->checkAccess, $this->id, $model);
year/api/rest/CrudController.php:        if ($this->serviceClass === null) {
year/api/rest/CrudController.php:        $serviceExecutor->setServiceClass( $this->serviceClass ) ;
year/api/rest/CrudController.php:        $serviceExecutor = $this->getServiceExecutor();
year/api/rest/CrudController.php:        return $this->getServiceExecutor()
year/api/rest/CrudController.php:        return $this->getServiceExecutor()
year/api/rest/CrudController.php:        return $this->getServiceExecutor()
year/api/rest/CrudController.php:        return $this->getServiceExecutor()
year/api/rest/Action.php:        if ($this->serviceClass === null) {
year/api/rest/Action.php:        $serviceExecutor->setServiceClass( $this->serviceClass ) ;
year/api/rest/Action.php:        if ($this->findModel !== null) {
year/api/rest/Action.php:            return call_user_func($this->findModel, $id, $this);
year/api/rest/Action.php:        $model = $this->getServiceExecutor()
year/api/rest/READEME.md:        $model = $this->findModel($id);
year/api/rest/READEME.md:        if ($this->checkAccess) {
year/api/rest/READEME.md:            call_user_func($this->checkAccess, $this->id, $model);
year/api/rest/READEME.md:        $model = $this->findModel($id);
year/api/rest/READEME.md:        if ($this->checkAccess) {
year/api/rest/READEME.md:            call_user_func($this->checkAccess, $this->id, $model);
year/api/rest/READEME.md:        $model = $this->findModel($id);
year/api/rest/READEME.md:        if ($this->checkAccess) {
year/api/rest/READEME.md:            call_user_func($this->checkAccess, $this->id, $model);
year/api/rest/READEME.md:        $model->scenario = $this->scenario;
year/api/rest/READEME.md: > $model = $this->findModel($id) ;
year/api/rest/READEME.md:>if ($this->checkAccess) {
year/api/rest/READEME.md:                    call_user_func($this->checkAccess, $this->id, $model);
year/grid/ActionColumn.php:        if (!isset($this->buttons['view'])) {
year/grid/ActionColumn.php:            $this->buttons['view'] = function ($url, $model) {
year/grid/ActionColumn.php:        if (!isset($this->buttons['update'])) {
year/grid/ActionColumn.php:            $this->buttons['update'] = function ($url, $model) {
year/grid/ActionColumn.php:        if (!isset($this->buttons['delete'])) {
year/grid/ActionColumn.php:            $this->buttons['delete'] = function ($url, $model) {
year/api/rest/IndexAction.php:        if ($this->checkAccess) {
year/api/rest/IndexAction.php:            call_user_func($this->checkAccess, $this->id);
year/api/rest/IndexAction.php:        return $this->prepareDataProvider();
year/api/rest/IndexAction.php:        if ($this->prepareDataProvider !== null) {
year/api/rest/IndexAction.php:            return call_user_func($this->prepareDataProvider, $this);
year/api/rest/IndexAction.php:        return $this->getServiceExecutor()
year/grid/BlockGridView.php:            $view = $this->getView() ;
year/grid/BlockGridView.php:                return $this->getView()->blocks[$blockId];
my/migration/console/dev_blogs/console-app.md:> $this->stdout("Hello?\n", Console::BOLD); // 输出加错的文本                           
my/migration/console/dev_blogs/console-app.md:   $name = $this->ansiFormat('Alex', Console::FG_YELLOW);
year/api/rest/CreateAction.php:        if ($this->checkAccess) {
year/api/rest/CreateAction.php:            call_user_func($this->checkAccess, $this->id);
year/api/rest/CreateAction.php:        $model = $this->getServiceExecutor()
year/api/rest/CreateAction.php:        $model = new $this->modelClass([
year/api/rest/CreateAction.php:            'scenario' => $this->scenario,
year/api/rest/CreateAction.php:            $response->getHeaders()->set('Location', Url::toRoute([$this->viewAction, 'id' => $id], true));
year/api/rest/CreateAction.php:            $response->getHeaders()->set('Location', Url::toRoute([$this->viewAction, 'id' => $id], true));
my/migration/console/controllers/DbController.php:        $path = \Yii::getAlias($this->migrationPath);
my/migration/console/controllers/DbController.php:            $this->stderr('Error: The migration directory does not exist: ' . $this->migrationPath . "\n");
my/migration/console/controllers/DbController.php:        $this->migrationPath = $path;
my/migration/console/controllers/DbController.php:Usage: yiic {$this->uniqueId} <action>
my/migration/console/controllers/DbController.php:        return \Yii::$app->get($this->dbConnection);
my/migration/console/controllers/DbController.php:        $db = $this->getDb();
my/migration/console/controllers/DbController.php:        $code .= $this->indent(2) . "if (\$this->dbConnection->schema instanceof CMysqlSchema) {\n";
my/migration/console/controllers/DbController.php:        if ($this->foreignKeyChecks == false) {
my/migration/console/controllers/DbController.php:            $code .= $this->indent(2) . "   \$this->execute('SET FOREIGN_KEY_CHECKS = 0;');\n";
my/migration/console/controllers/DbController.php:        $code .= $this->indent(2) . "   \$options = 'ENGINE=InnoDB DEFAULT CHARSET=utf8';\n";
my/migration/console/controllers/DbController.php:        $code .= $this->indent(2) . "} else {\n";
my/migration/console/controllers/DbController.php:        $code .= $this->indent(2) . "   \$options = '';\n";
my/migration/console/controllers/DbController.php:        $code .= $this->indent(2) . "}\n";
my/migration/console/controllers/DbController.php:        $filename = $this->migrationPath . DIRECTORY_SEPARATOR . $migrationClassName . ".php";
my/migration/console/controllers/DbController.php:        $prefixes = explode(",", $this->prefix);
my/migration/console/controllers/DbController.php:            if ($this->ignoreMigrationTable && $table->name == "migration") {
my/migration/console/controllers/DbController.php:            if (in_array($table->name, explode(",", $this->excludeTables))) {
my/migration/console/controllers/DbController.php:            if ($this->truncateTable == true) {
my/migration/console/controllers/DbController.php:                $codeTruncate .= $this->generateTruncate($table, $schema);
my/migration/console/controllers/DbController.php:            if ($this->createSchema == true) {
my/migration/console/controllers/DbController.php:                $codeSchema .= $this->generateSchema($table, $schema);
my/migration/console/controllers/DbController.php:                $codeForeignKeys .= $this->generateForeignKeys($table, $schema);
my/migration/console/controllers/DbController.php:            if ($this->insertData == true) {
my/migration/console/controllers/DbController.php:                $codeInserts .= $this->generateInserts($table, $schema);
my/migration/console/controllers/DbController.php:        if ($this->foreignKeyChecks == false) {
my/migration/console/controllers/DbController.php:            $code .= $this->indent(2) . "if (\$this->dbConnection->schema instanceof CMysqlSchema)\n";
my/migration/console/controllers/DbController.php:            $code .= $this->indent(2) . "   \$this->execute('SET FOREIGN_KEY_CHECKS = 1;');\n";
my/migration/console/controllers/DbController.php:        $migrationClassCode = $this->renderFile(
my/migration/console/controllers/DbController.php:        if ($this->_displayFkWarning) {
my/migration/console/controllers/DbController.php:        $code = "\n\n\n" . $this->indent(2) . "// Schema for table '" . $table->name . "'\n";
my/migration/console/controllers/DbController.php:        $code .= $this->indent(2) . '$this->createTable("' . $table->name . '", ';
my/migration/console/controllers/DbController.php:        $code .= $this->indent(3) . 'array(' . "\n";
my/migration/console/controllers/DbController.php:            $code .= $this->indent(3) . '"' . $col->name . '"=>"' . $this->resolveColumnType($col) . '",' . "\n";
my/migration/console/controllers/DbController.php:        $code .= $this->generatePrimaryKeys($table->columns);
my/migration/console/controllers/DbController.php:        $code .= $this->indent(3) . '), ' . "\n";
my/migration/console/controllers/DbController.php:        $code .= $this->indent(2) . '$options);';
my/migration/console/controllers/DbController.php:                return $this->indent(3) . '"PRIMARY KEY (' . $col->name . ')"' . "\n";
my/migration/console/controllers/DbController.php:        $code = "\n\n\n" . $this->indent(2) . "// Foreign Keys for table '" . $table->name . "'\n";
my/migration/console/controllers/DbController.php:        $code .= $this->indent(2) . "if ((\$this->dbConnection->schema instanceof CSqliteSchema) == false):\n";
my/migration/console/controllers/DbController.php:            $code .= $this->indent(3) . "\$this->addForeignKey('fk_{$table->name}_{$foreignKey[0]}_{$name}', '{$table->name}', '{$name}', '{$foreignKey[0]}', '{$foreignKey[1]}', null, null); // FIX RELATIONS \n";
my/migration/console/controllers/DbController.php:        $code .= $this->indent(2) . "endif;\n";
my/migration/console/controllers/DbController.php:        $this->_displayFkWarning = TRUE;
my/migration/console/controllers/DbController.php:        $data = $query->createCommand($this->getDb())->query();
my/migration/console/controllers/DbController.php:        $code = "\n\n\n" . $this->indent(2) . "// Data for table '" . $table->name . "'\n";
my/migration/console/controllers/DbController.php:            $code .= $this->indent(2) . '$this->insert("' . $table->name . '", array(' . "\n";
my/migration/console/controllers/DbController.php:                if ($this->insertAutoIncrementValues == false && $table->columns[$column]->autoIncrement === true) {
my/migration/console/controllers/DbController.php:                $code .= $this->indent(3) . '"' . $column . '"=>' . (($value === null) ? 'null' :
my/migration/console/controllers/DbController.php:            $code .= $this->indent(2) . ') );' . "\n\n";
my/migration/console/controllers/DbController.php:        $code .= $this->indent(2) . '$this->truncateTable("' . $table->name . '");' . "\n";
my/migration/console/controllers/DbController.php:        $this->stdout('hi  ' . __METHOD__);
year/api/rest/Serializer.php:        if ($this->request === null) {
year/api/rest/Serializer.php:            $this->request = Yii::$app->getRequest();
year/api/rest/Serializer.php:        if ($this->response === null) {
year/api/rest/Serializer.php:            $this->response = Yii::$app->getResponse();
year/api/rest/Serializer.php:            return $this->serializeModelErrors($data);
year/api/rest/Serializer.php:            return $this->serializeModel($data);
year/api/rest/Serializer.php:            return $this->serializeDataProvider($data);
year/api/rest/Serializer.php:        $fields = $this->request->get($this->fieldsParam);
year/api/rest/Serializer.php:        $expand = $this->request->get($this->expandParam);
year/api/rest/Serializer.php:        $models = $this->serializeModels($dataProvider->getModels());
year/api/rest/Serializer.php:            $this->addPaginationHeaders($pagination);
year/api/rest/Serializer.php:        if ($this->request->getIsHead()) {
year/api/rest/Serializer.php:        } elseif ($this->collectionEnvelope === null) {
year/api/rest/Serializer.php:                $this->collectionEnvelope => $models,
year/api/rest/Serializer.php:                return array_merge($result, $this->serializePagination($pagination));
year/api/rest/Serializer.php:            $this->linksEnvelope => Link::serialize($pagination->getLinks(true)),
year/api/rest/Serializer.php:            $this->metaEnvelope => [
year/api/rest/Serializer.php:        $this->response->getHeaders()
year/api/rest/Serializer.php:            ->set($this->totalCountHeader, $pagination->totalCount)
year/api/rest/Serializer.php:            ->set($this->pageCountHeader, $pagination->getPageCount())
year/api/rest/Serializer.php:            ->set($this->currentPageHeader, $pagination->getPage() + 1)
year/api/rest/Serializer.php:            ->set($this->perPageHeader, $pagination->pageSize)
year/api/rest/Serializer.php:        if ($this->request->getIsHead()) {
year/api/rest/Serializer.php:            list ($fields, $expand) = $this->getRequestedFields();
year/api/rest/Serializer.php:        $this->response->setStatusCode(422, 'Data Validation Failed.');
year/api/rest/Serializer.php:        list ($fields, $expand) = $this->getRequestedFields();
year/widgets/FormDialog.php:        if (empty($this->options['onSuccess'])){
year/widgets/FormDialog.php:            $this->options['onSuccess']='js:function(data, e){alert("Success")}';
year/widgets/FormDialog.php:        $options= CJavaScript::encode($this->options);
year/widgets/FormDialog.php:        Yii::app()->clientScript->registerScript('FormDialog'.$this->link, "$('{$this->link}').formDialog({$options})");
year/widgets/FormDialog.php:        $view = $this->getView();
year/widgets/FormDialog.php:        if(!empty($this->dialogOptions)){
year/widgets/FormDialog.php:            $this->options['dialogOptions'] = $this->dialogOptions ;
year/widgets/FormDialog.php:        $options = Json::encode($this->options);
year/widgets/FormDialog.php:              $(document).on("click",'{$this->link}', function(e){
year/widgets/FormDialog.php:        $view->registerJs($jsInit,\yii\web\View::POS_END,__CLASS__.$this->link);
year/upload/local/urladapter/EvaThumber.php://       echo $this->uploadStorage->getPublicUrl().$thumbDir.$imageUrI;
year/upload/local/urladapter/EvaThumber.php:        return $this->uploadStorage->getPublicUrl().$thumbDir.$imageUrI ;
year/upload/local/urladapter/EvaThumber.php:        return $this->uploadStorage->getPublicUrl($imageUrI) . "_{$height}x{$width}.{$suffix}";
year/base/EventEmitter.php:        $this->trigger($eventName,$event);
year/api/rest/UrlRule.php:        if (empty($this->controller)) {
year/api/rest/UrlRule.php:        foreach ((array) $this->controller as $urlName => $controller) {
year/api/rest/UrlRule.php:                $urlName = $this->pluralize ? Inflector::pluralize($controller) : $controller;
year/api/rest/UrlRule.php:        $this->controller = $controllers;
year/api/rest/UrlRule.php:        $this->prefix = trim($this->prefix, '/');
year/api/rest/UrlRule.php:        $only = array_flip($this->only);
year/api/rest/UrlRule.php:        $except = array_flip($this->except);
year/api/rest/UrlRule.php:        $patterns = $this->extraPatterns + $this->patterns;
year/api/rest/UrlRule.php:        foreach ($this->controller as $urlName => $controller) {
year/api/rest/UrlRule.php:            $prefix = trim($this->prefix . '/' . $urlName, '/');
year/api/rest/UrlRule.php:                    $rules[$urlName][] = $this->createRule($pattern, $prefix, $controller . '/' . $action);
year/api/rest/UrlRule.php:        $config = $this->ruleConfig;
year/api/rest/UrlRule.php:        $config['pattern'] = rtrim($prefix . '/' . strtr($pattern, $this->tokens), '/');
year/api/rest/UrlRule.php:        $config['suffix'] = $this->suffix;
year/api/rest/UrlRule.php:        foreach ($this->rules as $urlName => $rules) {
year/api/rest/UrlRule.php:        foreach ($this->controller as $urlName => $controller) {
year/api/rest/UrlRule.php:                foreach ($this->rules[$urlName] as $rule) {
year/gii/migration/FileTreeController.php:                return $this->asJson($rslt) ;
year/gii/migration/FileTreeController.php:        // return $this->renderContent( 'hi') ;
year/gii/migration/FileTreeController.php:       // return  $this->renderContent('hello');
year/gii/yunying/generators/model/Generator.php:        if (empty($this->srcDir)) {
year/gii/yunying/generators/model/Generator.php:            $this->srcDir = dirname(Yii::$app->basePath)
year/gii/yunying/generators/model/Generator.php:        $db = $this->getDbConnection();
year/gii/yunying/generators/model/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/yunying/generators/model/Generator.php:                ? $this->generateClassName($tableName)
year/gii/yunying/generators/model/Generator.php:                : $this->modelClass;
year/gii/yunying/generators/model/Generator.php:            $queryClassName = ($this->generateQuery) ? $this->generateQueryClassName($className) : false;
year/gii/yunying/generators/model/Generator.php:                'properties' => $this->generateProperties($tableSchema),
year/gii/yunying/generators/model/Generator.php:                'labels' => $this->generateLabels($tableSchema),
year/gii/yunying/generators/model/Generator.php:                'hints' => $this->generateHints($tableSchema),
year/gii/yunying/generators/model/Generator.php:               // 'rules' => $this->generateRules2($tableSchema),
year/gii/yunying/generators/model/Generator.php:                // 'searchModelRules' => $this->generateRules2($tableSchema, true),
year/gii/yunying/generators/model/Generator.php:                'enum' => $this->getEnum($tableSchema->columns),
year/gii/yunying/generators/model/Generator.php:          //    $params['timestamp'] = $this->generateTimestamp($tableSchema);
year/gii/yunying/generators/model/Generator.php:            if(! $this->generateModelDir){
year/gii/yunying/generators/model/Generator.php:                $this->srcDir,
year/gii/yunying/generators/model/Generator.php:                $this->render('model.vue.php', $params)
year/gii/yunying/generators/model/Generator.php:                $this->srcDir,
year/gii/yunying/generators/model/Generator.php:                $this->render('model-search.go.php', $params)
year/gii/yunying/generators/model/Generator.php:            $modelClassFile = Yii::getAlias('@' . str_replace('\\', '/', $this->ns)) . '/' . $className . '.php';
year/gii/yunying/generators/model/Generator.php:            if ($this->generateModelClass || !is_file($modelClassFile)) {
year/gii/yunying/generators/model/Generator.php:                    $this->render('model-extended.php', $params)
year/gii/yunying/generators/model/Generator.php:                        '@'.str_replace('\\', '/', $this->queryNs)
year/gii/yunying/generators/model/Generator.php:                if ($this->generateModelClass || !is_file($queryClassFile)) {
year/gii/yunying/generators/model/Generator.php:                        $this->render('query.php', $params)
year/gii/yunying/generators/model/Generator.php:            $suffix = str_replace(' ', '', $this->getName());
year/gii/yunying/generators/model/Generator.php:            $formDataDir = Yii::getAlias('@'.str_replace('\\', '/', $this->ns));
year/gii/yunying/generators/model/Generator.php:            $formData = json_encode(SaveForm::getFormAttributesValues($this, $this->formAttributes()));
year/gii/yunying/generators/model/Generator.php:        $routePath = Inflector::camel2id(StringHelper::basename($this->modelClass));
year/gii/yunying/generators/model/Generator.php:        $driverName = $this->getDbDriverName();
year/gii/yunying/generators/model/Generator.php:        $db = $this->getDbConnection();
year/gii/yunying/generators/model/Generator.php:                if (!$this->isColumnAutoIncremental($table, $uniqueColumns)) {
year/gii/yunying/generators/api/Generator.php:             $this->apiPath,
year/gii/yunying/generators/api/Generator.php:             $this->modelClass . '.js',
year/gii/yunying/generators/api/Generator.php:            new CodeFile($apiServiceFile, $this->render('service.js.php',[
year/gii/yunying/generators/api/Generator.php:                'serviceName'=>$this->generateClassName($this->tableName),
year/gii/yunying/generators/api/Generator.php:            $this->podPath,
year/gii/yunying/generators/api/Generator.php:            $this->podId,
year/gii/yunying/generators/api/Generator.php:        $files[]  =   new CodeFile($routesFile, $this->render('routes.go.php')) ;
year/gii/yunying/generators/api/Generator.php:        if (!empty($this->tableName)){
year/gii/yunying/generators/api/Generator.php:                $this->podPath,
year/gii/yunying/generators/api/Generator.php:                $this->podId,
year/gii/yunying/generators/api/Generator.php:                $this->controllerType.'.go',
year/gii/yunying/generators/api/Generator.php:               // 'fieldsInfo'=>$this->generateProperties($this->getTableSchema()),
year/gii/yunying/generators/api/Generator.php:            $files[]  =   new CodeFile($docFile, $this->render('docs.go.php',$params)) ;
year/gii/yunying/generators/api/Generator.php:        $return = $this->render('routes.go.php');
year/gii/yunying/generators/api/Generator.php:        if (!is_dir($this->apiPath)) {
year/gii/yunying/generators/api/Generator.php:            $this->addError('apiPath', ' please check the dir path which should exists： ' . $this->apiPath);
year/editor/JSONEditorAsset.php:            $this->js = [
year/editor/JSONEditorAsset.php:            $this->css = [
year/editor/JSONEditorAsset.php:            $this->js = [
year/editor/JSONEditorAsset.php:            $this->css = [
year/gii/yunying/generators/crud/Generator.php:        if(empty($this->podPath)){
year/gii/yunying/generators/crud/Generator.php:            $this->podPath = Config::getProjectHome().DIRECTORY_SEPARATOR.'pods'.DIRECTORY_SEPARATOR.'__your_pod_id__' ;
year/gii/yunying/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying/generators/crud/Generator.php:            $this->addError('modelClass', "The table associated with $class must have primary key(s).");
year/gii/yunying/generators/crud/Generator.php:            $this->podPath,
year/gii/yunying/generators/crud/Generator.php:            Inflector::camel2id($this->interactorName.'Interactor','_').'.go'
year/gii/yunying/generators/crud/Generator.php:            new CodeFile($interactorFile, $this->render('interactor.go.php')),
year/gii/yunying/generators/crud/Generator.php:        if (!empty($this->searchModelClass)) {
year/gii/yunying/generators/crud/Generator.php:            $searchModel = Yii::getAlias('@' . str_replace('\\', '/', ltrim($this->searchModelClass, '\\') . '.php'));
year/gii/yunying/generators/crud/Generator.php:            $files[] = new CodeFile($searchModel, $this->render('search.php'));
year/gii/yunying/generators/crud/Generator.php:        $viewPath = $this->getViewPath();
year/gii/yunying/generators/crud/Generator.php:        $templatePath = $this->getTemplatePath() . '/views';
year/gii/yunying/generators/crud/Generator.php:            if (empty($this->searchModelClass) && $file === '_search.php') {
year/gii/yunying/generators/crud/Generator.php:                $files[] = new CodeFile("$viewPath/$file", $this->render("views/$file"));
year/gii/yunying/generators/crud/Generator.php:        $pos = strrpos($this->controllerClass, '\\');
year/gii/yunying/generators/crud/Generator.php:        $class = substr(substr($this->controllerClass, $pos + 1), 0, -10);
year/gii/yunying/generators/crud/Generator.php:        if (empty($this->viewPath)) {
year/gii/yunying/generators/crud/Generator.php:            return Yii::getAlias('@app/views/' . $this->getControllerID());
year/gii/yunying/generators/crud/Generator.php:            return Yii::getAlias(str_replace('\\', '/', $this->viewPath));
year/gii/yunying/generators/crud/Generator.php:        foreach ($this->getColumnNames() as $name) {
year/gii/yunying/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying/generators/crud/Generator.php:        $tableSchema = $this->getTableSchema();
year/gii/yunying/generators/crud/Generator.php:        $tableSchema = $this->getTableSchema();
year/gii/yunying/generators/crud/Generator.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/yunying/generators/crud/Generator.php:            return ["[['" . implode("', '", $this->getColumnNames()) . "'], 'safe']"];
year/gii/yunying/generators/crud/Generator.php:        return $this->getColumnNames();
year/gii/yunying/generators/crud/Generator.php:        $model = new $this->modelClass();
year/gii/yunying/generators/crud/Generator.php:        foreach ($this->getColumnNames() as $name) {
year/gii/yunying/generators/crud/Generator.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/yunying/generators/crud/Generator.php:            $class = $this->modelClass;
year/gii/yunying/generators/crud/Generator.php:                    $hashConditions[] = "'{$column}' => \$this->{$column},";
year/gii/yunying/generators/crud/Generator.php:                    $likeKeyword = $this->getClassDbDriverName() === 'pgsql' ? 'ilike' : 'like';
year/gii/yunying/generators/crud/Generator.php:                    $likeConditions[] = "->andFilterWhere(['{$likeKeyword}', '{$column}', \$this->{$column}])";                    
year/gii/yunying/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying/generators/crud/Generator.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/yunying/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying/generators/crud/Generator.php:        if (!is_dir($this->podPath)) {
year/gii/yunying/generators/crud/Generator.php:            $this->addError('podPath', ' please check the pod path which should exists： ' . $this->podPath);
year/gii/yunying/generators/pod/Generator.php:        if (trim($this->getProjectHome()) != '') {
year/gii/yunying/generators/pod/Generator.php:            $this->podsPath =  $this->getProjectHome().'\pods';
year/gii/yunying/generators/pod/Generator.php:        $modulePath = $this->podsPath;
year/gii/yunying/generators/pod/Generator.php:        $podPath = $this->podsPath.'/'.$this->podID;
year/gii/yunying/generators/pod/Generator.php:            $this->render("readme.md.php")
year/gii/yunying/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/yunying/generators/pod/Generator.php:            $this->render("adapter-gin-init.go.php")
year/gii/yunying/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/yunying/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/yunying/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/yunying/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/yunying/generators/pod/Generator.php:        if (!file_exists($this->podsPath)) {
year/gii/yunying/generators/pod/Generator.php:            $this->addError('podsPath', ' please check the pods path which should must exists： ' . $this->podsPath);
year/gii/yunying/generators/pod/form.php: // $this->registerJs($js);
year/gii/yunying/generators/pod/form.v0.php: // $this->registerJs($js);
year/gii/yunying/generators/test/Generator.php:        $labels = $this->generateLabels($table);
year/gii/yunying/generators/test/Generator.php:       // $relations = $this->generateRelations();
year/gii/yunying/generators/test/Generator.php:        $db = $this->getDbConnection();
year/gii/yunying/generators/test/Generator.php:        $class = $this->modelNs.$this->modelClass;
year/gii/yunying/generators/test/Generator.php:        $this->tableName = $class::$classTableNameMethod();
year/gii/yunying/generators/test/Generator.php:        //if($this->searchModelClass !=="")
year/gii/yunying/generators/test/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/yunying/generators/test/Generator.php:            $className = $this->generateClassName($tableName);
year/gii/yunying/generators/test/Generator.php:                'modelClass' => $this->modelClass,
year/gii/yunying/generators/test/Generator.php:                'controllerClass' => $this->controllerClass,
year/gii/yunying/generators/test/Generator.php:                'labels' => $this->generateLabels($tableSchema),
year/gii/yunying/generators/test/Generator.php:                'rules' => $this->generateRules($tableSchema),
year/gii/yunying/generators/test/Generator.php:                'attributes' => $this->generateAttributes($tableSchema),
year/gii/yunying/generators/test/Generator.php:                'ns' => $this->ns,
year/gii/yunying/generators/test/Generator.php:                Yii::getAlias('@app/..'.$this->codeceptionPath.str_replace('\\', '/', $this->ns)).'/'.$className.$this->baseClassSuffix.'UnitTest.php',
year/gii/yunying/generators/test/Generator.php:                $this->render('unit.php', $params)
year/gii/yunying/generators/test/default/unit.php:        if($this->modelPK != null){
year/gii/yunying/generators/test/default/unit.php:            $cls = $this->class;
year/gii/yunying/generators/test/default/unit.php:            $model = $cls::findOne($this->modelPK);
year/gii/yunying/generators/test/default/unit.php:        $model = $this->newModelInstance();
year/gii/yunying/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be created', function () use ($model) {
year/gii/yunying/generators/test/default/unit.php:        $model = $this->newModelInstance();
year/gii/yunying/generators/test/default/unit.php:        if(!$model->save($this->isModelValidationEnabled)){
year/gii/yunying/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/yunying/generators/test/default/unit.php:        $this->modelPK = $model-><?php echo PKAttributeName($attributes); ?>;
year/gii/yunying/generators/test/default/unit.php:        $reloadedModel = $this->loadModelById($this->modelPK);
year/gii/yunying/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be saved', function () use ($reloadedModel, $model) {
year/gii/yunying/generators/test/default/unit.php:        $this->assertNotEmpty($model-><?php echo PKAttributeName($attributes); ?>);
year/gii/yunying/generators/test/default/unit.php:        $originalModel = $this->newModelInstance();
year/gii/yunying/generators/test/default/unit.php:        if(!$originalModel->save($this->isModelValidationEnabled)){
year/gii/yunying/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/yunying/generators/test/default/unit.php:        $this->modelPK = $originalModel-><?php echo PKAttributeName($attributes); ?>;
year/gii/yunying/generators/test/default/unit.php:        $updatedModel-><?php echo $attr['name'] ?> = $this->updateAttributeValue($originalModel-><?php echo $attr['name'] ?>, '<?php echo $attr['name'] ?>', '<?php echo $attr['type'] ?>');
year/gii/yunying/generators/test/default/unit.php:        if(!$updatedModel->save($this->isModelValidationEnabled)){
year/gii/yunying/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/yunying/generators/test/default/unit.php:        $reloadedModel = $this->loadModelById($this->modelPK);
year/gii/yunying/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be updated', function () use ($reloadedModel, $updatedModel) {
year/gii/yunying/generators/test/default/unit.php:        $model = $this->newModelInstance();
year/gii/yunying/generators/test/default/unit.php:        if(!$model->save($this->isModelValidationEnabled)){
year/gii/yunying/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/yunying/generators/test/default/unit.php:        $this->modelPK = $model-><?php echo PKAttributeName($attributes); ?>;
year/gii/yunying/generators/test/default/unit.php:        $model = $this->loadModelById($this->modelPK);
year/gii/yunying/generators/test/default/unit.php:        $deletedModel = $this->loadModelById($this->modelPK);
year/gii/yunying/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be deleted', function () use ($deletedModel) {
year/gii/yunying/generators/test/default/unit.php:            expect($this->modelName.' model was deleted', $deletedModel)->equals(null);
year/gii/yunying/generators/test/default/unit.php:        $r = new \ReflectionClass($this->class);
year/gii/yunying/generators/test/default/unit.php:        $r = new \ReflectionClass($this->class);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:        $this->checkConnector();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:        $this->checkRequest();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_DELETE)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:        $resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_EXTENSION);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:        $filePath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getServerPath(), $fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FILE_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/fileeditor/plugin.php:            $this->sendResponse();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:        $this->checkConnector();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:        $this->checkRequest();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_DELETE) || !$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_UPLOAD)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:        $resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:        $filePath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getServerPath(), $fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FILE_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_EXTENSION);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $newFilePath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getServerPath(), $newFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ALREADY_EXIST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:        $config = $this->getConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:                $newFilePath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getServerPath(), $thumbName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:        $config = $this->getConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $this->sendResponse();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:        $this->checkConnector();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:        $this->checkRequest();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_VIEW)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:        $resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:        $filePath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getServerPath(), $fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FILE_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:        $this->_connectorNode->addChild($oNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/imageresize/plugin.php:            $this->sendResponse();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_COMMAND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->checkConnector();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->checkRequest();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    if ( !$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_UPLOAD)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_EXTENSION);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $filePath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getServerPath(), $fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FILE_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_EXTENSION);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNKNOWN);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->zip = $zip;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->filePath = $filePath;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->_config =& CKFinder_Connector_Core_Factory::getInstance("Core_Config");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->unzippedNodes = new CKFinder_Connector_Utils_XmlNode("UnzippedFiles");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->skippedFilesNode = new CKFinder_Connector_Utils_XmlNode("Errors");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->errorCode = CKFINDER_CONNECTOR_ERROR_NONE;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $fileStat = $this->zip->statName($originalFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      if ($this->_config->forceAscii()) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->errorCode = CKFINDER_CONNECTOR_ERROR_INVALID_NAME;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $originalFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      if (!is_writeable($this->_currentFolder->getServerPath())) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->errorCode = CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $originalFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->errorCode = CKFINDER_CONNECTOR_ERROR_UPLOADED_TOO_BIG;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $originalFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->errorCode = CKFINDER_CONNECTOR_ERROR_INVALID_EXTENSION;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $originalFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->errorCode = CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $originalFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->errorCode = CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $originalFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    if ( copy('zip://'.$this->filePath.'#'.$originalFileName, $dir.$sFileName) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $htmlExtensions = $this->_config->getHtmlExtensions();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->errorCode = CKFINDER_CONNECTOR_ERROR_UPLOADED_INVALID;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $originalFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $secureImageUploads = $this->_config->getSecureImageUploads();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->errorCode = CKFINDER_CONNECTOR_ERROR_UPLOADED_INVALID;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $originalFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $_aclConfig = $this->_config->getAccessControlConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $aclMask = $_aclConfig->getComputedMask($this->_currentFolder->getResourceTypeName(),$folderPath);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $fileStat = $this->zip->statName($originalFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->errorCode = CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $originalFileName );
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->errorCode = CKFINDER_CONNECTOR_ERROR_COPY_FAILED;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $originalFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    if ( copy('zip://'.$this->filePath.'#'.$originalFileName, $extractPath.$sFileName) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->appendUnzippedNode($this->unzippedNodes,$originalFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      if ( is_file($extractPath.$sFileName) && ( $perms = $this->_config->getChmodFiles()) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->errorCode = CKFINDER_CONNECTOR_ERROR_COPY_FAILED;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $originalFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:   for ($i = 0; $i < $this->zip->numFiles; $i++)
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $fileName = $this->zip->getNameIndex($i);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->appendUnzippedNode($this->unzippedNodes,$fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $fileStat = $this->zip->statName($i);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        if ( !$this->_currentFolder->checkAcl( CKFINDER_CONNECTOR_ACL_FOLDER_CREATE ) ){
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:          $this->errorCode = CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:          $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $fileName, $fileType);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $extractPath = $this->_currentFolder->getServerPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $extractClientPath = $this->_currentFolder->getClientPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $sFileName = $this->checkOneFile( $filePathInfo, $fileName );
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:                $this->extractTo($extractPath,$extractClientPath,$filePathInfo,$sFileName,$fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:                if ( !$this->_currentFolder->checkAcl( CKFINDER_CONNECTOR_ACL_FILE_DELETE ) ){
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:                  $this->errorCode = CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:                  $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $fileName, $fileType);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:                  $this->errorCode = CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:                  $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $fileName, $fileType);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:                  $this->extractTo($extractPath,$extractClientPath,$filePathInfo,$sFileName,$fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:                $this->appendUnzippedNode($this->unzippedNodes,$fileName,'skip');
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:              $this->errorCode = CKFINDER_CONNECTOR_ERROR_ALREADY_EXIST;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:              $this->appendErrorNode($this->skippedFilesNode, $this->errorCode, $fileName, $fileType);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:          $this->extractTo($extractPath,$extractClientPath,$filePathInfo,$sFileName,$fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->zip->close();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->_connectorNode->addChild($this->unzippedNodes);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    if ($this->errorCode != CKFINDER_CONNECTOR_ERROR_NONE) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_connectorNode->addChild($this->skippedFilesNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ZIP_FAILED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:          $this->sendResponse();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $extractPath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getServerPath(), $extractDir.'/');
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $extractClientPath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getClientPath(),$extractDir);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $_aclConfig = $this->_config->getAccessControlConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $aclMask = $_aclConfig->getComputedMask($this->_currentFolder->getResourceTypeName(),$extractDir);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_connectorNode->addChild($dirExists);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:          $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    for ($i = 0; $i < $this->zip->numFiles; $i++)
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $fileName = $this->zip->getNameIndex($i);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $sFileName = $this->checkOneFile( $filePathInfo, $fileName );
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->extractTo($extractPath,$extractClientPath,$filePathInfo,$sFileName,$fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->zip->close();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->_connectorNode->addChild($this->unzippedNodes);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    if ($this->errorCode != CKFINDER_CONNECTOR_ERROR_NONE) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_connectorNode->addChild($this->skippedFilesNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ZIP_FAILED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->sendResponse();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $_aclConfig = $this->_config->getAccessControlConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    if ($this->_config->forceAscii()) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $aclMask = $_aclConfig->getComputedMask($this->_currentFolder->getResourceTypeName(), str_ireplace($directory,'',$pathName));
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      if ( !$this->checkOneFile($file) ){
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:          $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_CREATED_FILE_TOO_BIG);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_COMMAND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->checkConnector();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->checkRequest();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    if ( !$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_UPLOAD)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->_config =& CKFinder_Connector_Core_Factory::getInstance("Core_Config");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $currentResourceTypeConfig = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $_sServerDir = $this->_currentFolder->getServerPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $config = $this->getConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $_aclConfig = $this->_config->getAccessControlConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:          $_resourceTypeConfig[$type] = $this->_config->getResourceTypeConfig($type);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_CREATED_FILE_TOO_BIG);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FOLDER_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $files = $this->getFilesRecursively($_sServerDir,$zipMaxSize);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FILE_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:          $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_EXTENSION);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    if ($this->_config->forceAscii()) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ALREADY_EXIST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      if ( !$this->_currentFolder->checkAcl( CKFINDER_CONNECTOR_ACL_FILE_UPLOAD )) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        if ( !$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_UPLOAD | CKFINDER_CONNECTOR_ACL_FILE_RENAME )) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:          $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        if ( !$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_RENAME | CKFINDER_CONNECTOR_ACL_FILE_DELETE)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:          $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:          $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:        $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNKNOWN);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->_connectorNode->addChild($file);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->sendResponse();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->checkConnector();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $this->checkRequest();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FILE_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    $resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:    if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_VIEW)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_EXTENSION);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FILE_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/plugins/zip/plugin.php:      $this->sendZipFile();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		$this->BasePath			= $basePath ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		$this->Width			= $width ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		$this->Height			= $height ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		$this->SelectFunction	= $selectFunction ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		$this->SelectThumbnailFunction	= $selectFunction ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		echo $this->CreateHtml() ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		$className = $this->ClassName ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		$id = $this->Id ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		return '<iframe src="' . $this->_BuildUrl() . '" width="' . $this->Width . '" ' .
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			'height="' . $this->Height . '"' . $className . $id . ' frameborder="0" scrolling="no"></iframe>' ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			$url = $this->BasePath ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		if ( !empty( $this->SelectFunction ) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			$qs .= '?action=js&amp;func=' . $this->SelectFunction ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		if ( !empty( $this->SelectFunctionData ) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			$qs .= 'data=' . rawurlencode($this->SelectFunctionData) ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		if ( $this->DisableThumbnailSelection )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		else if ( !empty( $this->SelectThumbnailFunction ) || !empty( $this->SelectFunction ) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			$qs .= 'thumbFunc=' . ( !empty( $this->SelectThumbnailFunction ) ? $this->SelectThumbnailFunction : $this->SelectFunction ) ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			if ( !empty( $this->SelectThumbnailFunctionData ) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:				$qs .= '&amp;tdata=' . rawurlencode( $this->SelectThumbnailFunctionData ) ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			else if ( empty( $this->SelectThumbnailFunction ) && !empty( $this->SelectFunctionData ) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:				$qs .= '&amp;tdata=' . rawurlencode( $this->SelectFunctionData ) ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		if ( !empty( $this->StartupPath ) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			$qs .= "start=" . urlencode( $this->StartupPath . ( $this->StartupFolderExpanded ? ':1' : ':0' ) ) ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		if ( !empty( $this->ResourceType ) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			$qs .= "type=" . urlencode( $this->ResourceType ) ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		if ( !$this->RememberLastFolder )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		if ( !empty( $this->Id ) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			$qs .= "id=" . urlencode( $this->Id ) ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		$url = $this->BasePath ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		$url = $this->_BuildUrl( $url ) ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		if ( $this->Width !== '100%' && is_numeric( str_ireplace( "px", "", $this->Width ) ) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			$width = intval( $this->Width );
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		if ( $this->Height !== 400 && is_numeric( str_ireplace( "px", "", $this->Height ) ) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			$height = intval( $this->Height );
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		$url = $this->BasePath ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		$url = $this->_BuildUrl( $url ) ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		if ( $this->Width !== '100%' && is_numeric( str_ireplace( "px", "", $this->Width ) ) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			$width = intval( $this->Width );
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:		if ( $this->Height !== 400 && is_numeric( str_ireplace( "px", "", $this->Height ) ) )
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/ckfinder_php5.php:			$height = intval( $this->Height );
year/gii/yunying/generators/crud/default/search.php:        $this->load($params);
year/gii/yunying/generators/crud/default/search.php:        if (!$this->validate()) {
year/gii/yunying/generators/crud/default/views/create.php:$this->title = <?= $generator->generateString('Create ' . Inflector::camel2words(StringHelper::basename($generator->modelClass))) ?>;
year/gii/yunying/generators/crud/default/views/create.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
year/gii/yunying/generators/crud/default/views/create.php:$this->params['breadcrumbs'][] = $this->title;
year/gii/yunying/generators/crud/default/views/create.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
year/gii/yunying/generators/crud/default/views/create.php:    <?= "<?= " ?>$this->render('_form', [
year/gii/yunying/generators/crud/default/views/update.php:$this->title = <?= $generator->generateString('Update {modelClass}: ', ['modelClass' => Inflector::camel2words(StringHelper::basename($generator->modelClass))]) ?> . $model-><?= $generator->getNameAttribute() ?>;
year/gii/yunying/generators/crud/default/views/update.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
year/gii/yunying/generators/crud/default/views/update.php:$this->params['breadcrumbs'][] = ['label' => $model-><?= $generator->getNameAttribute() ?>, 'url' => ['view', <?= $urlParams ?>]];
year/gii/yunying/generators/crud/default/views/update.php:$this->params['breadcrumbs'][] = <?= $generator->generateString('Update') ?>;
year/gii/yunying/generators/crud/default/views/update.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
year/gii/yunying/generators/crud/default/views/update.php:    <?= "<?= " ?>$this->render('_form', [
year/gii/yunying/generators/crud/default/views/view.php:$this->title = $model-><?= $generator->getNameAttribute() ?>;
year/gii/yunying/generators/crud/default/views/view.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
year/gii/yunying/generators/crud/default/views/view.php:$this->params['breadcrumbs'][] = $this->title;
year/gii/yunying/generators/crud/default/views/view.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
year/gii/yunying/generators/crud/default/views/index.php:$this->title = <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>;
year/gii/yunying/generators/crud/default/views/index.php:$this->params['breadcrumbs'][] = $this->title;
year/gii/yunying/generators/crud/default/views/index.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
year/gii/yunying/generators/crud/default/views/index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? "// " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
year/gii/yunying/generators/crud/default/controller.php:        return $this->render('index', [
year/gii/yunying/generators/crud/default/controller.php:        return $this->render('index', [
year/gii/yunying/generators/crud/default/controller.php:        return $this->render('view', [
year/gii/yunying/generators/crud/default/controller.php:            'model' => $this->findModel(<?= $actionParams ?>),
year/gii/yunying/generators/crud/default/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
year/gii/yunying/generators/crud/default/controller.php:            return $this->render('create', [
year/gii/yunying/generators/crud/default/controller.php:        $model = $this->findModel(<?= $actionParams ?>);
year/gii/yunying/generators/crud/default/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
year/gii/yunying/generators/crud/default/controller.php:            return $this->render('update', [
year/gii/yunying/generators/crud/default/controller.php:        $this->findModel(<?= $actionParams ?>)->delete();
year/gii/yunying/generators/crud/default/controller.php:        return $this->redirect(['index']);
year/gii/yunying/generators/api/Generator.v0.php:        $db = $this->getDbConnection();
year/gii/yunying/generators/api/Generator.v0.php:        return Yii::$app->get($this->db, false);
year/gii/yunying/generators/api/Generator.v0.php:        if(empty($this->podPath)){
year/gii/yunying/generators/api/Generator.v0.php://        //   $this->podPath = Config::getProjectHome().DIRECTORY_SEPARATOR.'pods'.DIRECTORY_SEPARATOR.'__your_pod_id__' ;
year/gii/yunying/generators/api/Generator.v0.php://            $this->podPath = implode(DIRECTORY_SEPARATOR ,[
year/gii/yunying/generators/api/Generator.v0.php:            $this->podPath,
year/gii/yunying/generators/api/Generator.v0.php:            $this->podId,
year/gii/yunying/generators/api/Generator.v0.php:            $this->controllerType.'.go',
year/gii/yunying/generators/api/Generator.v0.php:        $interactorFile =  $this->getControllerFile();
year/gii/yunying/generators/api/Generator.v0.php:            new CodeFile($interactorFile, $this->render('controller.go.php')),
year/gii/yunying/generators/api/Generator.v0.php:            $this->podPath,
year/gii/yunying/generators/api/Generator.v0.php:            $this->podId,
year/gii/yunying/generators/api/Generator.v0.php:        $files[]  =   new CodeFile($routesFile, $this->render('routes.go.php')) ;
year/gii/yunying/generators/api/Generator.v0.php:        if (!empty($this->tableName)){
year/gii/yunying/generators/api/Generator.v0.php:                $this->podPath,
year/gii/yunying/generators/api/Generator.v0.php:                $this->podId,
year/gii/yunying/generators/api/Generator.v0.php:                $this->controllerType.'.go',
year/gii/yunying/generators/api/Generator.v0.php:               // 'fieldsInfo'=>$this->generateProperties($this->getTableSchema()),
year/gii/yunying/generators/api/Generator.v0.php:            $files[]  =   new CodeFile($docFile, $this->render('docs.go.php',$params)) ;
year/gii/yunying/generators/api/Generator.v0.php:        if (!empty($this->searchModelClass)) {
year/gii/yunying/generators/api/Generator.v0.php:            $searchModel = Yii::getAlias('@' . str_replace('\\', '/', ltrim($this->searchModelClass, '\\') . '.php'));
year/gii/yunying/generators/api/Generator.v0.php:            $files[] = new CodeFile($searchModel, $this->render('search.php'));
year/gii/yunying/generators/api/Generator.v0.php:        $viewPath = $this->getViewPath();
year/gii/yunying/generators/api/Generator.v0.php:        $templatePath = $this->getTemplatePath() . '/views';
year/gii/yunying/generators/api/Generator.v0.php:            if (empty($this->searchModelClass) && $file === '_search.php') {
year/gii/yunying/generators/api/Generator.v0.php:                $files[] = new CodeFile("$viewPath/$file", $this->render("views/$file"));
year/gii/yunying/generators/api/Generator.v0.php:        $return = $this->render('routes.go.php');
year/gii/yunying/generators/api/Generator.v0.php:        $pos = strrpos($this->controllerClass, '\\');
year/gii/yunying/generators/api/Generator.v0.php:        $class = substr(substr($this->controllerClass, $pos + 1), 0, -10);
year/gii/yunying/generators/api/Generator.v0.php:        foreach ($this->getColumnNames() as $name) {
year/gii/yunying/generators/api/Generator.v0.php:        $class = $this->modelClass;
year/gii/yunying/generators/api/Generator.v0.php:        $class = $this->modelClass;
year/gii/yunying/generators/api/Generator.v0.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/yunying/generators/api/Generator.v0.php:       return   $this->getDbConnection()->getTableSchema($this->tableName) ;
year/gii/yunying/generators/api/Generator.v0.php:        $ts =  $this->getTableSchema() ;
year/gii/yunying/generators/api/Generator.v0.php:            $this->addError('tableName', "Table '{$this->tableName}' does not exist.");
year/gii/yunying/generators/api/Generator.v0.php:        if (!is_dir($this->podPath)) {
year/gii/yunying/generators/api/Generator.v0.php:            $this->addError('podPath', ' please check the pod path which should exists： ' . $this->podPath);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Registry.php:        return array_key_exists($key, $this->_store);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Registry.php:        $this->_store[$key] = $obj;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Registry.php:    	if ($this->isValid($key)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Registry.php:    	    return $this->_store[$key];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            $this->_name = $resourceTypeNode["name"];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            $this->_url = $resourceTypeNode["url"];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        if (!strlen($this->_url)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            $this->_url = "/";
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        else if(substr($this->_url,-1,1) != "/") {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            $this->_url .= "/";
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            $this->_maxSize = CKFinder_Connector_Utils_Misc::returnBytes((string)$resourceTypeNode["maxSize"]);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            $this->_directory = $resourceTypeNode["directory"];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        if (!strlen($this->_directory)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            $this->_directory = resolveUrl($this->_url);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:                    $this->_allowedExtensions[] = strtolower(trim((string)$e));
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:                        $this->_allowedExtensions[] = strtolower(trim($e));
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:                    $this->_deniedExtensions[] = strtolower(trim((string)$e));
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:                        $this->_deniedExtensions[] = strtolower(trim($e));
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        return $this->_name;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        return $this->_url;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        return $this->_directory;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        return $this->_maxSize;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        return $this->_allowedExtensions;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        return $this->_deniedExtensions;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        if (is_null($this->_config)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            $this->_config =& CKFinder_Connector_Core_Factory::getInstance("Core_Config");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        if ($this->_config->getCheckDoubleExtension()) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            if ( !$this->checkSingleExtension( $pieces[sizeof($pieces)-1] ) ) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:                    $fileName .= $this->checkSingleExtension( $pieces[$i] ) ? '.' : '_' ;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            return $this->checkSingleExtension( substr($fileName, strrpos($fileName,'.')+1) );
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        if (is_null($this->_config)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            $this->_config =& CKFinder_Connector_Core_Factory::getInstance("Core_Config");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        $regex = $this->_config->getHideFoldersRegex();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        if (is_null($this->_config)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            $this->_config =& CKFinder_Connector_Core_Factory::getInstance("Core_Config");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        $regex = $this->_config->getHideFilesRegex();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:                if ($this->checkIsHiddenFolder($_part)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        if (sizeof($this->_deniedExtensions)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            if (in_array($extension, $this->_deniedExtensions)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:        if (sizeof($this->_allowedExtensions)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:            return in_array($extension, $this->_allowedExtensions);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ResourceTypeConfig.php:      return substr(md5($this->getDirectory()), 0, 16);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/Security.php:                $this->stripQuotes($_GET);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/Security.php:                $this->stripQuotes($_POST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/Security.php:                $this->stripQuotes($_COOKIE);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/Security.php:                        $this->stripQuotes($_FILES[$k]['name']);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/Security.php:                    $this->stripQuotes($var[$k], $depth, $howDeep);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/AccessControlConfig.php:            $this->addACLEntry($_role, $_resourceType, $_folder,
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/AccessControlConfig.php:        if (array_key_exists($folderPath,$this->_aclEntries)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/AccessControlConfig.php:            if (array_key_exists($_entryKey, $this->_aclEntries[$folderPath])) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/AccessControlConfig.php:                $_rulesMasks = $this->_aclEntries[$folderPath][$_entryKey];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/AccessControlConfig.php:            $this->_aclEntries[$folderPath] = array();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/AccessControlConfig.php:        $this->_aclEntries[$folderPath][$_entryKey] = array($allowRulesMask, $denyRulesMask);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/AccessControlConfig.php:                if (array_key_exists($_currentPath . '*/', $this->_aclEntries))
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/AccessControlConfig.php:                $_computedMask = $this->mergePathComputedMask( $_computedMask, $resourceType, $_userRole, $_currentPath . '*/' );
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/AccessControlConfig.php:            if (array_key_exists($_currentPath, $this->_aclEntries)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/AccessControlConfig.php:                $_computedMask = $this->mergePathComputedMask( $_computedMask, $resourceType, $_userRole, $_currentPath );
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/AccessControlConfig.php:        $_folderEntries = $this->_aclEntries[$path];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DownloadFile.php:        $this->checkConnector();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DownloadFile.php:        $this->checkRequest();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DownloadFile.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_VIEW)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DownloadFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DownloadFile.php:        $_resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DownloadFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DownloadFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DownloadFile.php:        $filePath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getServerPath(), $fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DownloadFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FILE_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFolder.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FOLDER_DELETE)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFolder.php:        if ($this->_currentFolder->getClientPath() == "/") {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFolder.php:        $folderServerPath = $this->_currentFolder->getServerPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FOLDER_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFolder.php:        CKFinder_Connector_Utils_FileSystem::unlink($this->_currentFolder->getThumbsServerPath());
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Thumbnail.php:        $this->checkConnector();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Thumbnail.php:        $this->checkRequest();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Thumbnail.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_THUMBNAILS_DISABLED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Thumbnail.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_VIEW)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Thumbnail.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Thumbnail.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Thumbnail.php:        $_resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Thumbnail.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Thumbnail.php:        $sourceFilePath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getServerPath(), $fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Thumbnail.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FILE_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Thumbnail.php:        $thumbFilePath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getThumbsServerPath(), $fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Thumbnail.php:            if(!$this->createThumb($sourceFilePath, $thumbFilePath, $_thumbnails->getMaxWidth(), $_thumbnails->getMaxHeight(), $_thumbnails->getQuality(), true, $_thumbnails->getBmpSupported())) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Thumbnail.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:        $this->_currentFolder =& CKFinder_Connector_Core_Factory::getInstance("Core_FolderHandler");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:        $this->_connector =& CKFinder_Connector_Core_Factory::getInstance("Core_Connector");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:        $this->_errorHandler =& $this->_connector->getErrorHandler();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:        if (is_null($this->_currentFolder)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:            $this->_currentFolder =& CKFinder_Connector_Core_Factory::getInstance("Core_FolderHandler");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:        return $this->_currentFolder;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_CONNECTOR_DISABLED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:        if (preg_match(CKFINDER_REGEX_INVALID_PATH, $this->_currentFolder->getClientPath())) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:        $_resourceTypeConfig = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_TYPE);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:        $_clientPath = $this->_currentFolder->getClientPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:                    $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:        if (!is_dir($this->_currentFolder->getServerPath())) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:                if (!CKFinder_Connector_Utils_FileSystem::createDirectoryRecursively($this->_currentFolder->getServerPath())) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CommandHandlerBase.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FOLDER_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FOLDER_RENAME)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:        $resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:        if ($this->_currentFolder->getClientPath() == "/") {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:        $oldFolderPath = $this->_currentFolder->getServerPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ALREADY_EXIST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:            $newThumbsServerPath = dirname($this->_currentFolder->getThumbsServerPath()) . '/' . $newFolderName . '/';
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:            if (!@rename($this->_currentFolder->getThumbsServerPath(), $newThumbsServerPath)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:                CKFinder_Connector_Utils_FileSystem::unlink($this->_currentFolder->getThumbsServerPath());
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:        $newFolderPath = preg_replace(",[^/]+/?$,", $newFolderName, $this->_currentFolder->getClientPath()) . '/';
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFolder.php:        $this->_connectorNode->addChild($oRenameNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFolders.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FOLDER_VIEW)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFolders.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFolders.php:        $_sServerDir = $this->_currentFolder->getServerPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFolders.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FOLDER_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFolders.php:        $this->_connectorNode->addChild($oFoldersNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFolders.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFolders.php:        $resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFolders.php:                $folderPath = $this->_currentFolder->getClientPath() . $file . "/";
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFolders.php:                $aclMask = $oAcl->getComputedMask($this->_currentFolder->getResourceTypeName(), $folderPath);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:    if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_DELETE)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:    $currentResourceTypeConfig = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:          $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:          $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:          $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:          $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:          $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:          $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:          $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:          $thumbPath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getThumbsServerPath(), $name);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:    $this->_connectorNode->addChild($oDeleteFilesNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:      $this->_connectorNode->addChild($oErrorsNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/DeleteFiles.php:      $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_DELETE_FAILED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:        $clientPath = $this->_currentFolder->getClientPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:        $sServerDir = $this->_currentFolder->getServerPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:        $currentResourceTypeConfig = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_RENAME | CKFINDER_CONNECTOR_ACL_FILE_UPLOAD | CKFINDER_CONNECTOR_ACL_FILE_DELETE)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                    $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                    $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                    $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                    $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                        $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                        $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                    $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                    $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                    $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                        $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                    $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                            $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                        $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:                        $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:        $this->_connectorNode->addChild($oCopyFilesNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:            $this->_connectorNode->addChild($oErrorsNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CopyFiles.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_COPY_FAILED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/LoadCookies.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/LoadCookies.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_VIEW)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/LoadCookies.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/LoadCookies.php:        $this->_connectorNode->addChild($oCookiesNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UPLOADED_INVALID);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:        $this->checkConnector();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:        $this->checkRequest();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_UPLOAD)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:        $_resourceTypeConfig = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:        $resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_EXTENSION);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:        $oRegistry->set("FileUpload_url", $this->_currentFolder->getUrl());
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UPLOADED_TOO_BIG);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UPLOADED_WRONG_HTML_FILE);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UPLOADED_CORRUPT);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UPLOADED_TOO_BIG);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UPLOADED_CORRUPT);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UPLOADED_NO_TMP_DIR);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:        $sServerDir = $this->_currentFolder->getServerPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:                        $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UPLOADED_WRONG_HTML_FILE);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:                        $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UPLOADED_CORRUPT);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:            $this->_errorHandler->throwError($iErrorNumber, true, false);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:                $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UPLOADED_TOO_BIG);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:                $this->_errorHandler->throwError($iErrorNumber, true, false);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/FileUpload.php:        CKFinder_Connector_Core_Hooks::run('AfterFileUpload', array(&$this->_currentFolder, &$uploadedFile, &$sFilePath));
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CreateFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CreateFolder.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FOLDER_CREATE)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CreateFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CreateFolder.php:        $_resourceTypeConfig = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CreateFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CreateFolder.php:        $sServerDir = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getServerPath(), $sNewFolderName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CreateFolder.php:        if (!is_writeable($this->_currentFolder->getServerPath())) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CreateFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CreateFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ALREADY_EXIST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CreateFolder.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/CreateFolder.php:            $this->_connectorNode->addChild($oNewFolderNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:        $clientPath = $this->_currentFolder->getClientPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:        $sServerDir = $this->_currentFolder->getServerPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:        $currentResourceTypeConfig = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_RENAME | CKFINDER_CONNECTOR_ACL_FILE_UPLOAD | CKFINDER_CONNECTOR_ACL_FILE_DELETE)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                    $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                    $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                    $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                    $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                        $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                        $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                    $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                    $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                    $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                        $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                    $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                            $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                                $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                            $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                        $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:                        $this->appendErrorNode($oErrorsNode, $errorCode, $name, $type, $path);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:        $this->_connectorNode->addChild($oMoveFilesNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:            $this->_connectorNode->addChild($oErrorsNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/MoveFiles.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_MOVE_FAILED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/QuickUpload.php:        $oRegistry->set("FileUpload_url", $this->_currentFolder->getUrl());
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:        $this->_connectorNode =& $xml->getConnectorNode();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:        $this->checkConnector();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:        if ($this->mustCheckRequest()) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:            $this->checkRequest();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:        $resourceTypeName = $this->_currentFolder->getResourceTypeName();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:            $this->_connectorNode->addAttribute("resourceType", $this->_currentFolder->getResourceTypeName());
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:        if ($this->mustAddCurrentFolderNode()) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:            $this->_connectorNode->addChild($_currentFolder);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:            $_currentFolder->addAttribute("path", CKFinder_Connector_Utils_FileSystem::convertToConnectorEncoding($this->_currentFolder->getClientPath()));
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:            $this->_errorHandler->setCatchAllErros(true);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:            $_url = $this->_currentFolder->getUrl();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:            $this->_errorHandler->setCatchAllErros(false);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:            $_currentFolder->addAttribute("acl", $this->_currentFolder->getAclMask());
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:        $this->buildXml();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/XmlCommandHandlerBase.php:        echo $this->_connectorNode->asXML();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            $this->_resourceTypeName = (string)$_GET["type"];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            $this->_clientPath = CKFinder_Connector_Utils_FileSystem::convertToFilesystemEncoding((string)$_GET["currentFolder"]);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        if (!strlen($this->_clientPath)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            $this->_clientPath = "/";
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            if (substr($this->_clientPath, -1, 1) != "/") {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:                $this->_clientPath .= "/";
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            if (substr($this->_clientPath, 0, 1) != "/") {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:                $this->_clientPath = "/" . $this->_clientPath;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        $this->_aclMask = -1;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        if (!isset($this->_resourceTypeConfig)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            $this->_resourceTypeConfig = $_config->getResourceTypeConfig($this->_resourceTypeName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        if (is_null($this->_resourceTypeConfig)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        return $this->_resourceTypeConfig;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        return $this->_resourceTypeName;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        return $this->_clientPath;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        if (is_null($this->_url)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            $this->_resourceTypeConfig = $this->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            if (is_null($this->_resourceTypeConfig)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:                $this->_url = "";
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:                $this->_url = $this->_resourceTypeConfig->getUrl() . ltrim($this->getClientPath(), "/");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        return $this->_url;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        if (is_null($this->_serverPath)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            $this->_resourceTypeConfig = $this->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            $this->_serverPath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_resourceTypeConfig->getDirectory(), ltrim($this->_clientPath, "/"));
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        return $this->_serverPath;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        if (is_null($this->_thumbsServerPath)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            $this->_resourceTypeConfig = $this->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            $this->_thumbsServerPath = CKFinder_Connector_Utils_FileSystem::combinePaths($_thumbnailsConfig->getDirectory(), $this->_resourceTypeConfig->getName());
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            $this->_thumbsServerPath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_thumbsServerPath, ltrim($this->_clientPath, '/'));
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            if (!is_dir($this->_thumbsServerPath)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:                if(!CKFinder_Connector_Utils_FileSystem::createDirectoryRecursively($this->_thumbsServerPath)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        return $this->_thumbsServerPath;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        if ($this->_aclMask == -1) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:            $this->_aclMask = $_aclConfig->getComputedMask($this->_resourceTypeName, $this->_clientPath);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        return $this->_aclMask;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/FolderHandler.php:        $maska = $this->getAclMask();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        $this->loadValues();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_filesystemEncoding;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_secureImageUploads;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_checkSizeAfterScaling;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_htmlExtensions;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_forceAscii;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            if (is_array($this->_hideFolders) && $this->_hideFolders) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:                $folderRegex = join("|", $this->_hideFolders);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            if (is_array($this->_hideFiles) && $this->_hideFiles) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:                $fileRegex = join("|", $this->_hideFiles);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_checkDoubleExtension;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_disallowUnsafeCharacters;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_defaultResourceTypes;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_isEnabled;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_licenseKey;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_licenseName;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_chmodFiles;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_chmodFolders;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_roleSessionVar;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        if (isset($this->_resourceTypeConfigCache[$resourceTypeName])) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            return $this->_resourceTypeConfigCache[$resourceTypeName];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:                $this->_resourceTypeConfigCache[$resourceTypeName] = new CKFinder_Connector_Core_ResourceTypeConfig($_resourceTypeNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:                return $this->_resourceTypeConfigCache[$resourceTypeName];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        if (!isset($this->_thumbnailsConfigCache)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_thumbnailsConfigCache = new CKFinder_Connector_Core_ThumbnailsConfig(isset($GLOBALS['config']['Thumbnails']) ? $GLOBALS['config']['Thumbnails'] : array());
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_thumbnailsConfigCache;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        if (!isset($this->_imagesConfigCache)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_imagesConfigCache = new CKFinder_Connector_Core_ImagesConfig(isset($GLOBALS['config']['Images']) ? $GLOBALS['config']['Images'] : array());
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_imagesConfigCache;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        if (!isset($this->_accessControlConfigCache)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_accessControlConfigCache = new CKFinder_Connector_Core_AccessControlConfig(isset($GLOBALS['config']['AccessControl']) ? $GLOBALS['config']['AccessControl'] : array());
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:        return $this->_accessControlConfigCache;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_isEnabled = CheckAuthentication();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_licenseName = (string)$GLOBALS['config']['LicenseName'];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_licenseKey = (string)$GLOBALS['config']['LicenseKey'];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_filesystemEncoding = (string)$GLOBALS['config']['FilesystemEncoding'];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_roleSessionVar = (string)$GLOBALS['config']['RoleSessionVar'];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_checkDoubleExtension = CKFinder_Connector_Utils_Misc::booleanValue($GLOBALS['config']['CheckDoubleExtension']);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_disallowUnsafeCharacters = CKFinder_Connector_Utils_Misc::booleanValue($GLOBALS['config']['DisallowUnsafeCharacters']);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_secureImageUploads = CKFinder_Connector_Utils_Misc::booleanValue($GLOBALS['config']['SecureImageUploads']);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_checkSizeAfterScaling = CKFinder_Connector_Utils_Misc::booleanValue($GLOBALS['config']['CheckSizeAfterScaling']);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_forceAscii = CKFinder_Connector_Utils_Misc::booleanValue($GLOBALS['config']['ForceAscii']);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_htmlExtensions = (array)$GLOBALS['config']['HtmlExtensions'];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_hideFolders = (array)$GLOBALS['config']['HideFolders'];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_hideFiles = (array)$GLOBALS['config']['HideFiles'];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_chmodFiles = $GLOBALS['config']['ChmodFiles'];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:            $this->_chmodFolders = $GLOBALS['config']['ChmodFolders'];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:                $this->_defaultResourceTypes = explode(",", $_defaultResourceTypes);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:          $this->_tempDirectory = $GLOBALS['config']['TempDirectory'];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:          $this->_xsendfile = CKFinder_Connector_Utils_Misc::booleanValue($GLOBALS['config']['XSendfile']);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:          $this->_xsendfileNginx = (array)$GLOBALS['config']['XSendfileNginx'];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:      return $this->_tempDirectory;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:      return $this->_xsendfile;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Config.php:      foreach ( $this->_xsendfileNginx as $location => $root ){
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Xml.php:        $this->sendXmlHeaders();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Xml.php:        echo $this->getXMLDeclaration();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Xml.php:        $this->_connectorNode = new Ckfinder_Connector_Utils_XmlNode("Connector");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Xml.php:        $this->_errorNode = new Ckfinder_Connector_Utils_XmlNode("Error");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Xml.php:        $this->_connectorNode->addChild($this->_errorNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Xml.php:    	return $this->_connectorNode;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Xml.php:    	return $this->_errorNode;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Xml.php:        $this->_errorNode->addAttribute("number", intval($number));
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Xml.php:            $this->_errorNode->addAttribute("text", $text);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Xml.php:        echo $this->_connectorNode->asXML();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_RENAME)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:        $this->_connectorNode->addChild($oRenamedFileNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:        $resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_EXTENSION);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_NAME);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_INVALID_REQUEST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:        $filePath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getServerPath(), $fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:        $newFilePath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getServerPath(), $newFileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FILE_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ALREADY_EXIST);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNKNOWN, "File " . CKFinder_Connector_Utils_FileSystem::convertToConnectorEncoding($fileName) . "has not been renamed");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/RenameFile.php:            $thumbPath = CKFinder_Connector_Utils_FileSystem::combinePaths($this->_currentFolder->getThumbsServerPath(), $fileName);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ImagesConfig.php:                $this->_maxWidth = $_maxWidth;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ImagesConfig.php:                $this->_maxHeight = $_maxHeight;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ImagesConfig.php:                $this->_quality = $_quality;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ImagesConfig.php:    	return $this->_maxWidth;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ImagesConfig.php:    	return $this->_maxHeight;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ImagesConfig.php:    	return $this->_quality;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:        $this->_name = $nodeName;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:            $this->_value = $nodeValue;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:        foreach ($this->_childNodes as $i => $node) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:                return $this->_childNodes[$i];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:        $this->_attributes[$name] = $value;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:        return $this->_attributes[$name];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:        $this->_value = $value;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:        return $this->_value;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:        $this->_childNodes[] =& $node;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:        $ret = "<" . $this->_name;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:        if (sizeof($this->_attributes)>0) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:            foreach ($this->_attributes as $_name => $_value) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:                $ret .= " " . $_name . '="' . $this->asUTF8(htmlspecialchars($_value)) . '"';
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:        if (is_null($this->_value) && !sizeof($this->_childNodes)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:        if (!is_null($this->_value)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:            $ret .= $this->asUTF8(htmlspecialchars($this->_value));
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:        if (sizeof($this->_childNodes)>0) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:            foreach ($this->_childNodes as $_node) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Utils/XmlNode.php:        $ret .= "</" . $this->_name . ">";
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFiles.php:        if (!$this->_currentFolder->checkAcl(CKFINDER_CONNECTOR_ACL_FILE_VIEW)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFiles.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_UNAUTHORIZED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFiles.php:        $_sServerDir = $this->_currentFolder->getServerPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFiles.php:        $this->_connectorNode->addChild($oFilesNode);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFiles.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_FOLDER_NOT_FOUND);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFiles.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_ACCESS_DENIED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFiles.php:        $resourceTypeInfo = $this->_currentFolder->getResourceTypeConfig();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/GetFiles.php:                $_thumbServerPath = $this->_currentFolder->getThumbsServerPath();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:            $this->_isEnabled = CKFinder_Connector_Utils_Misc::booleanValue($thumbnailsNode['enabled']);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:            $this->_directAccess = CKFinder_Connector_Utils_Misc::booleanValue($thumbnailsNode['directAccess']);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:            $this->_bmpSupported = CKFinder_Connector_Utils_Misc::booleanValue($thumbnailsNode['bmpSupported']);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:                $this->_maxWidth = $_maxWidth;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:                $this->_maxHeight = $_maxHeight;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:                $this->_quality = $_quality;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:            $this->_url = $thumbnailsNode['url'];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:        if (!strlen($this->_url)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:            $this->_url = "/";
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:        else if(substr($this->_url,-1,1) != "/") {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:            $this->_url .= "/";
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:            $this->_directory = $thumbnailsNode['directory'];
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:        return $this->_url;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:        return $this->_directory;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:        return $this->_isEnabled;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:        return $this->_bmpSupported;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:        return $this->_directAccess;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:        return $this->_maxWidth;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:        return $this->_maxHeight;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/ThumbnailsConfig.php:        return $this->_quality;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/ErrorHandler/Base.php:        $this->_catchAllErrors = $newValue ? true : false;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/ErrorHandler/Base.php:            $this->_skipErrorsArray = $newArray;
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/ErrorHandler/Base.php:        if ($this->_catchAllErrors || in_array($number, $this->_skipErrorsArray)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/ErrorHandler/Http.php:        if ($this->_catchAllErrors || in_array($number, $this->_skipErrorsArray)) {
year/gii/yunying/generators/model/form.php://$this->registerJs(SaveForm::getSavedFormsJs($generator->getName()), yii\web\View::POS_END);
year/gii/yunying/generators/model/form.php://$this->registerJs(SaveForm::jsFillForm(), yii\web\View::POS_END);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Init.php:        $this->_connectorNode->addChild($_oConnInfo);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Init.php:            $this->_errorHandler->throwError(CKFINDER_CONNECTOR_ERROR_CONNECTOR_DISABLED);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Init.php:        $this->_connectorNode->addChild($_oResourceTypes);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Init.php:        $this->_connectorNode->addChild($_oPluginsInfo);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/CommandHandler/Init.php:        CKFinder_Connector_Core_Hooks::run('InitCommand', array(&$this->_connectorNode));
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/ErrorHandler/QuickUpload.php:        if ($this->_catchAllErrors || in_array($number, $this->_skipErrorsArray)) {
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Connector.php:        $this->_registry =& CKFinder_Connector_Core_Factory::getInstance("Core_Registry");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Connector.php:        $this->_registry->set("errorHandler", "ErrorHandler_Base");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Connector.php:        $oErrorHandler =& $this->getErrorHandler();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Connector.php:            $this->_registry->set("errorHandler", "ErrorHandler_FileUpload");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Connector.php:            $this->_registry->set("errorHandler", "ErrorHandler_QuickUpload");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Connector.php:            $this->_registry->set("errorHandler", "ErrorHandler_Http");
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Connector.php:            $this->handleInvalidCommand();
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/Core/Connector.php:        $_errorHandler = $this->_registry->get("errorHandler");
year/gii/migration/widgets/views/path-selector.php:$context = $this->context ;
year/gii/migration/widgets/views/path-selector.php:    // $this->registerJs($js);
year/editor/assets/xheditor-1.2.1/demos/ckfinder/core/connector/php/php5/ErrorHandler/FileUpload.php:        if ($this->_catchAllErrors || in_array($number, $this->_skipErrorsArray)) {
year/gii/migration/widgets/PathSelector.php:        if(empty($this->onSelection)) {
year/gii/migration/widgets/PathSelector.php:            $this->onSelection = new JsExpression(
year/gii/migration/widgets/PathSelector.php:             $this->onSelection = Json::htmlEncode($this->onSelection);
year/gii/migration/widgets/PathSelector.php:        return $this->render('path-selector',[
year/gii/migration/widgets/JFileTreeAsset.php:        if(empty($this->sourcePath)){
year/gii/migration/widgets/JFileTreeAsset.php:            $this->sourcePath = __DIR__ .'/assets/jquery.fileTree-1.01' ;
year/gii/migration/generators/migration/form.php://$this->registerJs(SaveForm::getSavedFormsJs($generator->getName()), yii\web\View::POS_END);
year/gii/migration/generators/migration/form.php://$this->registerJs(SaveForm::jsFillForm(), yii\web\View::POS_END);
year/gii/migration/generators/migration/form0.php://$this->registerJs(SaveForm::getSavedFormsJs($generator->getName()), yii\web\View::POS_END);
year/gii/migration/generators/migration/form0.php://$this->registerJs(SaveForm::jsFillForm(), yii\web\View::POS_END);
year/gii/migration/generators/migration/Generator.php:        $lines = ['Generating code using template "' . $this->getTemplatePath() . '"...'];
year/gii/migration/generators/migration/Generator.php:        if (empty($this->srcDir)) {
year/gii/migration/generators/migration/Generator.php:            $this->srcDir = Yii::getAlias('@app/runtime')
year/gii/migration/generators/migration/Generator.php:        // die($this->db) ;
year/gii/migration/generators/migration/Generator.php:        $db = $this->getDbConnection();
year/gii/migration/generators/migration/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/migration/generators/migration/Generator.php:                ? $this->generateClassName($tableName)
year/gii/migration/generators/migration/Generator.php:                : $this->modelClass;
year/gii/migration/generators/migration/Generator.php:            // $file = Yii::getAlias($this->workingPath . DIRECTORY_SEPARATOR . $className . '.php');
year/gii/migration/generators/migration/Generator.php://                'db' => $this->getDbConnection(), // $this->db,
year/gii/migration/generators/migration/Generator.php://                'view' => Yii::$app->getView(),  // $this->view,
year/gii/migration/generators/migration/Generator.php://                'useTablePrefix' => 0, // $this->useTablePrefix,
year/gii/migration/generators/migration/Generator.php://                'namespace' => null,// $this->migrationNamespace,
year/gii/migration/generators/migration/Generator.php://                'generalSchema' => true, // $this->generalSchema,
year/gii/migration/generators/migration/Generator.php:            $generatorWrapper = new GeneratorWrapper($this->getDbConnection());
year/gii/migration/generators/migration/Generator.php:            //    $params['timestamp'] = $this->generateTimestamp($tableSchema);
year/gii/migration/generators/migration/Generator.php:                $this->srcDir,
year/gii/migration/generators/migration/Generator.php:            if ($this->generateMigration) {
year/gii/migration/generators/migration/Generator.php:                // $this->genMigrationFile($tableName, dirname($migrationPath));
year/gii/migration/generators/migration/Generator.php:        //  $routePath = Inflector::camel2id(StringHelper::basename($this->modelClass));
year/gii/migration/generators/migration/Generator.php:        $this->db = Instance::ensure($this->db, Connection::class);
year/gii/migration/generators/migration/Generator.php:            $this->view = Yii::$app->getView();
year/gii/migration/generators/migration/Generator.v0.php:        if (empty($this->srcDir)) {
year/gii/migration/generators/migration/Generator.v0.php:            $this->srcDir = Yii::getAlias('@app/runtime')
year/gii/migration/generators/migration/Generator.v0.php:        // die($this->db) ;
year/gii/migration/generators/migration/Generator.v0.php:        $db = $this->getDbConnection();
year/gii/migration/generators/migration/Generator.v0.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/migration/generators/migration/Generator.v0.php:                ? $this->generateClassName($tableName)
year/gii/migration/generators/migration/Generator.v0.php:                : $this->modelClass;
year/gii/migration/generators/migration/Generator.v0.php:            if($this->generateMigration ){
year/gii/migration/generators/migration/Generator.v0.php:                // $file = Yii::getAlias($this->workingPath . DIRECTORY_SEPARATOR . $className . '.php');
year/gii/migration/generators/migration/Generator.v0.php:                'db' => $this->getDbConnection(), // $this->db,
year/gii/migration/generators/migration/Generator.v0.php:                'view' => Yii::$app->getView(),  // $this->view,
year/gii/migration/generators/migration/Generator.v0.php:                'useTablePrefix' => 0, // $this->useTablePrefix,
year/gii/migration/generators/migration/Generator.v0.php:                'namespace' => null,// $this->migrationNamespace,
year/gii/migration/generators/migration/Generator.v0.php:                'generalSchema' => true, // $this->generalSchema,
year/gii/migration/generators/migration/Generator.v0.php:            //    $params['timestamp'] = $this->generateTimestamp($tableSchema);
year/gii/migration/generators/migration/Generator.v0.php:                $this->srcDir,
year/gii/migration/generators/migration/Generator.v0.php:            // $this->render('model.vue.php', $params)
year/gii/migration/generators/migration/Generator.v0.php:            if($this->generateMigration){
year/gii/migration/generators/migration/Generator.v0.php:                $this->genMigrationFile($tableName,dirname($migrationPath));
year/gii/migration/generators/migration/Generator.v0.php:        $routePath = Inflector::camel2id(StringHelper::basename($this->modelClass));
year/gii/migration/commands/BatchController.php:        $this->appConfig = $this->getYiiConfiguration();
year/gii/migration/commands/BatchController.php:        $this->appConfig['id'] = 'temp';
year/gii/migration/commands/BatchController.php:        $this->modelGenerator = new ModelGenerator(['db' => $this->modelDb]);
year/gii/migration/commands/BatchController.php:        if (!$this->tables) {
year/gii/migration/commands/BatchController.php:            $this->modelGenerator->tableName = '*';
year/gii/migration/commands/BatchController.php:            $this->tables = $this->modelGenerator->getTableNames();
year/gii/migration/commands/BatchController.php:            $tableList = implode("\n\t- ", $this->tables);
year/gii/migration/commands/BatchController.php:            if (!$this->confirm($msg)) {
year/gii/migration/commands/BatchController.php:        $this->actionModels();
year/gii/migration/commands/BatchController.php:        $this->actionCruds();
year/gii/migration/commands/BatchController.php:        foreach ($this->tables as $table) {
year/gii/migration/commands/BatchController.php:            //var_dump($this->tableNameMap, $table);exit;
year/gii/migration/commands/BatchController.php:                'interactive' => $this->interactive,
year/gii/migration/commands/BatchController.php:                'overwrite' => $this->overwrite,
year/gii/migration/commands/BatchController.php:                'useTranslatableBehavior' => $this->useTranslatableBehavior,
year/gii/migration/commands/BatchController.php:                'useTimestampBehavior' => $this->useTimestampBehavior,
year/gii/migration/commands/BatchController.php:                'languageTableName' => $this->languageTableName,
year/gii/migration/commands/BatchController.php:                'languageCodeColumn' => $this->languageCodeColumn,
year/gii/migration/commands/BatchController.php:                'template' => $this->template,
year/gii/migration/commands/BatchController.php:                'ns' => $this->modelNamespace,
year/gii/migration/commands/BatchController.php:                'db' => $this->modelDb,
year/gii/migration/commands/BatchController.php:                'tablePrefix' => $this->tablePrefix,
year/gii/migration/commands/BatchController.php:                'enableI18N' => $this->enableI18N,
year/gii/migration/commands/BatchController.php:                'singularEntities' => $this->singularEntities,
year/gii/migration/commands/BatchController.php:                'messageCategory' => $this->modelMessageCategory,
year/gii/migration/commands/BatchController.php:                'generateModelClass' => $this->extendedModels,
year/gii/migration/commands/BatchController.php:                'baseClassSuffix' => $this->modelBaseClassSuffix,
year/gii/migration/commands/BatchController.php:                'modelClass' => isset($this->tableNameMap[$table]) ?
year/gii/migration/commands/BatchController.php:                    $this->tableNameMap[$table] :
year/gii/migration/commands/BatchController.php:                'baseClass' => $this->modelBaseClass,
year/gii/migration/commands/BatchController.php:                'baseTraits' => $this->modelBaseTraits,
year/gii/migration/commands/BatchController.php:                'removeDuplicateRelations' => $this->modelRemoveDuplicateRelations,
year/gii/migration/commands/BatchController.php:                'tableNameMap' => $this->tableNameMap,
year/gii/migration/commands/BatchController.php:                'generateQuery' => $this->modelGenerateQuery,
year/gii/migration/commands/BatchController.php:                'queryNs' => $this->modelQueryNamespace,
year/gii/migration/commands/BatchController.php:                'queryBaseClass' => $this->modelQueryBaseClass,
year/gii/migration/commands/BatchController.php:                'generateLabelsFromComments' => $this->modelGenerateLabelsFromComments,
year/gii/migration/commands/BatchController.php:                'generateHintsFromComments' => $this->modelGenerateHintsFromComments,
year/gii/migration/commands/BatchController.php:            $temp = new \yii\console\Application($this->appConfig);
year/gii/migration/commands/BatchController.php:        $providers = ArrayHelper::merge($this->crudProviders, Generator::getCoreProviders());
year/gii/migration/commands/BatchController.php:        $this->createDirectoryFromNamespace($this->crudControllerNamespace);
year/gii/migration/commands/BatchController.php:        $this->createDirectoryFromNamespace($this->crudSearchModelNamespace);
year/gii/migration/commands/BatchController.php:        foreach ($this->tables as $table) {
year/gii/migration/commands/BatchController.php:            $table = str_replace($this->tablePrefix, '', $table);
year/gii/migration/commands/BatchController.php:            $name = isset($this->tableNameMap[$table]) ? $this->tableNameMap[$table] :
year/gii/migration/commands/BatchController.php:                $this->modelGenerator->generateClassName($table);
year/gii/migration/commands/BatchController.php:                'interactive' => $this->interactive,
year/gii/migration/commands/BatchController.php:                'overwrite' => $this->overwrite,
year/gii/migration/commands/BatchController.php:                'template' => $this->template,
year/gii/migration/commands/BatchController.php:                'modelClass' => $this->modelNamespace.'\\'.$name,
year/gii/migration/commands/BatchController.php:                'searchModelClass' => $this->crudSearchModelNamespace.'\\'.$name.$this->crudSearchModelSuffix,
year/gii/migration/commands/BatchController.php:                'controllerNs' => $this->crudControllerNamespace,
year/gii/migration/commands/BatchController.php:                'controllerClass' => $this->crudControllerNamespace.'\\'.$name.'Controller',
year/gii/migration/commands/BatchController.php:                'viewPath' => $this->crudViewPath,
year/gii/migration/commands/BatchController.php:                'pathPrefix' => $this->crudPathPrefix,
year/gii/migration/commands/BatchController.php:                'tablePrefix' => $this->tablePrefix,
year/gii/migration/commands/BatchController.php:                'enableI18N' => $this->enableI18N,
year/gii/migration/commands/BatchController.php:                'singularEntities' => $this->singularEntities,
year/gii/migration/commands/BatchController.php:                'messageCategory' => $this->crudMessageCategory,
year/gii/migration/commands/BatchController.php:                'modelMessageCategory' => $this->modelMessageCategory,
year/gii/migration/commands/BatchController.php:                'baseControllerClass' => $this->crudBaseControllerClass,
year/gii/migration/commands/BatchController.php:                'skipRelations' => $this->crudSkipRelations,
year/gii/migration/commands/BatchController.php:                'accessFilter' => $this->crudAccessFilter,
year/gii/migration/commands/BatchController.php:                'baseTraits' => $this->crudBaseTraits,
year/gii/migration/commands/BatchController.php:                'tidyOutput' => $this->crudTidyOutput,
year/gii/migration/commands/BatchController.php:                'fixOutput' => $this->crudFixOutput,
year/gii/migration/commands/BatchController.php:                'template' => $this->crudTemplate,
year/gii/migration/commands/BatchController.php:                'indexWidgetType' => $this->crudIndexWidgetType,
year/gii/migration/commands/BatchController.php:                'indexGridClass' => $this->crudIndexGridClass,
year/gii/migration/commands/BatchController.php:            $temp = new \yii\console\Application($this->appConfig);
year/gii/migration/utils/fs.php:        if($this->base && strlen($this->base)) {
year/gii/migration/utils/fs.php:            if(strpos($temp, $this->base) !== 0) { throw new Exception('Path is not inside base ('.$this->base.'): ' . $temp); }
year/gii/migration/utils/fs.php:        $id = $this->real($this->base . DIRECTORY_SEPARATOR . $id);
year/gii/migration/utils/fs.php:        $path = $this->real($path);
year/gii/migration/utils/fs.php:        $path = substr($path, strlen($this->base));
year/gii/migration/utils/fs.php:        $this->base = $this->real($base);
year/gii/migration/utils/fs.php:        if(!$this->base) { throw new Exception('Base directory does not exist'); }
year/gii/migration/utils/fs.php:        $dir = $this->path($id);
year/gii/migration/utils/fs.php:                $res[] = array('text' => $item, 'children' => true,  'id' => $this->id($dir . DIRECTORY_SEPARATOR . $item), 'icon' => 'folder');
year/gii/migration/utils/fs.php:                $res[] = array('text' => $item, 'children' => false, 'id' => $this->id($dir . DIRECTORY_SEPARATOR . $item), 'type' => 'file', 'icon' => 'file file-'.substr($item, strrpos($item,'.') + 1));
year/gii/migration/utils/fs.php:        if($with_root && $this->id($dir) === '/') {
year/gii/migration/utils/fs.php:            $res = array(array('text' => basename($this->base), 'children' => $res, 'id' => '/', 'icon'=>'folder', 'state' => array('opened' => true, 'disabled' => true)));
year/gii/migration/utils/fs.php:        $dir = $this->path($id);
year/gii/migration/utils/fs.php:                    $dat['content'] = 'File not recognized: '.$this->id($dir);
year/gii/migration/utils/fs.php:        $dir = $this->path($id);
year/gii/migration/utils/fs.php:        return array('id' => $this->id($dir . DIRECTORY_SEPARATOR . $name));
year/gii/migration/utils/fs.php:        $dir = $this->path($id);
year/gii/migration/utils/fs.php:        if($dir === $this->base) {
year/gii/migration/utils/fs.php:        return array('id' => $this->id($new));
year/gii/migration/utils/fs.php:        $dir = $this->path($id);
year/gii/migration/utils/fs.php:        if($dir === $this->base) {
year/gii/migration/utils/fs.php:                $this->remove($this->id($dir . DIRECTORY_SEPARATOR . $f));
year/gii/migration/utils/fs.php:        $dir = $this->path($id);
year/gii/migration/utils/fs.php:        $par = $this->path($par);
year/gii/migration/utils/fs.php:        return array('id' => $this->id($new));
year/gii/migration/utils/fs.php:        $dir = $this->path($id);
year/gii/migration/utils/fs.php:        $par = $this->path($par);
year/gii/migration/utils/fs.php:                $this->copy($this->id($dir . DIRECTORY_SEPARATOR . $f), $this->id($new));
year/gii/migration/utils/fs.php:        return array('id' => $this->id($new));
year/gii/yunying/widgets/PathSelector.php:        if(empty($this->onSelection)) {
year/gii/yunying/widgets/PathSelector.php:            $this->onSelection = new JsExpression(
year/gii/yunying/widgets/PathSelector.php:             $this->onSelection = Json::htmlEncode($this->onSelection);
year/gii/yunying/widgets/PathSelector.php:        return $this->render('path-selector',[
year/gii/yunying/widgets/JFileTreeAsset.php:        if(empty($this->sourcePath)){
year/gii/yunying/widgets/JFileTreeAsset.php:            $this->sourcePath = __DIR__ .'/assets/jquery.fileTree-1.01' ;
year/gii/yunying/widgets/views/path-selector.php:$context = $this->context ;
year/gii/yunying/widgets/views/path-selector.php:    // $this->registerJs($js);
year/gii/yunying/FileTreeController.php:                return $this->asJson($rslt) ;
year/gii/yunying/FileTreeController.php:        // return $this->renderContent( 'hi') ;
year/gii/yunying/FileTreeController.php:       // return  $this->renderContent('hello');
year/gii/yunying/commands/BatchController.php:        $this->appConfig = $this->getYiiConfiguration();
year/gii/yunying/commands/BatchController.php:        $this->appConfig['id'] = 'temp';
year/gii/yunying/commands/BatchController.php:        $this->modelGenerator = new ModelGenerator(['db' => $this->modelDb]);
year/gii/yunying/commands/BatchController.php:        if (!$this->tables) {
year/gii/yunying/commands/BatchController.php:            $this->modelGenerator->tableName = '*';
year/gii/yunying/commands/BatchController.php:            $this->tables = $this->modelGenerator->getTableNames();
year/gii/yunying/commands/BatchController.php:            $tableList = implode("\n\t- ", $this->tables);
year/gii/yunying/commands/BatchController.php:            if (!$this->confirm($msg)) {
year/gii/yunying/commands/BatchController.php:        $this->actionModels();
year/gii/yunying/commands/BatchController.php:        $this->actionCruds();
year/gii/yunying/commands/BatchController.php:        foreach ($this->tables as $table) {
year/gii/yunying/commands/BatchController.php:            //var_dump($this->tableNameMap, $table);exit;
year/gii/yunying/commands/BatchController.php:                'interactive' => $this->interactive,
year/gii/yunying/commands/BatchController.php:                'overwrite' => $this->overwrite,
year/gii/yunying/commands/BatchController.php:                'useTranslatableBehavior' => $this->useTranslatableBehavior,
year/gii/yunying/commands/BatchController.php:                'useTimestampBehavior' => $this->useTimestampBehavior,
year/gii/yunying/commands/BatchController.php:                'languageTableName' => $this->languageTableName,
year/gii/yunying/commands/BatchController.php:                'languageCodeColumn' => $this->languageCodeColumn,
year/gii/yunying/commands/BatchController.php:                'template' => $this->template,
year/gii/yunying/commands/BatchController.php:                'ns' => $this->modelNamespace,
year/gii/yunying/commands/BatchController.php:                'db' => $this->modelDb,
year/gii/yunying/commands/BatchController.php:                'tablePrefix' => $this->tablePrefix,
year/gii/yunying/commands/BatchController.php:                'enableI18N' => $this->enableI18N,
year/gii/yunying/commands/BatchController.php:                'singularEntities' => $this->singularEntities,
year/gii/yunying/commands/BatchController.php:                'messageCategory' => $this->modelMessageCategory,
year/gii/yunying/commands/BatchController.php:                'generateModelClass' => $this->extendedModels,
year/gii/yunying/commands/BatchController.php:                'baseClassSuffix' => $this->modelBaseClassSuffix,
year/gii/yunying/commands/BatchController.php:                'modelClass' => isset($this->tableNameMap[$table]) ?
year/gii/yunying/commands/BatchController.php:                    $this->tableNameMap[$table] :
year/gii/yunying/commands/BatchController.php:                'baseClass' => $this->modelBaseClass,
year/gii/yunying/commands/BatchController.php:                'baseTraits' => $this->modelBaseTraits,
year/gii/yunying/commands/BatchController.php:                'removeDuplicateRelations' => $this->modelRemoveDuplicateRelations,
year/gii/yunying/commands/BatchController.php:                'tableNameMap' => $this->tableNameMap,
year/gii/yunying/commands/BatchController.php:                'generateQuery' => $this->modelGenerateQuery,
year/gii/yunying/commands/BatchController.php:                'queryNs' => $this->modelQueryNamespace,
year/gii/yunying/commands/BatchController.php:                'queryBaseClass' => $this->modelQueryBaseClass,
year/gii/yunying/commands/BatchController.php:                'generateLabelsFromComments' => $this->modelGenerateLabelsFromComments,
year/gii/yunying/commands/BatchController.php:                'generateHintsFromComments' => $this->modelGenerateHintsFromComments,
year/gii/yunying/commands/BatchController.php:            $temp = new \yii\console\Application($this->appConfig);
year/gii/yunying/commands/BatchController.php:        $providers = ArrayHelper::merge($this->crudProviders, Generator::getCoreProviders());
year/gii/yunying/commands/BatchController.php:        $this->createDirectoryFromNamespace($this->crudControllerNamespace);
year/gii/yunying/commands/BatchController.php:        $this->createDirectoryFromNamespace($this->crudSearchModelNamespace);
year/gii/yunying/commands/BatchController.php:        foreach ($this->tables as $table) {
year/gii/yunying/commands/BatchController.php:            $table = str_replace($this->tablePrefix, '', $table);
year/gii/yunying/commands/BatchController.php:            $name = isset($this->tableNameMap[$table]) ? $this->tableNameMap[$table] :
year/gii/yunying/commands/BatchController.php:                $this->modelGenerator->generateClassName($table);
year/gii/yunying/commands/BatchController.php:                'interactive' => $this->interactive,
year/gii/yunying/commands/BatchController.php:                'overwrite' => $this->overwrite,
year/gii/yunying/commands/BatchController.php:                'template' => $this->template,
year/gii/yunying/commands/BatchController.php:                'modelClass' => $this->modelNamespace.'\\'.$name,
year/gii/yunying/commands/BatchController.php:                'searchModelClass' => $this->crudSearchModelNamespace.'\\'.$name.$this->crudSearchModelSuffix,
year/gii/yunying/commands/BatchController.php:                'controllerNs' => $this->crudControllerNamespace,
year/gii/yunying/commands/BatchController.php:                'controllerClass' => $this->crudControllerNamespace.'\\'.$name.'Controller',
year/gii/yunying/commands/BatchController.php:                'viewPath' => $this->crudViewPath,
year/gii/yunying/commands/BatchController.php:                'pathPrefix' => $this->crudPathPrefix,
year/gii/yunying/commands/BatchController.php:                'tablePrefix' => $this->tablePrefix,
year/gii/yunying/commands/BatchController.php:                'enableI18N' => $this->enableI18N,
year/gii/yunying/commands/BatchController.php:                'singularEntities' => $this->singularEntities,
year/gii/yunying/commands/BatchController.php:                'messageCategory' => $this->crudMessageCategory,
year/gii/yunying/commands/BatchController.php:                'modelMessageCategory' => $this->modelMessageCategory,
year/gii/yunying/commands/BatchController.php:                'baseControllerClass' => $this->crudBaseControllerClass,
year/gii/yunying/commands/BatchController.php:                'skipRelations' => $this->crudSkipRelations,
year/gii/yunying/commands/BatchController.php:                'accessFilter' => $this->crudAccessFilter,
year/gii/yunying/commands/BatchController.php:                'baseTraits' => $this->crudBaseTraits,
year/gii/yunying/commands/BatchController.php:                'tidyOutput' => $this->crudTidyOutput,
year/gii/yunying/commands/BatchController.php:                'fixOutput' => $this->crudFixOutput,
year/gii/yunying/commands/BatchController.php:                'template' => $this->crudTemplate,
year/gii/yunying/commands/BatchController.php:                'indexWidgetType' => $this->crudIndexWidgetType,
year/gii/yunying/commands/BatchController.php:                'indexGridClass' => $this->crudIndexGridClass,
year/gii/yunying/commands/BatchController.php:            $temp = new \yii\console\Application($this->appConfig);
year/gii/yunying/utils/fs.php:        if($this->base && strlen($this->base)) {
year/gii/yunying/utils/fs.php:            if(strpos($temp, $this->base) !== 0) { throw new Exception('Path is not inside base ('.$this->base.'): ' . $temp); }
year/gii/yunying/utils/fs.php:        $id = $this->real($this->base . DIRECTORY_SEPARATOR . $id);
year/gii/yunying/utils/fs.php:        $path = $this->real($path);
year/gii/yunying/utils/fs.php:        $path = substr($path, strlen($this->base));
year/gii/yunying/utils/fs.php:        $this->base = $this->real($base);
year/gii/yunying/utils/fs.php:        if(!$this->base) { throw new Exception('Base directory does not exist'); }
year/gii/yunying/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying/utils/fs.php:                $res[] = array('text' => $item, 'children' => true,  'id' => $this->id($dir . DIRECTORY_SEPARATOR . $item), 'icon' => 'folder');
year/gii/yunying/utils/fs.php:                $res[] = array('text' => $item, 'children' => false, 'id' => $this->id($dir . DIRECTORY_SEPARATOR . $item), 'type' => 'file', 'icon' => 'file file-'.substr($item, strrpos($item,'.') + 1));
year/gii/yunying/utils/fs.php:        if($with_root && $this->id($dir) === '/') {
year/gii/yunying/utils/fs.php:            $res = array(array('text' => basename($this->base), 'children' => $res, 'id' => '/', 'icon'=>'folder', 'state' => array('opened' => true, 'disabled' => true)));
year/gii/yunying/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying/utils/fs.php:                    $dat['content'] = 'File not recognized: '.$this->id($dir);
year/gii/yunying/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying/utils/fs.php:        return array('id' => $this->id($dir . DIRECTORY_SEPARATOR . $name));
year/gii/yunying/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying/utils/fs.php:        if($dir === $this->base) {
year/gii/yunying/utils/fs.php:        return array('id' => $this->id($new));
year/gii/yunying/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying/utils/fs.php:        if($dir === $this->base) {
year/gii/yunying/utils/fs.php:                $this->remove($this->id($dir . DIRECTORY_SEPARATOR . $f));
year/gii/yunying/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying/utils/fs.php:        $par = $this->path($par);
year/gii/yunying/utils/fs.php:        return array('id' => $this->id($new));
year/gii/yunying/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying/utils/fs.php:        $par = $this->path($par);
year/gii/yunying/utils/fs.php:                $this->copy($this->id($dir . DIRECTORY_SEPARATOR . $f), $this->id($new));
year/gii/yunying/utils/fs.php:        return array('id' => $this->id($new));
year/gii/dva/commands/BatchController.php:        $this->appConfig = $this->getYiiConfiguration();
year/gii/dva/commands/BatchController.php:        $this->appConfig['id'] = 'temp';
year/gii/dva/commands/BatchController.php:        $this->modelGenerator = new ModelGenerator(['db' => $this->modelDb]);
year/gii/dva/commands/BatchController.php:        if (!$this->tables) {
year/gii/dva/commands/BatchController.php:            $this->modelGenerator->tableName = '*';
year/gii/dva/commands/BatchController.php:            $this->tables = $this->modelGenerator->getTableNames();
year/gii/dva/commands/BatchController.php:            $tableList = implode("\n\t- ", $this->tables);
year/gii/dva/commands/BatchController.php:            if (!$this->confirm($msg)) {
year/gii/dva/commands/BatchController.php:        $this->actionModels();
year/gii/dva/commands/BatchController.php:        $this->actionCruds();
year/gii/dva/commands/BatchController.php:        foreach ($this->tables as $table) {
year/gii/dva/commands/BatchController.php:            //var_dump($this->tableNameMap, $table);exit;
year/gii/dva/commands/BatchController.php:                'interactive' => $this->interactive,
year/gii/dva/commands/BatchController.php:                'overwrite' => $this->overwrite,
year/gii/dva/commands/BatchController.php:                'useTranslatableBehavior' => $this->useTranslatableBehavior,
year/gii/dva/commands/BatchController.php:                'useTimestampBehavior' => $this->useTimestampBehavior,
year/gii/dva/commands/BatchController.php:                'languageTableName' => $this->languageTableName,
year/gii/dva/commands/BatchController.php:                'languageCodeColumn' => $this->languageCodeColumn,
year/gii/dva/commands/BatchController.php:                'template' => $this->template,
year/gii/dva/commands/BatchController.php:                'ns' => $this->modelNamespace,
year/gii/dva/commands/BatchController.php:                'db' => $this->modelDb,
year/gii/dva/commands/BatchController.php:                'tablePrefix' => $this->tablePrefix,
year/gii/dva/commands/BatchController.php:                'enableI18N' => $this->enableI18N,
year/gii/dva/commands/BatchController.php:                'singularEntities' => $this->singularEntities,
year/gii/dva/commands/BatchController.php:                'messageCategory' => $this->modelMessageCategory,
year/gii/dva/commands/BatchController.php:                'generateModelClass' => $this->extendedModels,
year/gii/dva/commands/BatchController.php:                'baseClassSuffix' => $this->modelBaseClassSuffix,
year/gii/dva/commands/BatchController.php:                'modelClass' => isset($this->tableNameMap[$table]) ?
year/gii/dva/commands/BatchController.php:                    $this->tableNameMap[$table] :
year/gii/dva/commands/BatchController.php:                'baseClass' => $this->modelBaseClass,
year/gii/dva/commands/BatchController.php:                'baseTraits' => $this->modelBaseTraits,
year/gii/dva/commands/BatchController.php:                'removeDuplicateRelations' => $this->modelRemoveDuplicateRelations,
year/gii/dva/commands/BatchController.php:                'tableNameMap' => $this->tableNameMap,
year/gii/dva/commands/BatchController.php:                'generateQuery' => $this->modelGenerateQuery,
year/gii/dva/commands/BatchController.php:                'queryNs' => $this->modelQueryNamespace,
year/gii/dva/commands/BatchController.php:                'queryBaseClass' => $this->modelQueryBaseClass,
year/gii/dva/commands/BatchController.php:                'generateLabelsFromComments' => $this->modelGenerateLabelsFromComments,
year/gii/dva/commands/BatchController.php:                'generateHintsFromComments' => $this->modelGenerateHintsFromComments,
year/gii/dva/commands/BatchController.php:            $temp = new \yii\console\Application($this->appConfig);
year/gii/dva/commands/BatchController.php:        $providers = ArrayHelper::merge($this->crudProviders, Generator::getCoreProviders());
year/gii/dva/commands/BatchController.php:        $this->createDirectoryFromNamespace($this->crudControllerNamespace);
year/gii/dva/commands/BatchController.php:        $this->createDirectoryFromNamespace($this->crudSearchModelNamespace);
year/gii/dva/commands/BatchController.php:        foreach ($this->tables as $table) {
year/gii/dva/commands/BatchController.php:            $table = str_replace($this->tablePrefix, '', $table);
year/gii/dva/commands/BatchController.php:            $name = isset($this->tableNameMap[$table]) ? $this->tableNameMap[$table] :
year/gii/dva/commands/BatchController.php:                $this->modelGenerator->generateClassName($table);
year/gii/dva/commands/BatchController.php:                'interactive' => $this->interactive,
year/gii/dva/commands/BatchController.php:                'overwrite' => $this->overwrite,
year/gii/dva/commands/BatchController.php:                'template' => $this->template,
year/gii/dva/commands/BatchController.php:                'modelClass' => $this->modelNamespace.'\\'.$name,
year/gii/dva/commands/BatchController.php:                'searchModelClass' => $this->crudSearchModelNamespace.'\\'.$name.$this->crudSearchModelSuffix,
year/gii/dva/commands/BatchController.php:                'controllerNs' => $this->crudControllerNamespace,
year/gii/dva/commands/BatchController.php:                'controllerClass' => $this->crudControllerNamespace.'\\'.$name.'Controller',
year/gii/dva/commands/BatchController.php:                'viewPath' => $this->crudViewPath,
year/gii/dva/commands/BatchController.php:                'pathPrefix' => $this->crudPathPrefix,
year/gii/dva/commands/BatchController.php:                'tablePrefix' => $this->tablePrefix,
year/gii/dva/commands/BatchController.php:                'enableI18N' => $this->enableI18N,
year/gii/dva/commands/BatchController.php:                'singularEntities' => $this->singularEntities,
year/gii/dva/commands/BatchController.php:                'messageCategory' => $this->crudMessageCategory,
year/gii/dva/commands/BatchController.php:                'modelMessageCategory' => $this->modelMessageCategory,
year/gii/dva/commands/BatchController.php:                'baseControllerClass' => $this->crudBaseControllerClass,
year/gii/dva/commands/BatchController.php:                'skipRelations' => $this->crudSkipRelations,
year/gii/dva/commands/BatchController.php:                'accessFilter' => $this->crudAccessFilter,
year/gii/dva/commands/BatchController.php:                'baseTraits' => $this->crudBaseTraits,
year/gii/dva/commands/BatchController.php:                'tidyOutput' => $this->crudTidyOutput,
year/gii/dva/commands/BatchController.php:                'fixOutput' => $this->crudFixOutput,
year/gii/dva/commands/BatchController.php:                'template' => $this->crudTemplate,
year/gii/dva/commands/BatchController.php:                'indexWidgetType' => $this->crudIndexWidgetType,
year/gii/dva/commands/BatchController.php:                'indexGridClass' => $this->crudIndexGridClass,
year/gii/dva/commands/BatchController.php:            $temp = new \yii\console\Application($this->appConfig);
year/editor/FlexiJsonEditorAsset.php:            $this->js[] =
year/editor/FlexiJsonEditorAsset.php:            $this->js[] = 'jquery.jsoneditor.min.js';
year/gii/service/Generator.php:        $class = $this->modelClass;
year/gii/service/Generator.php:            $this->addError('modelClass', "The table associated with $class must have primary key(s).");
year/gii/service/Generator.php:        $serviceFile = Yii::getAlias('@' . str_replace('\\', '/', ltrim($this->serviceClass, '\\')) . '.php');
year/gii/service/Generator.php:            new CodeFile($serviceFile, $this->render('service.php')),
year/gii/service/Generator.php:        if (!empty($this->searchModelClass)) {
year/gii/service/Generator.php:            $searchModel = Yii::getAlias('@' . str_replace('\\', '/', ltrim($this->searchModelClass, '\\') . '.php'));
year/gii/service/Generator.php:            $files[] = new CodeFile($searchModel, $this->render('search.php'));
year/gii/service/Generator.php:        $pos = strrpos($this->serviceClass, '\\');
year/gii/service/Generator.php:        $class = substr(substr($this->serviceClass, $pos + 1), 0, -10);
year/gii/service/Generator.php:        if (empty($this->viewPath)) {
year/gii/service/Generator.php:            return Yii::getAlias('@app/views/' . $this->getControllerID());
year/gii/service/Generator.php:        return Yii::getAlias(str_replace('\\', '/', $this->viewPath));
year/gii/service/Generator.php:        foreach ($this->getColumnNames() as $name) {
year/gii/service/Generator.php:        $class = $this->modelClass;
year/gii/service/Generator.php:        $tableSchema = $this->getTableSchema();
year/gii/service/Generator.php:        $tableSchema = $this->getTableSchema();
year/gii/service/Generator.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/service/Generator.php:            return ["[['" . implode("', '", $this->getColumnNames()) . "'], 'safe']"];
year/gii/service/Generator.php:        return $this->getColumnNames();
year/gii/service/Generator.php:        $model = new $this->modelClass();
year/gii/service/Generator.php:        foreach ($this->getColumnNames() as $name) {
year/gii/service/Generator.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/service/Generator.php:            $class = $this->modelClass;
year/gii/service/Generator.php:                    $hashConditions[] = "'{$column}' => \$this->{$column},";
year/gii/service/Generator.php:                    $likeKeyword = $this->getClassDbDriverName() === 'pgsql' ? 'ilike' : 'like';
year/gii/service/Generator.php:                    $likeConditions[] = "->andFilterWhere(['{$likeKeyword}', '{$column}', \$this->{$column}])";                    
year/gii/service/Generator.php:        $class = $this->modelClass;
year/gii/service/Generator.php:        $class = $this->modelClass;
year/gii/service/Generator.php:        $class = $this->modelClass;
year/gii/service/Generator.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/service/Generator.php:        $class = $this->modelClass;
year/gii/service/Generator.php:        $class = $this->modelClass;
year/gii/service/Generator.php:        $class = $this->modelClass;
year/gii/service/default/search.php:        $this->load($params);
year/gii/service/default/search.php:        if (!$this->validate()) {
year/gii/service/default/service.tpl.php:        return $this->render('index', [
year/gii/service/default/service.tpl.php:        return $this->render('index', [
year/gii/service/default/service.tpl.php:        return $this->render('view', [
year/gii/service/default/service.tpl.php:            'model' => $this->findModel(<?= $actionParams ?>),
year/gii/service/default/service.tpl.php:            return $this->redirect(['view', <?= $urlParams ?>]);
year/gii/service/default/service.tpl.php:        return $this->render('create', [
year/gii/service/default/service.tpl.php:        $model = $this->findModel(<?= $actionParams ?>);
year/gii/service/default/service.tpl.php:            return $this->redirect(['view', <?= $urlParams ?>]);
year/gii/service/default/service.tpl.php:        return $this->render('update', [
year/gii/service/default/service.tpl.php:        $this->findModel(<?= $actionParams ?>)->delete();
year/gii/service/default/service.tpl.php:        return $this->redirect(['index']);
year/gii/gogen/generators/tags/form.php://$this->registerJs(SaveForm::getSavedFormsJs($generator->getName()), yii\web\View::POS_END);
year/gii/gogen/generators/tags/form.php://$this->registerJs(SaveForm::jsFillForm(), yii\web\View::POS_END);
year/gii/nodetest/generators/fixtures/form.php://$this->registerJs(SaveForm::getSavedFormsJs($generator->getName()), yii\web\View::POS_END);
year/gii/nodetest/generators/fixtures/form.php://$this->registerJs(SaveForm::jsFillForm(), yii\web\View::POS_END);
year/gii/nodetest/generators/fixtures/Generator.php:        if (empty($this->srcDir)) {
year/gii/nodetest/generators/fixtures/Generator.php:            $this->srcDir = Yii::getAlias('@app/runtime')
year/gii/nodetest/generators/fixtures/Generator.php:        // die($this->db) ;
year/gii/nodetest/generators/fixtures/Generator.php:        $db = $this->getDbConnection();
year/gii/nodetest/generators/fixtures/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/nodetest/generators/fixtures/Generator.php:                ? $this->generateClassName($tableName)
year/gii/nodetest/generators/fixtures/Generator.php:                : $this->modelClass;
year/gii/nodetest/generators/fixtures/Generator.php:            $className = $this->generateClassName($tableName);
year/gii/nodetest/generators/fixtures/Generator.php://            $fakeRecord = $this->genFakeRecord($tableSchema) ;
year/gii/nodetest/generators/fixtures/Generator.php:                'createData' => $this->genFakeRecord($tableSchema),
year/gii/nodetest/generators/fixtures/Generator.php:                'updateData' => $this->genFakeRecord($tableSchema),
year/gii/nodetest/generators/fixtures/Generator.php:            //    $params['timestamp'] = $this->generateTimestamp($tableSchema);
year/gii/nodetest/generators/fixtures/Generator.php:                $this->srcDir,
year/gii/nodetest/generators/fixtures/Generator.php:            // $this->render('model.vue.php', $params)
year/gii/nodetest/generators/fixtures/Generator.php:                    dirname($this->srcDir), // FIXME  临时的 可以更改下 比如从UI选择
year/gii/nodetest/generators/fixtures/Generator.php:             $this->render('api-crud-test.php', [
year/gii/nodetest/generators/fixtures/Generator.php:        $routePath = Inflector::camel2id(StringHelper::basename($this->modelClass));
year/gii/service/default/service.php:          return $this->findModel(<?= $actionParams ?>);
year/gii/service/default/service.php:        $oldModel = $this->findModel(<?= $actionParams ?>);
year/gii/service/default/service.php:        return $oldModel ; // TODO 重新加载下该模型 // return $this->findModel(<?= $actionParams ?>) ;
year/gii/service/default/service.php:        $model = $this->findModel(<?= $actionParams ?>);
year/gii/gogen/generators/tags/Generator.php:        if (empty($this->srcDir)) {
year/gii/gogen/generators/tags/Generator.php:            $this->srcDir = Yii::getAlias('@app/runtime')
year/gii/gogen/generators/tags/Generator.php:        // die($this->db) ;
year/gii/gogen/generators/tags/Generator.php:        $db = $this->getDbConnection();
year/gii/gogen/generators/tags/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/gogen/generators/tags/Generator.php:                ? $this->generateClassName($tableName)
year/gii/gogen/generators/tags/Generator.php:                : $this->modelClass;
year/gii/gogen/generators/tags/Generator.php:            $className = $this->generateClassName($tableName);
year/gii/gogen/generators/tags/Generator.php:                    ($this->srcDir), // FIXME  临时的 可以更改下 比如从UI选择
year/gii/gogen/generators/tags/Generator.php:                $this->render('form.php', [
year/gii/gogen/generators/tags/Generator.php:                   'properties'=>$this->generateProperties($tableSchema),
year/gii/gogen/generators/tags/Generator.php:                   'labels'=> $this->generateLabels($tableSchema)
year/gii/gogen/generators/tags/Generator.php:        $routePath = Inflector::camel2id(StringHelper::basename($this->modelClass));
year/gii/dva/generators/test/Generator.php:        $labels = $this->generateLabels($table);
year/gii/dva/generators/test/Generator.php:       // $relations = $this->generateRelations();
year/gii/dva/generators/test/Generator.php:        $db = $this->getDbConnection();
year/gii/dva/generators/test/Generator.php:        $class = $this->modelNs.$this->modelClass;
year/gii/dva/generators/test/Generator.php:        $this->tableName = $class::$classTableNameMethod();
year/gii/dva/generators/test/Generator.php:        //if($this->searchModelClass !=="")
year/gii/dva/generators/test/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/dva/generators/test/Generator.php:            $className = $this->generateClassName($tableName);
year/gii/dva/generators/test/Generator.php:                'modelClass' => $this->modelClass,
year/gii/dva/generators/test/Generator.php:                'controllerClass' => $this->controllerClass,
year/gii/dva/generators/test/Generator.php:                'labels' => $this->generateLabels($tableSchema),
year/gii/dva/generators/test/Generator.php:                'rules' => $this->generateRules($tableSchema),
year/gii/dva/generators/test/Generator.php:                'attributes' => $this->generateAttributes($tableSchema),
year/gii/dva/generators/test/Generator.php:                'ns' => $this->ns,
year/gii/dva/generators/test/Generator.php:                Yii::getAlias('@app/..'.$this->codeceptionPath.str_replace('\\', '/', $this->ns)).'/'.$className.$this->baseClassSuffix.'UnitTest.php',
year/gii/dva/generators/test/Generator.php:                $this->render('unit.php', $params)
year/gii/dva/generators/model/form.v0.php:$this->registerJs(SaveForm::getSavedFormsJs($generator->getName()), yii\web\View::POS_END);
year/gii/dva/generators/model/form.v0.php:$this->registerJs(SaveForm::jsFillForm(), yii\web\View::POS_END);
year/gii/dva/generators/model/Generator.php:        if(empty($this->srcDir)){
year/gii/dva/generators/model/Generator.php:            $this->srcDir = dirname(Yii::$app->basePath)
year/gii/dva/generators/model/Generator.php:        $value = $this->$attribute;
year/gii/dva/generators/model/Generator.php:            $this->addError($attribute, 'Namespace must be associated with an existing directory.');
year/gii/dva/generators/model/Generator.php:        if ($this->isReservedKeyword($this->modelClass)) {
year/gii/dva/generators/model/Generator.php:            $this->addError('modelClass', 'Class name cannot be a reserved PHP keyword.');
year/gii/dva/generators/model/Generator.php:        if ((empty($this->tableName) || substr_compare($this->tableName, '*', -1, 1)) && $this->modelClass == '') {
year/gii/dva/generators/model/Generator.php:            $this->addError('modelClass', 'Model Class cannot be blank if table name does not end with asterisk.');
year/gii/dva/generators/model/Generator.php:        $relations = $this->generateRelations();
year/gii/dva/generators/model/Generator.php:        $db = $this->getDbConnection();
year/gii/dva/generators/model/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/dva/generators/model/Generator.php:            list($relations, $translations) = array_values($this->extractTranslations($tableName, $relations));
year/gii/dva/generators/model/Generator.php:                ? $this->generateClassName($tableName)
year/gii/dva/generators/model/Generator.php:                : $this->modelClass;
year/gii/dva/generators/model/Generator.php:            $queryClassName = ($this->generateQuery) ? $this->generateQueryClassName($className) : false;
year/gii/dva/generators/model/Generator.php:                'labels' => $this->generateLabels($tableSchema),
year/gii/dva/generators/model/Generator.php:                'hints' => $this->generateHints($tableSchema),
year/gii/dva/generators/model/Generator.php:                'rules' => $this->generateRules($tableSchema),
year/gii/dva/generators/model/Generator.php:                'ns' => $this->ns,
year/gii/dva/generators/model/Generator.php:                'enum' => $this->getEnum($tableSchema->columns),
year/gii/dva/generators/model/Generator.php:            $params['blameable'] = $this->generateBlameable($tableSchema);
year/gii/dva/generators/model/Generator.php:            $params['timestamp'] = $this->generateTimestamp($tableSchema);
year/gii/dva/generators/model/Generator.php:               $this->srcDir,
year/gii/dva/generators/model/Generator.php:                $this->render('models/model.js.php', $params)
year/gii/dva/generators/model/Generator.php:                $this->srcDir,
year/gii/dva/generators/model/Generator.php:                $this->render('services/model.js.php', $params)
year/gii/dva/generators/model/Generator.php:                $this->srcDir,
year/gii/dva/generators/model/Generator.php:                $this->render('components/FormModal.js.php', $params)
year/gii/dva/generators/model/Generator.php:                $this->srcDir,
year/gii/dva/generators/model/Generator.php:                $this->render('components/ModelList.js.php', $params)
year/gii/dva/generators/model/Generator.php:                $this->srcDir,
year/gii/dva/generators/model/Generator.php:                $this->render('components/model.css.php', $params)
year/gii/dva/generators/model/Generator.php:                $this->srcDir,
year/gii/dva/generators/model/Generator.php:                $this->render('routes/ModelContainer.jsx.php', $params)
year/gii/dva/generators/model/Generator.php:                $this->srcDir,
year/gii/dva/generators/model/Generator.php:                $this->render('routes/Model.css.php', $params)
year/gii/dva/generators/model/Generator.php:            $modelClassFile = Yii::getAlias('@' . str_replace('\\', '/', $this->ns)) . '/' . $className . '.php';
year/gii/dva/generators/model/Generator.php:            if ($this->generateModelClass || !is_file($modelClassFile)) {
year/gii/dva/generators/model/Generator.php:                    $this->render('model-extended.php', $params)
year/gii/dva/generators/model/Generator.php:                        '@'.str_replace('\\', '/', $this->queryNs)
year/gii/dva/generators/model/Generator.php:                if ($this->generateModelClass || !is_file($queryClassFile)) {
year/gii/dva/generators/model/Generator.php:                        $this->render('query.php', $params)
year/gii/dva/generators/model/Generator.php:            $suffix = str_replace(' ', '', $this->getName());
year/gii/dva/generators/model/Generator.php:            $formDataDir = Yii::getAlias('@'.str_replace('\\', '/', $this->ns));
year/gii/dva/generators/model/Generator.php:            $formData = json_encode(SaveForm::getFormAttributesValues($this, $this->formAttributes()));
year/gii/dva/generators/model/Generator.php:         $routePath = Inflector::camel2id(StringHelper::basename($this->modelClass)) ;
year/gii/dva/generators/model/Generator.php:        $modelPathName = lcfirst($this->modelClass) ;
year/gii/dva/generators/model/Generator.php:         $modelNaneWords = Inflector::camel2words($this->modelClass) ;
year/gii/dva/generators/model/Generator.php:      name: '{$this->modelClass}Page',
year/gii/dva/generators/model/Generator.php:          cb(null, require('./routes/{$this->modelClass}'));
year/gii/dva/generators/model/form.php:$this->registerJs(SaveForm::getSavedFormsJs($generator->getName()), yii\web\View::POS_END);
year/gii/dva/generators/model/form.php:$this->registerJs(SaveForm::jsFillForm(), yii\web\View::POS_END);
year/gii/dva/generators/test/default/unit.php:        if($this->modelPK != null){
year/gii/dva/generators/test/default/unit.php:            $cls = $this->class;
year/gii/dva/generators/test/default/unit.php:            $model = $cls::findOne($this->modelPK);
year/gii/dva/generators/test/default/unit.php:        $model = $this->newModelInstance();
year/gii/dva/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be created', function () use ($model) {
year/gii/dva/generators/test/default/unit.php:        $model = $this->newModelInstance();
year/gii/dva/generators/test/default/unit.php:        if(!$model->save($this->isModelValidationEnabled)){
year/gii/dva/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/dva/generators/test/default/unit.php:        $this->modelPK = $model-><?php echo PKAttributeName($attributes); ?>;
year/gii/dva/generators/test/default/unit.php:        $reloadedModel = $this->loadModelById($this->modelPK);
year/gii/dva/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be saved', function () use ($reloadedModel, $model) {
year/gii/dva/generators/test/default/unit.php:        $this->assertNotEmpty($model-><?php echo PKAttributeName($attributes); ?>);
year/gii/dva/generators/test/default/unit.php:        $originalModel = $this->newModelInstance();
year/gii/dva/generators/test/default/unit.php:        if(!$originalModel->save($this->isModelValidationEnabled)){
year/gii/dva/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/dva/generators/test/default/unit.php:        $this->modelPK = $originalModel-><?php echo PKAttributeName($attributes); ?>;
year/gii/dva/generators/test/default/unit.php:        $updatedModel-><?php echo $attr['name'] ?> = $this->updateAttributeValue($originalModel-><?php echo $attr['name'] ?>, '<?php echo $attr['name'] ?>', '<?php echo $attr['type'] ?>');
year/gii/dva/generators/test/default/unit.php:        if(!$updatedModel->save($this->isModelValidationEnabled)){
year/gii/dva/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/dva/generators/test/default/unit.php:        $reloadedModel = $this->loadModelById($this->modelPK);
year/gii/dva/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be updated', function () use ($reloadedModel, $updatedModel) {
year/gii/dva/generators/test/default/unit.php:        $model = $this->newModelInstance();
year/gii/dva/generators/test/default/unit.php:        if(!$model->save($this->isModelValidationEnabled)){
year/gii/dva/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/dva/generators/test/default/unit.php:        $this->modelPK = $model-><?php echo PKAttributeName($attributes); ?>;
year/gii/dva/generators/test/default/unit.php:        $model = $this->loadModelById($this->modelPK);
year/gii/dva/generators/test/default/unit.php:        $deletedModel = $this->loadModelById($this->modelPK);
year/gii/dva/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be deleted', function () use ($deletedModel) {
year/gii/dva/generators/test/default/unit.php:            expect($this->modelName.' model was deleted', $deletedModel)->equals(null);
year/gii/dva/generators/test/default/unit.php:        $r = new \ReflectionClass($this->class);
year/gii/dva/generators/test/default/unit.php:        $r = new \ReflectionClass($this->class);
year/gii/nodetest/commands/BatchController.php:        $this->appConfig = $this->getYiiConfiguration();
year/gii/nodetest/commands/BatchController.php:        $this->appConfig['id'] = 'temp';
year/gii/nodetest/commands/BatchController.php:        $this->modelGenerator = new ModelGenerator(['db' => $this->modelDb]);
year/gii/nodetest/commands/BatchController.php:        if (!$this->tables) {
year/gii/nodetest/commands/BatchController.php:            $this->modelGenerator->tableName = '*';
year/gii/nodetest/commands/BatchController.php:            $this->tables = $this->modelGenerator->getTableNames();
year/gii/nodetest/commands/BatchController.php:            $tableList = implode("\n\t- ", $this->tables);
year/gii/nodetest/commands/BatchController.php:            if (!$this->confirm($msg)) {
year/gii/nodetest/commands/BatchController.php:        $this->actionModels();
year/gii/nodetest/commands/BatchController.php:        $this->actionCruds();
year/gii/nodetest/commands/BatchController.php:        foreach ($this->tables as $table) {
year/gii/nodetest/commands/BatchController.php:            //var_dump($this->tableNameMap, $table);exit;
year/gii/nodetest/commands/BatchController.php:                'interactive' => $this->interactive,
year/gii/nodetest/commands/BatchController.php:                'overwrite' => $this->overwrite,
year/gii/nodetest/commands/BatchController.php:                'useTranslatableBehavior' => $this->useTranslatableBehavior,
year/gii/nodetest/commands/BatchController.php:                'useTimestampBehavior' => $this->useTimestampBehavior,
year/gii/nodetest/commands/BatchController.php:                'languageTableName' => $this->languageTableName,
year/gii/nodetest/commands/BatchController.php:                'languageCodeColumn' => $this->languageCodeColumn,
year/gii/nodetest/commands/BatchController.php:                'template' => $this->template,
year/gii/nodetest/commands/BatchController.php:                'ns' => $this->modelNamespace,
year/gii/nodetest/commands/BatchController.php:                'db' => $this->modelDb,
year/gii/nodetest/commands/BatchController.php:                'tablePrefix' => $this->tablePrefix,
year/gii/nodetest/commands/BatchController.php:                'enableI18N' => $this->enableI18N,
year/gii/nodetest/commands/BatchController.php:                'singularEntities' => $this->singularEntities,
year/gii/nodetest/commands/BatchController.php:                'messageCategory' => $this->modelMessageCategory,
year/gii/nodetest/commands/BatchController.php:                'generateModelClass' => $this->extendedModels,
year/gii/nodetest/commands/BatchController.php:                'baseClassSuffix' => $this->modelBaseClassSuffix,
year/gii/nodetest/commands/BatchController.php:                'modelClass' => isset($this->tableNameMap[$table]) ?
year/gii/nodetest/commands/BatchController.php:                    $this->tableNameMap[$table] :
year/gii/nodetest/commands/BatchController.php:                'baseClass' => $this->modelBaseClass,
year/gii/nodetest/commands/BatchController.php:                'baseTraits' => $this->modelBaseTraits,
year/gii/nodetest/commands/BatchController.php:                'removeDuplicateRelations' => $this->modelRemoveDuplicateRelations,
year/gii/nodetest/commands/BatchController.php:                'tableNameMap' => $this->tableNameMap,
year/gii/nodetest/commands/BatchController.php:                'generateQuery' => $this->modelGenerateQuery,
year/gii/nodetest/commands/BatchController.php:                'queryNs' => $this->modelQueryNamespace,
year/gii/nodetest/commands/BatchController.php:                'queryBaseClass' => $this->modelQueryBaseClass,
year/gii/nodetest/commands/BatchController.php:                'generateLabelsFromComments' => $this->modelGenerateLabelsFromComments,
year/gii/nodetest/commands/BatchController.php:                'generateHintsFromComments' => $this->modelGenerateHintsFromComments,
year/gii/nodetest/commands/BatchController.php:            $temp = new \yii\console\Application($this->appConfig);
year/gii/nodetest/commands/BatchController.php:        $providers = ArrayHelper::merge($this->crudProviders, Generator::getCoreProviders());
year/gii/nodetest/commands/BatchController.php:        $this->createDirectoryFromNamespace($this->crudControllerNamespace);
year/gii/nodetest/commands/BatchController.php:        $this->createDirectoryFromNamespace($this->crudSearchModelNamespace);
year/gii/nodetest/commands/BatchController.php:        foreach ($this->tables as $table) {
year/gii/nodetest/commands/BatchController.php:            $table = str_replace($this->tablePrefix, '', $table);
year/gii/nodetest/commands/BatchController.php:            $name = isset($this->tableNameMap[$table]) ? $this->tableNameMap[$table] :
year/gii/nodetest/commands/BatchController.php:                $this->modelGenerator->generateClassName($table);
year/gii/nodetest/commands/BatchController.php:                'interactive' => $this->interactive,
year/gii/nodetest/commands/BatchController.php:                'overwrite' => $this->overwrite,
year/gii/nodetest/commands/BatchController.php:                'template' => $this->template,
year/gii/nodetest/commands/BatchController.php:                'modelClass' => $this->modelNamespace.'\\'.$name,
year/gii/nodetest/commands/BatchController.php:                'searchModelClass' => $this->crudSearchModelNamespace.'\\'.$name.$this->crudSearchModelSuffix,
year/gii/nodetest/commands/BatchController.php:                'controllerNs' => $this->crudControllerNamespace,
year/gii/nodetest/commands/BatchController.php:                'controllerClass' => $this->crudControllerNamespace.'\\'.$name.'Controller',
year/gii/nodetest/commands/BatchController.php:                'viewPath' => $this->crudViewPath,
year/gii/nodetest/commands/BatchController.php:                'pathPrefix' => $this->crudPathPrefix,
year/gii/nodetest/commands/BatchController.php:                'tablePrefix' => $this->tablePrefix,
year/gii/nodetest/commands/BatchController.php:                'enableI18N' => $this->enableI18N,
year/gii/nodetest/commands/BatchController.php:                'singularEntities' => $this->singularEntities,
year/gii/nodetest/commands/BatchController.php:                'messageCategory' => $this->crudMessageCategory,
year/gii/nodetest/commands/BatchController.php:                'modelMessageCategory' => $this->modelMessageCategory,
year/gii/nodetest/commands/BatchController.php:                'baseControllerClass' => $this->crudBaseControllerClass,
year/gii/nodetest/commands/BatchController.php:                'skipRelations' => $this->crudSkipRelations,
year/gii/nodetest/commands/BatchController.php:                'accessFilter' => $this->crudAccessFilter,
year/gii/nodetest/commands/BatchController.php:                'baseTraits' => $this->crudBaseTraits,
year/gii/nodetest/commands/BatchController.php:                'tidyOutput' => $this->crudTidyOutput,
year/gii/nodetest/commands/BatchController.php:                'fixOutput' => $this->crudFixOutput,
year/gii/nodetest/commands/BatchController.php:                'template' => $this->crudTemplate,
year/gii/nodetest/commands/BatchController.php:                'indexWidgetType' => $this->crudIndexWidgetType,
year/gii/nodetest/commands/BatchController.php:                'indexGridClass' => $this->crudIndexGridClass,
year/gii/nodetest/commands/BatchController.php:            $temp = new \yii\console\Application($this->appConfig);
year/gii/dva/generators/model/default.v0/query.php:        $this->andWhere('[[status]]=1');
year/editor/XHEditor.php:        $this->id = $this->options['id'];
year/editor/XHEditor.php:        //  $this->view->registerJs($script);
year/editor/XHEditor.php:        XHEditorAssets::register($this->view);
year/editor/XHEditor.php:        $this->registerScripts();
year/editor/XHEditor.php:        if ($this->hasModel()) {
year/editor/XHEditor.php:            $textarea = Html::activeTextArea($this->model, $this->attribute, $this->options);
year/editor/XHEditor.php:            $textarea = Html::textArea($this->name, $this->value, $this->options);
year/editor/XHEditor.php:        $xhOptions =  Json::encode($this->clientOptions,JSON_FORCE_OBJECT);
year/editor/XHEditor.php:        $varName = Inflector::classify('editor' . $this->id);
year/editor/XHEditor.php:        $script = "var {$varName} = $('#{$this->id}').Xheditor({$xhOptions}); ";
year/editor/XHEditor.php:        $this->view->registerJs($script);
year/gii/common/widgets/JFileTree.php:       return $this->render('file-tree',[
year/gii/common/widgets/JFileTree.php:            'pubTopic'=>$this->pubTopic ,
year/gii/common/widgets/JFileTreeAsset.php:        if(empty($this->sourcePath)){
year/gii/common/widgets/JFileTreeAsset.php:            $this->sourcePath = __DIR__ .'/assets/jquery.fileTree-1.01' ;
year/gii/common/widgets/PathSelector.php:        if(empty($this->onSelection)) {
year/gii/common/widgets/PathSelector.php:            $this->onSelection = new JsExpression(
year/gii/common/widgets/PathSelector.php:             $this->onSelection = Json::htmlEncode($this->onSelection);
year/gii/common/widgets/PathSelector.php:        return $this->render('path-selector',[
year/gii/common/widgets/PathSelector.php:            'triggerSelector'=>$this->triggerSelector,
year/gii/common/widgets/PathSelector.php:            'from'=>empty($this->from)? 'default': $this->from ,
year/gii/common/widgets/views/path-selector.v0.php:$context = $this->context ;
year/gii/common/widgets/views/path-selector.v0.php:    // $this->registerJs($js);
year/gii/common/widgets/views/path-selector.php:$context = $this->context ;
year/gii/models/generators/gomodel/Generator.php:        if (empty($this->srcDir)) {
year/gii/models/generators/gomodel/Generator.php:            $this->srcDir = Yii::getAlias('@app/runtime')
year/gii/models/generators/gomodel/Generator.php://        if($this->getDbConnection() != null){
year/gii/models/generators/gomodel/Generator.php://            $this->dbTableNames = $this->getDbConnection()->getSchema()->getTableNames('',true) ;;
year/gii/models/generators/gomodel/Generator.php:        return $this->getDbConnection()->getSchema()->getTableNames('', true);;
year/gii/models/generators/gomodel/Generator.php:        // die($this->db) ;
year/gii/models/generators/gomodel/Generator.php:        $db = $this->getDbConnection();
year/gii/models/generators/gomodel/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/models/generators/gomodel/Generator.php:                ? $this->generateClassName($tableName)
year/gii/models/generators/gomodel/Generator.php:                : $this->modelClass;
year/gii/models/generators/gomodel/Generator.php:            $className = $this->generateClassName($tableName);
year/gii/models/generators/gomodel/Generator.php:                    ($this->srcDir), // FIXME  临时的 可以更改下 比如从UI选择
year/gii/models/generators/gomodel/Generator.php:                'labels' => $this->generateLabels($tableSchema),
year/gii/models/generators/gomodel/Generator.php:                'hints' => $this->generateHints($tableSchema),
year/gii/models/generators/gomodel/Generator.php:                'rules' => $this->generateRules($tableSchema),
year/gii/models/generators/gomodel/Generator.php:                'enum' => $this->getEnum($tableSchema->columns),
year/gii/models/generators/gomodel/Generator.php:                'properties' => $this->generateProperties($tableSchema),
year/gii/models/generators/gomodel/Generator.php:                'labels' => $this->generateLabels($tableSchema),
year/gii/models/generators/gomodel/Generator.php:                'searchConditions'=>$this->generateSearchConditions($tableSchema),
year/gii/models/generators/gomodel/Generator.php:                $this->render('model.go.php', $params)
year/gii/models/generators/gomodel/Generator.php:                    ($this->daoDir), // FIXME  临时的 可以更改下 比如从UI选择
year/gii/models/generators/gomodel/Generator.php:                $this->render('dao-mysql.go.php', $params)
year/gii/models/generators/gomodel/Generator.php:                    ($this->daoDir), // FIXME  临时的 可以更改下 比如从UI选择
year/gii/models/generators/gomodel/Generator.php:                $this->render('mux-routes.go.php', $params)
year/gii/models/generators/gomodel/Generator.php:                    ($this->daoDir), // FIXME  临时的 可以更改下 比如从UI选择
year/gii/models/generators/gomodel/Generator.php:                $this->render('handler.go.php', $params)
year/gii/models/generators/gomodel/Generator.php:                    ($this->srcDir), // FIXME  临时的 可以更改下 比如从UI选择
year/gii/models/generators/gomodel/Generator.php:                $this->render('model_search.go.php', $params)
year/gii/models/generators/gomodel/Generator.php:                    ($this->srcDir), // FIXME  临时的 可以更改下 比如从UI选择
year/gii/models/generators/gomodel/Generator.php:                $this->render('view-show.go.php', $params)
year/gii/models/generators/gomodel/Generator.php:        $driverName = $this->getDbDriverName();
year/gii/models/generators/gomodel/Generator.php:        $db = $this->getDbConnection();
year/gii/models/generators/gomodel/Generator.php:                if (!$this->isColumnAutoIncremental($table, $uniqueColumns)) {
year/gii/models/generators/gomodel/Generator.php:                $goField = $this->genGoStructField($column);
year/gii/models/generators/gomodel/Generator.php://                    $likeKeyword = $this->getClassDbDriverName() === 'pgsql' ? 'ilike' : 'like';
year/gii/models/generators/gomodel/Generator.php://                    $likeConditions[] = "->andFilterWhere(['{$likeKeyword}', '{$column}', \$this->{$column}])";
year/gii/models/generators/gomodel/Generator.php:        $db = $this->getDbConnection();
year/gii/models/generators/gomodel/Generator.php:        $routes = $this->render('mux-routes.go.php', [
year/gii/models/generators/gomodel/Generator.php:        $routePath = Inflector::camel2id(StringHelper::basename($this->modelClass));
year/gii/yunying4java/FileTreeController.php:                return $this->asJson($rslt) ;
year/gii/yunying4java/FileTreeController.php:        // return $this->renderContent( 'hi') ;
year/gii/yunying4java/FileTreeController.php:       // return  $this->renderContent('hello');
year/gii/yunying4java/widgets/views/path-selector.php:$context = $this->context ;
year/gii/yunying4java/widgets/views/path-selector.php:    // $this->registerJs($js);
year/gii/yunying4java/generators/model/form.php://$this->registerJs(SaveForm::getSavedFormsJs($generator->getName()), yii\web\View::POS_END);
year/gii/yunying4java/generators/model/form.php://$this->registerJs(SaveForm::jsFillForm(), yii\web\View::POS_END);
year/gii/yunying4java/generators/test/Generator.php:        $labels = $this->generateLabels($table);
year/gii/yunying4java/generators/test/Generator.php:       // $relations = $this->generateRelations();
year/gii/yunying4java/generators/test/Generator.php:        $db = $this->getDbConnection();
year/gii/yunying4java/generators/test/Generator.php:        $class = $this->modelNs.$this->modelClass;
year/gii/yunying4java/generators/test/Generator.php:        $this->tableName = $class::$classTableNameMethod();
year/gii/yunying4java/generators/test/Generator.php:        //if($this->searchModelClass !=="")
year/gii/yunying4java/generators/test/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/yunying4java/generators/test/Generator.php:            $className = $this->generateClassName($tableName);
year/gii/yunying4java/generators/test/Generator.php:                'modelClass' => $this->modelClass,
year/gii/yunying4java/generators/test/Generator.php:                'controllerClass' => $this->controllerClass,
year/gii/yunying4java/generators/test/Generator.php:                'labels' => $this->generateLabels($tableSchema),
year/gii/yunying4java/generators/test/Generator.php:                'rules' => $this->generateRules($tableSchema),
year/gii/yunying4java/generators/test/Generator.php:                'attributes' => $this->generateAttributes($tableSchema),
year/gii/yunying4java/generators/test/Generator.php:                'ns' => $this->ns,
year/gii/yunying4java/generators/test/Generator.php:                Yii::getAlias('@app/..'.$this->codeceptionPath.str_replace('\\', '/', $this->ns)).'/'.$className.$this->baseClassSuffix.'UnitTest.php',
year/gii/yunying4java/generators/test/Generator.php:                $this->render('unit.php', $params)
year/gii/yunying4java/generators/crud/Generator.php:        if(empty($this->podPath)){
year/gii/yunying4java/generators/crud/Generator.php:            $this->podPath = Config::getProjectHome().DIRECTORY_SEPARATOR.'pods'.DIRECTORY_SEPARATOR.'__your_pod_id__' ;
year/gii/yunying4java/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying4java/generators/crud/Generator.php:            $this->addError('modelClass', "The table associated with $class must have primary key(s).");
year/gii/yunying4java/generators/crud/Generator.php:            $this->podPath,
year/gii/yunying4java/generators/crud/Generator.php:            Inflector::camel2id($this->interactorName.'Interactor','_').'.go'
year/gii/yunying4java/generators/crud/Generator.php:            new CodeFile($interactorFile, $this->render('interactor.go.php')),
year/gii/yunying4java/generators/crud/Generator.php:        if (!empty($this->searchModelClass)) {
year/gii/yunying4java/generators/crud/Generator.php:            $searchModel = Yii::getAlias('@' . str_replace('\\', '/', ltrim($this->searchModelClass, '\\') . '.php'));
year/gii/yunying4java/generators/crud/Generator.php:            $files[] = new CodeFile($searchModel, $this->render('search.php'));
year/gii/yunying4java/generators/crud/Generator.php:        $viewPath = $this->getViewPath();
year/gii/yunying4java/generators/crud/Generator.php:        $templatePath = $this->getTemplatePath() . '/views';
year/gii/yunying4java/generators/crud/Generator.php:            if (empty($this->searchModelClass) && $file === '_search.php') {
year/gii/yunying4java/generators/crud/Generator.php:                $files[] = new CodeFile("$viewPath/$file", $this->render("views/$file"));
year/gii/yunying4java/generators/crud/Generator.php:        $pos = strrpos($this->controllerClass, '\\');
year/gii/yunying4java/generators/crud/Generator.php:        $class = substr(substr($this->controllerClass, $pos + 1), 0, -10);
year/gii/yunying4java/generators/crud/Generator.php:        if (empty($this->viewPath)) {
year/gii/yunying4java/generators/crud/Generator.php:            return Yii::getAlias('@app/views/' . $this->getControllerID());
year/gii/yunying4java/generators/crud/Generator.php:            return Yii::getAlias(str_replace('\\', '/', $this->viewPath));
year/gii/yunying4java/generators/crud/Generator.php:        foreach ($this->getColumnNames() as $name) {
year/gii/yunying4java/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying4java/generators/crud/Generator.php:        $tableSchema = $this->getTableSchema();
year/gii/yunying4java/generators/crud/Generator.php:        $tableSchema = $this->getTableSchema();
year/gii/yunying4java/generators/crud/Generator.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/yunying4java/generators/crud/Generator.php:            return ["[['" . implode("', '", $this->getColumnNames()) . "'], 'safe']"];
year/gii/yunying4java/generators/crud/Generator.php:        return $this->getColumnNames();
year/gii/yunying4java/generators/crud/Generator.php:        $model = new $this->modelClass();
year/gii/yunying4java/generators/crud/Generator.php:        foreach ($this->getColumnNames() as $name) {
year/gii/yunying4java/generators/crud/Generator.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/yunying4java/generators/crud/Generator.php:            $class = $this->modelClass;
year/gii/yunying4java/generators/crud/Generator.php:                    $hashConditions[] = "'{$column}' => \$this->{$column},";
year/gii/yunying4java/generators/crud/Generator.php:                    $likeKeyword = $this->getClassDbDriverName() === 'pgsql' ? 'ilike' : 'like';
year/gii/yunying4java/generators/crud/Generator.php:                    $likeConditions[] = "->andFilterWhere(['{$likeKeyword}', '{$column}', \$this->{$column}])";                    
year/gii/yunying4java/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying4java/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying4java/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying4java/generators/crud/Generator.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/yunying4java/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying4java/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying4java/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/yunying4java/generators/crud/Generator.php:        if (!is_dir($this->podPath)) {
year/gii/yunying4java/generators/crud/Generator.php:            $this->addError('podPath', ' please check the pod path which should exists： ' . $this->podPath);
year/gii/yunying4java/generators/pod/form.php: // $this->registerJs($js);
year/gii/yunying4java/generators/pod/Generator.php:        if (trim($this->getProjectHome()) != '') {
year/gii/yunying4java/generators/pod/Generator.php:            $this->podsPath =  $this->getProjectHome().'\pods';
year/gii/yunying4java/generators/pod/Generator.php:        $modulePath = $this->podsPath;
year/gii/yunying4java/generators/pod/Generator.php:        $podPath = $this->podsPath.'/'.$this->podID;
year/gii/yunying4java/generators/pod/Generator.php:            $this->render("readme.md.php")
year/gii/yunying4java/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/yunying4java/generators/pod/Generator.php:            $this->render("adapter-gin-init.go.php")
year/gii/yunying4java/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/yunying4java/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/yunying4java/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/yunying4java/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/yunying4java/generators/pod/Generator.php:        if (!file_exists($this->podsPath)) {
year/gii/yunying4java/generators/pod/Generator.php:            $this->addError('podsPath', ' please check the pods path which should must exists： ' . $this->podsPath);
year/gii/yunying4java/generators/api/Generator.php:             $this->apiPath,
year/gii/yunying4java/generators/api/Generator.php:             $this->modelClass . '.js',
year/gii/yunying4java/generators/api/Generator.php:            new CodeFile($apiServiceFile, $this->render('service.js.php',[
year/gii/yunying4java/generators/api/Generator.php:                'serviceName'=>$this->generateClassName($this->tableName),
year/gii/yunying4java/generators/api/Generator.php:            $this->podPath,
year/gii/yunying4java/generators/api/Generator.php:            $this->podId,
year/gii/yunying4java/generators/api/Generator.php:        $files[]  =   new CodeFile($routesFile, $this->render('routes.go.php')) ;
year/gii/yunying4java/generators/api/Generator.php:        if (!empty($this->tableName)){
year/gii/yunying4java/generators/api/Generator.php:                $this->podPath,
year/gii/yunying4java/generators/api/Generator.php:                $this->podId,
year/gii/yunying4java/generators/api/Generator.php:                $this->controllerType.'.go',
year/gii/yunying4java/generators/api/Generator.php:               // 'fieldsInfo'=>$this->generateProperties($this->getTableSchema()),
year/gii/yunying4java/generators/api/Generator.php:            $files[]  =   new CodeFile($docFile, $this->render('docs.go.php',$params)) ;
year/gii/yunying4java/generators/api/Generator.php:        $return = $this->render('routes.go.php');
year/gii/yunying4java/generators/api/Generator.php:        if (!is_dir($this->apiPath)) {
year/gii/yunying4java/generators/api/Generator.php:            $this->addError('apiPath', ' please check the dir path which should exists： ' . $this->apiPath);
year/gii/yunying4java/generators/pod/form.v0.php: // $this->registerJs($js);
year/gii/yunying4java/generators/api/Generator.v0.php:        $db = $this->getDbConnection();
year/gii/yunying4java/generators/api/Generator.v0.php:        return Yii::$app->get($this->db, false);
year/gii/yunying4java/generators/api/Generator.v0.php:        if(empty($this->podPath)){
year/gii/yunying4java/generators/api/Generator.v0.php://        //   $this->podPath = Config::getProjectHome().DIRECTORY_SEPARATOR.'pods'.DIRECTORY_SEPARATOR.'__your_pod_id__' ;
year/gii/yunying4java/generators/api/Generator.v0.php://            $this->podPath = implode(DIRECTORY_SEPARATOR ,[
year/gii/yunying4java/generators/api/Generator.v0.php:            $this->podPath,
year/gii/yunying4java/generators/api/Generator.v0.php:            $this->podId,
year/gii/yunying4java/generators/api/Generator.v0.php:            $this->controllerType.'.go',
year/gii/yunying4java/generators/api/Generator.v0.php:        $interactorFile =  $this->getControllerFile();
year/gii/yunying4java/generators/api/Generator.v0.php:            new CodeFile($interactorFile, $this->render('controller.go.php')),
year/gii/yunying4java/generators/api/Generator.v0.php:            $this->podPath,
year/gii/yunying4java/generators/api/Generator.v0.php:            $this->podId,
year/gii/yunying4java/generators/api/Generator.v0.php:        $files[]  =   new CodeFile($routesFile, $this->render('routes.go.php')) ;
year/gii/yunying4java/generators/api/Generator.v0.php:        if (!empty($this->tableName)){
year/gii/yunying4java/generators/api/Generator.v0.php:                $this->podPath,
year/gii/yunying4java/generators/api/Generator.v0.php:                $this->podId,
year/gii/yunying4java/generators/api/Generator.v0.php:                $this->controllerType.'.go',
year/gii/yunying4java/generators/api/Generator.v0.php:               // 'fieldsInfo'=>$this->generateProperties($this->getTableSchema()),
year/gii/yunying4java/generators/api/Generator.v0.php:            $files[]  =   new CodeFile($docFile, $this->render('docs.go.php',$params)) ;
year/gii/yunying4java/generators/api/Generator.v0.php:        if (!empty($this->searchModelClass)) {
year/gii/yunying4java/generators/api/Generator.v0.php:            $searchModel = Yii::getAlias('@' . str_replace('\\', '/', ltrim($this->searchModelClass, '\\') . '.php'));
year/gii/yunying4java/generators/api/Generator.v0.php:            $files[] = new CodeFile($searchModel, $this->render('search.php'));
year/gii/yunying4java/generators/api/Generator.v0.php:        $viewPath = $this->getViewPath();
year/gii/yunying4java/generators/api/Generator.v0.php:        $templatePath = $this->getTemplatePath() . '/views';
year/gii/yunying4java/generators/api/Generator.v0.php:            if (empty($this->searchModelClass) && $file === '_search.php') {
year/gii/yunying4java/generators/api/Generator.v0.php:                $files[] = new CodeFile("$viewPath/$file", $this->render("views/$file"));
year/gii/yunying4java/generators/api/Generator.v0.php:        $return = $this->render('routes.go.php');
year/gii/yunying4java/generators/api/Generator.v0.php:        $pos = strrpos($this->controllerClass, '\\');
year/gii/yunying4java/generators/api/Generator.v0.php:        $class = substr(substr($this->controllerClass, $pos + 1), 0, -10);
year/gii/yunying4java/generators/api/Generator.v0.php:        foreach ($this->getColumnNames() as $name) {
year/gii/yunying4java/generators/api/Generator.v0.php:        $class = $this->modelClass;
year/gii/yunying4java/generators/api/Generator.v0.php:        $class = $this->modelClass;
year/gii/yunying4java/generators/api/Generator.v0.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/yunying4java/generators/api/Generator.v0.php:       return   $this->getDbConnection()->getTableSchema($this->tableName) ;
year/gii/yunying4java/generators/api/Generator.v0.php:        $ts =  $this->getTableSchema() ;
year/gii/yunying4java/generators/api/Generator.v0.php:            $this->addError('tableName', "Table '{$this->tableName}' does not exist.");
year/gii/yunying4java/generators/api/Generator.v0.php:        if (!is_dir($this->podPath)) {
year/gii/yunying4java/generators/api/Generator.v0.php:            $this->addError('podPath', ' please check the pod path which should exists： ' . $this->podPath);
year/gii/yunying4java/generators/model/Generator.php:        if (empty($this->srcDir)) {
year/gii/yunying4java/generators/model/Generator.php:            $this->srcDir = dirname(Yii::$app->basePath)
year/gii/yunying4java/generators/model/Generator.php:            $this->srcDir = sys_get_temp_dir() ;
year/gii/yunying4java/generators/model/Generator.php:        $db = $this->getDbConnection();
year/gii/yunying4java/generators/model/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/yunying4java/generators/model/Generator.php:                ? $this->generateClassName($tableName)
year/gii/yunying4java/generators/model/Generator.php:                : $this->modelClass;
year/gii/yunying4java/generators/model/Generator.php:            $queryClassName = ($this->generateQuery) ? $this->generateQueryClassName($className) : false;
year/gii/yunying4java/generators/model/Generator.php:                'properties' => $this->generateProperties($tableSchema),
year/gii/yunying4java/generators/model/Generator.php:                'labels' => $this->generateLabels($tableSchema),
year/gii/yunying4java/generators/model/Generator.php:                'hints' => $this->generateHints($tableSchema),
year/gii/yunying4java/generators/model/Generator.php:                 'rules' => $this->generateRules($tableSchema),
year/gii/yunying4java/generators/model/Generator.php:                // 'searchModelRules' => $this->generateRules2($tableSchema, true),
year/gii/yunying4java/generators/model/Generator.php:                'enum' => $this->getEnum($tableSchema->columns),
year/gii/yunying4java/generators/model/Generator.php:          //    $params['timestamp'] = $this->generateTimestamp($tableSchema);
year/gii/yunying4java/generators/model/Generator.php:            if(! $this->generateModelDir){
year/gii/yunying4java/generators/model/Generator.php:                $this->srcDir,
year/gii/yunying4java/generators/model/Generator.php:                $this->render('model.java.php', $params)
year/gii/yunying4java/generators/model/Generator.php:                $this->srcDir,
year/gii/yunying4java/generators/model/Generator.php:                $this->render('model-search.go.php', $params)
year/gii/yunying4java/generators/model/Generator.php:            $modelClassFile = Yii::getAlias('@' . str_replace('\\', '/', $this->ns)) . '/' . $className . '.php';
year/gii/yunying4java/generators/model/Generator.php:            if ($this->generateModelClass || !is_file($modelClassFile)) {
year/gii/yunying4java/generators/model/Generator.php:                    $this->render('model-extended.php', $params)
year/gii/yunying4java/generators/model/Generator.php:                        '@'.str_replace('\\', '/', $this->queryNs)
year/gii/yunying4java/generators/model/Generator.php:                if ($this->generateModelClass || !is_file($queryClassFile)) {
year/gii/yunying4java/generators/model/Generator.php:                        $this->render('query.php', $params)
year/gii/yunying4java/generators/model/Generator.php:            $suffix = str_replace(' ', '', $this->getName());
year/gii/yunying4java/generators/model/Generator.php:            $formDataDir = Yii::getAlias('@'.str_replace('\\', '/', $this->ns));
year/gii/yunying4java/generators/model/Generator.php:            $formData = json_encode(SaveForm::getFormAttributesValues($this, $this->formAttributes()));
year/gii/yunying4java/generators/model/Generator.php:        $routePath = Inflector::camel2id(StringHelper::basename($this->modelClass));
year/gii/yunying4java/generators/model/Generator.php:        $driverName = $this->getDbDriverName();
year/gii/yunying4java/generators/model/Generator.php:        $db = $this->getDbConnection();
year/gii/yunying4java/generators/model/Generator.php:                if (!$this->isColumnAutoIncremental($table, $uniqueColumns)) {
year/gii/yunying4java/generators/model/Generator.php:            $refClassName = $this->generateClassName($refTable);
year/gii/yunying4java/generators/model/Generator.php:        $driverName = $this->getDbDriverName();
year/gii/yunying4java/generators/model/Generator.php:        $db = $this->getDbConnection();
year/gii/yunying4java/generators/model/Generator.php:                if (!$this->isColumnAutoIncremental($table, $uniqueColumns)) {
year/gii/yunying4java/commands/BatchController.php:        $this->appConfig = $this->getYiiConfiguration();
year/gii/yunying4java/commands/BatchController.php:        $this->appConfig['id'] = 'temp';
year/gii/yunying4java/commands/BatchController.php:        $this->modelGenerator = new ModelGenerator(['db' => $this->modelDb]);
year/gii/yunying4java/commands/BatchController.php:        if (!$this->tables) {
year/gii/yunying4java/commands/BatchController.php:            $this->modelGenerator->tableName = '*';
year/gii/yunying4java/commands/BatchController.php:            $this->tables = $this->modelGenerator->getTableNames();
year/gii/yunying4java/commands/BatchController.php:            $tableList = implode("\n\t- ", $this->tables);
year/gii/yunying4java/commands/BatchController.php:            if (!$this->confirm($msg)) {
year/gii/yunying4java/commands/BatchController.php:        $this->actionModels();
year/gii/yunying4java/commands/BatchController.php:        $this->actionCruds();
year/gii/yunying4java/commands/BatchController.php:        foreach ($this->tables as $table) {
year/gii/yunying4java/commands/BatchController.php:            //var_dump($this->tableNameMap, $table);exit;
year/gii/yunying4java/commands/BatchController.php:                'interactive' => $this->interactive,
year/gii/yunying4java/commands/BatchController.php:                'overwrite' => $this->overwrite,
year/gii/yunying4java/commands/BatchController.php:                'useTranslatableBehavior' => $this->useTranslatableBehavior,
year/gii/yunying4java/commands/BatchController.php:                'useTimestampBehavior' => $this->useTimestampBehavior,
year/gii/yunying4java/commands/BatchController.php:                'languageTableName' => $this->languageTableName,
year/gii/yunying4java/commands/BatchController.php:                'languageCodeColumn' => $this->languageCodeColumn,
year/gii/yunying4java/commands/BatchController.php:                'template' => $this->template,
year/gii/yunying4java/commands/BatchController.php:                'ns' => $this->modelNamespace,
year/gii/yunying4java/commands/BatchController.php:                'db' => $this->modelDb,
year/gii/yunying4java/commands/BatchController.php:                'tablePrefix' => $this->tablePrefix,
year/gii/yunying4java/commands/BatchController.php:                'enableI18N' => $this->enableI18N,
year/gii/yunying4java/commands/BatchController.php:                'singularEntities' => $this->singularEntities,
year/gii/yunying4java/commands/BatchController.php:                'messageCategory' => $this->modelMessageCategory,
year/gii/yunying4java/commands/BatchController.php:                'generateModelClass' => $this->extendedModels,
year/gii/yunying4java/commands/BatchController.php:                'baseClassSuffix' => $this->modelBaseClassSuffix,
year/gii/yunying4java/commands/BatchController.php:                'modelClass' => isset($this->tableNameMap[$table]) ?
year/gii/yunying4java/commands/BatchController.php:                    $this->tableNameMap[$table] :
year/gii/yunying4java/commands/BatchController.php:                'baseClass' => $this->modelBaseClass,
year/gii/yunying4java/commands/BatchController.php:                'baseTraits' => $this->modelBaseTraits,
year/gii/yunying4java/commands/BatchController.php:                'removeDuplicateRelations' => $this->modelRemoveDuplicateRelations,
year/gii/yunying4java/commands/BatchController.php:                'tableNameMap' => $this->tableNameMap,
year/gii/yunying4java/commands/BatchController.php:                'generateQuery' => $this->modelGenerateQuery,
year/gii/yunying4java/commands/BatchController.php:                'queryNs' => $this->modelQueryNamespace,
year/gii/yunying4java/commands/BatchController.php:                'queryBaseClass' => $this->modelQueryBaseClass,
year/gii/yunying4java/commands/BatchController.php:                'generateLabelsFromComments' => $this->modelGenerateLabelsFromComments,
year/gii/yunying4java/commands/BatchController.php:                'generateHintsFromComments' => $this->modelGenerateHintsFromComments,
year/gii/yunying4java/commands/BatchController.php:            $temp = new \yii\console\Application($this->appConfig);
year/gii/yunying4java/commands/BatchController.php:        $providers = ArrayHelper::merge($this->crudProviders, Generator::getCoreProviders());
year/gii/yunying4java/commands/BatchController.php:        $this->createDirectoryFromNamespace($this->crudControllerNamespace);
year/gii/yunying4java/commands/BatchController.php:        $this->createDirectoryFromNamespace($this->crudSearchModelNamespace);
year/gii/yunying4java/commands/BatchController.php:        foreach ($this->tables as $table) {
year/gii/yunying4java/commands/BatchController.php:            $table = str_replace($this->tablePrefix, '', $table);
year/gii/yunying4java/commands/BatchController.php:            $name = isset($this->tableNameMap[$table]) ? $this->tableNameMap[$table] :
year/gii/yunying4java/commands/BatchController.php:                $this->modelGenerator->generateClassName($table);
year/gii/yunying4java/commands/BatchController.php:                'interactive' => $this->interactive,
year/gii/yunying4java/commands/BatchController.php:                'overwrite' => $this->overwrite,
year/gii/yunying4java/commands/BatchController.php:                'template' => $this->template,
year/gii/yunying4java/commands/BatchController.php:                'modelClass' => $this->modelNamespace.'\\'.$name,
year/gii/yunying4java/commands/BatchController.php:                'searchModelClass' => $this->crudSearchModelNamespace.'\\'.$name.$this->crudSearchModelSuffix,
year/gii/yunying4java/commands/BatchController.php:                'controllerNs' => $this->crudControllerNamespace,
year/gii/yunying4java/commands/BatchController.php:                'controllerClass' => $this->crudControllerNamespace.'\\'.$name.'Controller',
year/gii/yunying4java/commands/BatchController.php:                'viewPath' => $this->crudViewPath,
year/gii/yunying4java/commands/BatchController.php:                'pathPrefix' => $this->crudPathPrefix,
year/gii/yunying4java/commands/BatchController.php:                'tablePrefix' => $this->tablePrefix,
year/gii/yunying4java/commands/BatchController.php:                'enableI18N' => $this->enableI18N,
year/gii/yunying4java/commands/BatchController.php:                'singularEntities' => $this->singularEntities,
year/gii/yunying4java/commands/BatchController.php:                'messageCategory' => $this->crudMessageCategory,
year/gii/yunying4java/commands/BatchController.php:                'modelMessageCategory' => $this->modelMessageCategory,
year/gii/yunying4java/commands/BatchController.php:                'baseControllerClass' => $this->crudBaseControllerClass,
year/gii/yunying4java/commands/BatchController.php:                'skipRelations' => $this->crudSkipRelations,
year/gii/yunying4java/commands/BatchController.php:                'accessFilter' => $this->crudAccessFilter,
year/gii/yunying4java/commands/BatchController.php:                'baseTraits' => $this->crudBaseTraits,
year/gii/yunying4java/commands/BatchController.php:                'tidyOutput' => $this->crudTidyOutput,
year/gii/yunying4java/commands/BatchController.php:                'fixOutput' => $this->crudFixOutput,
year/gii/yunying4java/commands/BatchController.php:                'template' => $this->crudTemplate,
year/gii/yunying4java/commands/BatchController.php:                'indexWidgetType' => $this->crudIndexWidgetType,
year/gii/yunying4java/commands/BatchController.php:                'indexGridClass' => $this->crudIndexGridClass,
year/gii/yunying4java/commands/BatchController.php:            $temp = new \yii\console\Application($this->appConfig);
year/gii/yunying4java/generators/crud/default/search.php:        $this->load($params);
year/gii/yunying4java/generators/crud/default/search.php:        if (!$this->validate()) {
year/gii/yunying4java/generators/test/default/unit.php:        if($this->modelPK != null){
year/gii/yunying4java/generators/test/default/unit.php:            $cls = $this->class;
year/gii/yunying4java/generators/test/default/unit.php:            $model = $cls::findOne($this->modelPK);
year/gii/yunying4java/generators/test/default/unit.php:        $model = $this->newModelInstance();
year/gii/yunying4java/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be created', function () use ($model) {
year/gii/yunying4java/generators/test/default/unit.php:        $model = $this->newModelInstance();
year/gii/yunying4java/generators/test/default/unit.php:        if(!$model->save($this->isModelValidationEnabled)){
year/gii/yunying4java/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/yunying4java/generators/test/default/unit.php:        $this->modelPK = $model-><?php echo PKAttributeName($attributes); ?>;
year/gii/yunying4java/generators/test/default/unit.php:        $reloadedModel = $this->loadModelById($this->modelPK);
year/gii/yunying4java/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be saved', function () use ($reloadedModel, $model) {
year/gii/yunying4java/generators/test/default/unit.php:        $this->assertNotEmpty($model-><?php echo PKAttributeName($attributes); ?>);
year/gii/yunying4java/generators/test/default/unit.php:        $originalModel = $this->newModelInstance();
year/gii/yunying4java/generators/test/default/unit.php:        if(!$originalModel->save($this->isModelValidationEnabled)){
year/gii/yunying4java/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/yunying4java/generators/test/default/unit.php:        $this->modelPK = $originalModel-><?php echo PKAttributeName($attributes); ?>;
year/gii/yunying4java/generators/test/default/unit.php:        $updatedModel-><?php echo $attr['name'] ?> = $this->updateAttributeValue($originalModel-><?php echo $attr['name'] ?>, '<?php echo $attr['name'] ?>', '<?php echo $attr['type'] ?>');
year/gii/yunying4java/generators/test/default/unit.php:        if(!$updatedModel->save($this->isModelValidationEnabled)){
year/gii/yunying4java/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/yunying4java/generators/test/default/unit.php:        $reloadedModel = $this->loadModelById($this->modelPK);
year/gii/yunying4java/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be updated', function () use ($reloadedModel, $updatedModel) {
year/gii/yunying4java/generators/test/default/unit.php:        $model = $this->newModelInstance();
year/gii/yunying4java/generators/test/default/unit.php:        if(!$model->save($this->isModelValidationEnabled)){
year/gii/yunying4java/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/yunying4java/generators/test/default/unit.php:        $this->modelPK = $model-><?php echo PKAttributeName($attributes); ?>;
year/gii/yunying4java/generators/test/default/unit.php:        $model = $this->loadModelById($this->modelPK);
year/gii/yunying4java/generators/test/default/unit.php:        $deletedModel = $this->loadModelById($this->modelPK);
year/gii/yunying4java/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be deleted', function () use ($deletedModel) {
year/gii/yunying4java/generators/test/default/unit.php:            expect($this->modelName.' model was deleted', $deletedModel)->equals(null);
year/gii/yunying4java/generators/test/default/unit.php:        $r = new \ReflectionClass($this->class);
year/gii/yunying4java/generators/test/default/unit.php:        $r = new \ReflectionClass($this->class);
year/gii/yunying4java/generators/crud/default/views/update.php:$this->title = <?= $generator->generateString('Update {modelClass}: ', ['modelClass' => Inflector::camel2words(StringHelper::basename($generator->modelClass))]) ?> . $model-><?= $generator->getNameAttribute() ?>;
year/gii/yunying4java/generators/crud/default/views/update.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
year/gii/yunying4java/generators/crud/default/views/update.php:$this->params['breadcrumbs'][] = ['label' => $model-><?= $generator->getNameAttribute() ?>, 'url' => ['view', <?= $urlParams ?>]];
year/gii/yunying4java/generators/crud/default/views/update.php:$this->params['breadcrumbs'][] = <?= $generator->generateString('Update') ?>;
year/gii/yunying4java/generators/crud/default/views/update.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
year/gii/yunying4java/generators/crud/default/views/update.php:    <?= "<?= " ?>$this->render('_form', [
year/gii/yunying4java/generators/crud/default/views/view.php:$this->title = $model-><?= $generator->getNameAttribute() ?>;
year/gii/yunying4java/generators/crud/default/views/view.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
year/gii/yunying4java/generators/crud/default/views/view.php:$this->params['breadcrumbs'][] = $this->title;
year/gii/yunying4java/generators/crud/default/views/view.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
year/gii/yunying4java/generators/crud/default/controller.php:        return $this->render('index', [
year/gii/yunying4java/generators/crud/default/controller.php:        return $this->render('index', [
year/gii/yunying4java/generators/crud/default/controller.php:        return $this->render('view', [
year/gii/yunying4java/generators/crud/default/controller.php:            'model' => $this->findModel(<?= $actionParams ?>),
year/gii/yunying4java/generators/crud/default/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
year/gii/yunying4java/generators/crud/default/controller.php:            return $this->render('create', [
year/gii/yunying4java/generators/crud/default/controller.php:        $model = $this->findModel(<?= $actionParams ?>);
year/gii/yunying4java/generators/crud/default/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
year/gii/yunying4java/generators/crud/default/controller.php:            return $this->render('update', [
year/gii/yunying4java/generators/crud/default/controller.php:        $this->findModel(<?= $actionParams ?>)->delete();
year/gii/yunying4java/generators/crud/default/controller.php:        return $this->redirect(['index']);
year/gii/yunying4java/generators/crud/default/views/index.php:$this->title = <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>;
year/gii/yunying4java/generators/crud/default/views/index.php:$this->params['breadcrumbs'][] = $this->title;
year/gii/yunying4java/generators/crud/default/views/index.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
year/gii/yunying4java/generators/crud/default/views/index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? "// " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
year/gii/yunying4java/generators/crud/default/views/create.php:$this->title = <?= $generator->generateString('Create ' . Inflector::camel2words(StringHelper::basename($generator->modelClass))) ?>;
year/gii/yunying4java/generators/crud/default/views/create.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
year/gii/yunying4java/generators/crud/default/views/create.php:$this->params['breadcrumbs'][] = $this->title;
year/gii/yunying4java/generators/crud/default/views/create.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
year/gii/yunying4java/generators/crud/default/views/create.php:    <?= "<?= " ?>$this->render('_form', [
year/gii/yunying4java/widgets/JFileTreeAsset.php:        if(empty($this->sourcePath)){
year/gii/yunying4java/widgets/JFileTreeAsset.php:            $this->sourcePath = __DIR__ .'/assets/jquery.fileTree-1.01' ;
year/gii/yunying4java/widgets/PathSelector.php:        if(empty($this->onSelection)) {
year/gii/yunying4java/widgets/PathSelector.php:            $this->onSelection = new JsExpression(
year/gii/yunying4java/widgets/PathSelector.php:             $this->onSelection = Json::htmlEncode($this->onSelection);
year/gii/yunying4java/widgets/PathSelector.php:        return $this->render('path-selector',[
year/gii/models/generators/gomodel/form.php://$this->registerJs(SaveForm::getSavedFormsJs($generator->getName()), yii\web\View::POS_END);
year/gii/models/generators/gomodel/form.php://$this->registerJs(SaveForm::jsFillForm(), yii\web\View::POS_END);
year/gii/yunying4java/utils/fs.php:        if($this->base && strlen($this->base)) {
year/gii/yunying4java/utils/fs.php:            if(strpos($temp, $this->base) !== 0) { throw new Exception('Path is not inside base ('.$this->base.'): ' . $temp); }
year/gii/yunying4java/utils/fs.php:        $id = $this->real($this->base . DIRECTORY_SEPARATOR . $id);
year/gii/yunying4java/utils/fs.php:        $path = $this->real($path);
year/gii/yunying4java/utils/fs.php:        $path = substr($path, strlen($this->base));
year/gii/yunying4java/utils/fs.php:        $this->base = $this->real($base);
year/gii/yunying4java/utils/fs.php:        if(!$this->base) { throw new Exception('Base directory does not exist'); }
year/gii/yunying4java/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying4java/utils/fs.php:                $res[] = array('text' => $item, 'children' => true,  'id' => $this->id($dir . DIRECTORY_SEPARATOR . $item), 'icon' => 'folder');
year/gii/yunying4java/utils/fs.php:                $res[] = array('text' => $item, 'children' => false, 'id' => $this->id($dir . DIRECTORY_SEPARATOR . $item), 'type' => 'file', 'icon' => 'file file-'.substr($item, strrpos($item,'.') + 1));
year/gii/yunying4java/utils/fs.php:        if($with_root && $this->id($dir) === '/') {
year/gii/yunying4java/utils/fs.php:            $res = array(array('text' => basename($this->base), 'children' => $res, 'id' => '/', 'icon'=>'folder', 'state' => array('opened' => true, 'disabled' => true)));
year/gii/yunying4java/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying4java/utils/fs.php:                    $dat['content'] = 'File not recognized: '.$this->id($dir);
year/gii/yunying4java/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying4java/utils/fs.php:        return array('id' => $this->id($dir . DIRECTORY_SEPARATOR . $name));
year/gii/yunying4java/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying4java/utils/fs.php:        if($dir === $this->base) {
year/gii/yunying4java/utils/fs.php:        return array('id' => $this->id($new));
year/gii/yunying4java/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying4java/utils/fs.php:        if($dir === $this->base) {
year/gii/yunying4java/utils/fs.php:                $this->remove($this->id($dir . DIRECTORY_SEPARATOR . $f));
year/gii/yunying4java/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying4java/utils/fs.php:        $par = $this->path($par);
year/gii/yunying4java/utils/fs.php:        return array('id' => $this->id($new));
year/gii/yunying4java/utils/fs.php:        $dir = $this->path($id);
year/gii/yunying4java/utils/fs.php:        $par = $this->path($par);
year/gii/yunying4java/utils/fs.php:                $this->copy($this->id($dir . DIRECTORY_SEPARATOR . $f), $this->id($new));
year/gii/yunying4java/utils/fs.php:        return array('id' => $this->id($new));
year/gii/goodmall/generators/api/Generator.php:        $db = $this->getDbConnection();
year/gii/goodmall/generators/api/Generator.php:        return Yii::$app->get($this->db, false);
year/gii/goodmall/generators/api/Generator.php:        if(empty($this->podPath)){
year/gii/goodmall/generators/api/Generator.php:        //   $this->podPath = Config::getProjectHome().DIRECTORY_SEPARATOR.'pods'.DIRECTORY_SEPARATOR.'__your_pod_id__' ;
year/gii/goodmall/generators/api/Generator.php:            $this->podPath = implode(DIRECTORY_SEPARATOR ,[
year/gii/goodmall/generators/api/Generator.php:            $this->podPath,
year/gii/goodmall/generators/api/Generator.php:            $this->podId,
year/gii/goodmall/generators/api/Generator.php:            $this->controllerType.'.go',
year/gii/goodmall/generators/api/Generator.php:        $interactorFile =  $this->getControllerFile();
year/gii/goodmall/generators/api/Generator.php:            new CodeFile($interactorFile, $this->render('controller.go.php')),
year/gii/goodmall/generators/api/Generator.php:            $this->podPath,
year/gii/goodmall/generators/api/Generator.php:            $this->podId,
year/gii/goodmall/generators/api/Generator.php:        $files[]  =   new CodeFile($routesFile, $this->render('routes.go.php')) ;
year/gii/goodmall/generators/api/Generator.php:        if (!empty($this->tableName)){
year/gii/goodmall/generators/api/Generator.php:                $this->podPath,
year/gii/goodmall/generators/api/Generator.php:                $this->podId,
year/gii/goodmall/generators/api/Generator.php:                $this->controllerType.'.go',
year/gii/goodmall/generators/api/Generator.php:               // 'fieldsInfo'=>$this->generateProperties($this->getTableSchema()),
year/gii/goodmall/generators/api/Generator.php:            $files[]  =   new CodeFile($docFile, $this->render('docs.go.php',$params)) ;
year/gii/goodmall/generators/api/Generator.php:        if (!empty($this->searchModelClass)) {
year/gii/goodmall/generators/api/Generator.php:            $searchModel = Yii::getAlias('@' . str_replace('\\', '/', ltrim($this->searchModelClass, '\\') . '.php'));
year/gii/goodmall/generators/api/Generator.php:            $files[] = new CodeFile($searchModel, $this->render('search.php'));
year/gii/goodmall/generators/api/Generator.php:        $viewPath = $this->getViewPath();
year/gii/goodmall/generators/api/Generator.php:        $templatePath = $this->getTemplatePath() . '/views';
year/gii/goodmall/generators/api/Generator.php:            if (empty($this->searchModelClass) && $file === '_search.php') {
year/gii/goodmall/generators/api/Generator.php:                $files[] = new CodeFile("$viewPath/$file", $this->render("views/$file"));
year/gii/goodmall/generators/api/Generator.php:        $return = $this->render('routes.go.php');
year/gii/goodmall/generators/api/Generator.php:        $pos = strrpos($this->controllerClass, '\\');
year/gii/goodmall/generators/api/Generator.php:        $class = substr(substr($this->controllerClass, $pos + 1), 0, -10);
year/gii/goodmall/generators/api/Generator.php:        foreach ($this->getColumnNames() as $name) {
year/gii/goodmall/generators/api/Generator.php:        $class = $this->modelClass;
year/gii/goodmall/generators/api/Generator.php:        $class = $this->modelClass;
year/gii/goodmall/generators/api/Generator.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/goodmall/generators/api/Generator.php:       return   $this->getDbConnection()->getTableSchema($this->tableName) ;
year/gii/goodmall/generators/api/Generator.php:        $ts =  $this->getTableSchema() ;
year/gii/goodmall/generators/api/Generator.php:            $this->addError('tableName', "Table '{$this->tableName}' does not exist.");
year/gii/goodmall/generators/api/Generator.php:        if (!is_dir($this->podPath)) {
year/gii/goodmall/generators/api/Generator.php:            $this->addError('podPath', ' please check the pod path which should exists： ' . $this->podPath);
year/gii/goodmall/generators/api/default/search.php:        $this->load($params);
year/gii/goodmall/generators/api/default/search.php:        if (!$this->validate()) {
year/gii/goodmall/generators/api/default/controller.php:        return $this->render('index', [
year/gii/goodmall/generators/api/default/controller.php:        return $this->render('index', [
year/gii/goodmall/generators/api/default/controller.php:        return $this->render('view', [
year/gii/goodmall/generators/api/default/controller.php:            'model' => $this->findModel(<?= $actionParams ?>),
year/gii/goodmall/generators/api/default/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
year/gii/goodmall/generators/api/default/controller.php:            return $this->render('create', [
year/gii/goodmall/generators/api/default/controller.php:        $model = $this->findModel(<?= $actionParams ?>);
year/gii/goodmall/generators/api/default/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
year/gii/goodmall/generators/api/default/controller.php:            return $this->render('update', [
year/gii/goodmall/generators/api/default/controller.php:        $this->findModel(<?= $actionParams ?>)->delete();
year/gii/goodmall/generators/api/default/controller.php:        return $this->redirect(['index']);
year/gii/goodmall/commands/BatchController.php:        $this->appConfig = $this->getYiiConfiguration();
year/gii/goodmall/commands/BatchController.php:        $this->appConfig['id'] = 'temp';
year/gii/goodmall/commands/BatchController.php:        $this->modelGenerator = new ModelGenerator(['db' => $this->modelDb]);
year/gii/goodmall/commands/BatchController.php:        if (!$this->tables) {
year/gii/goodmall/commands/BatchController.php:            $this->modelGenerator->tableName = '*';
year/gii/goodmall/commands/BatchController.php:            $this->tables = $this->modelGenerator->getTableNames();
year/gii/goodmall/commands/BatchController.php:            $tableList = implode("\n\t- ", $this->tables);
year/gii/goodmall/commands/BatchController.php:            if (!$this->confirm($msg)) {
year/gii/goodmall/commands/BatchController.php:        $this->actionModels();
year/gii/goodmall/commands/BatchController.php:        $this->actionCruds();
year/gii/goodmall/commands/BatchController.php:        foreach ($this->tables as $table) {
year/gii/goodmall/commands/BatchController.php:            //var_dump($this->tableNameMap, $table);exit;
year/gii/goodmall/commands/BatchController.php:                'interactive' => $this->interactive,
year/gii/goodmall/commands/BatchController.php:                'overwrite' => $this->overwrite,
year/gii/goodmall/commands/BatchController.php:                'useTranslatableBehavior' => $this->useTranslatableBehavior,
year/gii/goodmall/commands/BatchController.php:                'useTimestampBehavior' => $this->useTimestampBehavior,
year/gii/goodmall/commands/BatchController.php:                'languageTableName' => $this->languageTableName,
year/gii/goodmall/commands/BatchController.php:                'languageCodeColumn' => $this->languageCodeColumn,
year/gii/goodmall/commands/BatchController.php:                'template' => $this->template,
year/gii/goodmall/commands/BatchController.php:                'ns' => $this->modelNamespace,
year/gii/goodmall/commands/BatchController.php:                'db' => $this->modelDb,
year/gii/goodmall/commands/BatchController.php:                'tablePrefix' => $this->tablePrefix,
year/gii/goodmall/commands/BatchController.php:                'enableI18N' => $this->enableI18N,
year/gii/goodmall/commands/BatchController.php:                'singularEntities' => $this->singularEntities,
year/gii/goodmall/commands/BatchController.php:                'messageCategory' => $this->modelMessageCategory,
year/gii/goodmall/commands/BatchController.php:                'generateModelClass' => $this->extendedModels,
year/gii/goodmall/commands/BatchController.php:                'baseClassSuffix' => $this->modelBaseClassSuffix,
year/gii/goodmall/commands/BatchController.php:                'modelClass' => isset($this->tableNameMap[$table]) ?
year/gii/goodmall/commands/BatchController.php:                    $this->tableNameMap[$table] :
year/gii/goodmall/commands/BatchController.php:                'baseClass' => $this->modelBaseClass,
year/gii/goodmall/commands/BatchController.php:                'baseTraits' => $this->modelBaseTraits,
year/gii/goodmall/commands/BatchController.php:                'removeDuplicateRelations' => $this->modelRemoveDuplicateRelations,
year/gii/goodmall/commands/BatchController.php:                'tableNameMap' => $this->tableNameMap,
year/gii/goodmall/commands/BatchController.php:                'generateQuery' => $this->modelGenerateQuery,
year/gii/goodmall/commands/BatchController.php:                'queryNs' => $this->modelQueryNamespace,
year/gii/goodmall/commands/BatchController.php:                'queryBaseClass' => $this->modelQueryBaseClass,
year/gii/goodmall/commands/BatchController.php:                'generateLabelsFromComments' => $this->modelGenerateLabelsFromComments,
year/gii/goodmall/commands/BatchController.php:                'generateHintsFromComments' => $this->modelGenerateHintsFromComments,
year/gii/goodmall/commands/BatchController.php:            $temp = new \yii\console\Application($this->appConfig);
year/gii/goodmall/commands/BatchController.php:        $providers = ArrayHelper::merge($this->crudProviders, Generator::getCoreProviders());
year/gii/goodmall/commands/BatchController.php:        $this->createDirectoryFromNamespace($this->crudControllerNamespace);
year/gii/goodmall/commands/BatchController.php:        $this->createDirectoryFromNamespace($this->crudSearchModelNamespace);
year/gii/goodmall/commands/BatchController.php:        foreach ($this->tables as $table) {
year/gii/goodmall/commands/BatchController.php:            $table = str_replace($this->tablePrefix, '', $table);
year/gii/goodmall/commands/BatchController.php:            $name = isset($this->tableNameMap[$table]) ? $this->tableNameMap[$table] :
year/gii/goodmall/commands/BatchController.php:                $this->modelGenerator->generateClassName($table);
year/gii/goodmall/commands/BatchController.php:                'interactive' => $this->interactive,
year/gii/goodmall/commands/BatchController.php:                'overwrite' => $this->overwrite,
year/gii/goodmall/commands/BatchController.php:                'template' => $this->template,
year/gii/goodmall/commands/BatchController.php:                'modelClass' => $this->modelNamespace.'\\'.$name,
year/gii/goodmall/commands/BatchController.php:                'searchModelClass' => $this->crudSearchModelNamespace.'\\'.$name.$this->crudSearchModelSuffix,
year/gii/goodmall/commands/BatchController.php:                'controllerNs' => $this->crudControllerNamespace,
year/gii/goodmall/commands/BatchController.php:                'controllerClass' => $this->crudControllerNamespace.'\\'.$name.'Controller',
year/gii/goodmall/commands/BatchController.php:                'viewPath' => $this->crudViewPath,
year/gii/goodmall/commands/BatchController.php:                'pathPrefix' => $this->crudPathPrefix,
year/gii/goodmall/commands/BatchController.php:                'tablePrefix' => $this->tablePrefix,
year/gii/goodmall/commands/BatchController.php:                'enableI18N' => $this->enableI18N,
year/gii/goodmall/commands/BatchController.php:                'singularEntities' => $this->singularEntities,
year/gii/goodmall/commands/BatchController.php:                'messageCategory' => $this->crudMessageCategory,
year/gii/goodmall/commands/BatchController.php:                'modelMessageCategory' => $this->modelMessageCategory,
year/gii/goodmall/commands/BatchController.php:                'baseControllerClass' => $this->crudBaseControllerClass,
year/gii/goodmall/commands/BatchController.php:                'skipRelations' => $this->crudSkipRelations,
year/gii/goodmall/commands/BatchController.php:                'accessFilter' => $this->crudAccessFilter,
year/gii/goodmall/commands/BatchController.php:                'baseTraits' => $this->crudBaseTraits,
year/gii/goodmall/commands/BatchController.php:                'tidyOutput' => $this->crudTidyOutput,
year/gii/goodmall/commands/BatchController.php:                'fixOutput' => $this->crudFixOutput,
year/gii/goodmall/commands/BatchController.php:                'template' => $this->crudTemplate,
year/gii/goodmall/commands/BatchController.php:                'indexWidgetType' => $this->crudIndexWidgetType,
year/gii/goodmall/commands/BatchController.php:                'indexGridClass' => $this->crudIndexGridClass,
year/gii/goodmall/commands/BatchController.php:            $temp = new \yii\console\Application($this->appConfig);
year/gii/goodmall/generators/crud/Generator.php:        if(empty($this->podPath)){
year/gii/goodmall/generators/crud/Generator.php:            $this->podPath = Config::getProjectHome().DIRECTORY_SEPARATOR.'pods'.DIRECTORY_SEPARATOR.'__your_pod_id__' ;
year/gii/goodmall/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/goodmall/generators/crud/Generator.php:            $this->addError('modelClass', "The table associated with $class must have primary key(s).");
year/gii/goodmall/generators/crud/Generator.php:            $this->podPath,
year/gii/goodmall/generators/crud/Generator.php:            Inflector::camel2id($this->interactorName.'Interactor','_').'.go'
year/gii/goodmall/generators/crud/Generator.php:            new CodeFile($interactorFile, $this->render('interactor.go.php')),
year/gii/goodmall/generators/crud/Generator.php:        if (!empty($this->searchModelClass)) {
year/gii/goodmall/generators/crud/Generator.php:            $searchModel = Yii::getAlias('@' . str_replace('\\', '/', ltrim($this->searchModelClass, '\\') . '.php'));
year/gii/goodmall/generators/crud/Generator.php:            $files[] = new CodeFile($searchModel, $this->render('search.php'));
year/gii/goodmall/generators/crud/Generator.php:        $viewPath = $this->getViewPath();
year/gii/goodmall/generators/crud/Generator.php:        $templatePath = $this->getTemplatePath() . '/views';
year/gii/goodmall/generators/crud/Generator.php:            if (empty($this->searchModelClass) && $file === '_search.php') {
year/gii/goodmall/generators/crud/Generator.php:                $files[] = new CodeFile("$viewPath/$file", $this->render("views/$file"));
year/gii/goodmall/generators/crud/Generator.php:        $pos = strrpos($this->controllerClass, '\\');
year/gii/goodmall/generators/crud/Generator.php:        $class = substr(substr($this->controllerClass, $pos + 1), 0, -10);
year/gii/goodmall/generators/crud/Generator.php:        if (empty($this->viewPath)) {
year/gii/goodmall/generators/crud/Generator.php:            return Yii::getAlias('@app/views/' . $this->getControllerID());
year/gii/goodmall/generators/crud/Generator.php:            return Yii::getAlias(str_replace('\\', '/', $this->viewPath));
year/gii/goodmall/generators/crud/Generator.php:        foreach ($this->getColumnNames() as $name) {
year/gii/goodmall/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/goodmall/generators/crud/Generator.php:        $tableSchema = $this->getTableSchema();
year/gii/goodmall/generators/crud/Generator.php:        $tableSchema = $this->getTableSchema();
year/gii/goodmall/generators/crud/Generator.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/goodmall/generators/crud/Generator.php:            return ["[['" . implode("', '", $this->getColumnNames()) . "'], 'safe']"];
year/gii/goodmall/generators/crud/Generator.php:        return $this->getColumnNames();
year/gii/goodmall/generators/crud/Generator.php:        $model = new $this->modelClass();
year/gii/goodmall/generators/crud/Generator.php:        foreach ($this->getColumnNames() as $name) {
year/gii/goodmall/generators/crud/Generator.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/goodmall/generators/crud/Generator.php:            $class = $this->modelClass;
year/gii/goodmall/generators/crud/Generator.php:                    $hashConditions[] = "'{$column}' => \$this->{$column},";
year/gii/goodmall/generators/crud/Generator.php:                    $likeKeyword = $this->getClassDbDriverName() === 'pgsql' ? 'ilike' : 'like';
year/gii/goodmall/generators/crud/Generator.php:                    $likeConditions[] = "->andFilterWhere(['{$likeKeyword}', '{$column}', \$this->{$column}])";                    
year/gii/goodmall/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/goodmall/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/goodmall/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/goodmall/generators/crud/Generator.php:        if (($table = $this->getTableSchema()) === false) {
year/gii/goodmall/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/goodmall/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/goodmall/generators/crud/Generator.php:        $class = $this->modelClass;
year/gii/goodmall/generators/crud/Generator.php:        if (!is_dir($this->podPath)) {
year/gii/goodmall/generators/crud/Generator.php:            $this->addError('podPath', ' please check the pod path which should exists： ' . $this->podPath);
year/gii/goodmall/generators/model/form.php:$this->registerJs(SaveForm::getSavedFormsJs($generator->getName()), yii\web\View::POS_END);
year/gii/goodmall/generators/model/form.php:$this->registerJs(SaveForm::jsFillForm(), yii\web\View::POS_END);
year/gii/goodmall/generators/test/Generator.php:        $labels = $this->generateLabels($table);
year/gii/goodmall/generators/test/Generator.php:       // $relations = $this->generateRelations();
year/gii/goodmall/generators/test/Generator.php:        $db = $this->getDbConnection();
year/gii/goodmall/generators/test/Generator.php:        $class = $this->modelNs.$this->modelClass;
year/gii/goodmall/generators/test/Generator.php:        $this->tableName = $class::$classTableNameMethod();
year/gii/goodmall/generators/test/Generator.php:        //if($this->searchModelClass !=="")
year/gii/goodmall/generators/test/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/goodmall/generators/test/Generator.php:            $className = $this->generateClassName($tableName);
year/gii/goodmall/generators/test/Generator.php:                'modelClass' => $this->modelClass,
year/gii/goodmall/generators/test/Generator.php:                'controllerClass' => $this->controllerClass,
year/gii/goodmall/generators/test/Generator.php:                'labels' => $this->generateLabels($tableSchema),
year/gii/goodmall/generators/test/Generator.php:                'rules' => $this->generateRules($tableSchema),
year/gii/goodmall/generators/test/Generator.php:                'attributes' => $this->generateAttributes($tableSchema),
year/gii/goodmall/generators/test/Generator.php:                'ns' => $this->ns,
year/gii/goodmall/generators/test/Generator.php:                Yii::getAlias('@app/..'.$this->codeceptionPath.str_replace('\\', '/', $this->ns)).'/'.$className.$this->baseClassSuffix.'UnitTest.php',
year/gii/goodmall/generators/test/Generator.php:                $this->render('unit.php', $params)
year/gii/common/views/layouts/main.php:<?php $this->beginPage() ?>
year/gii/common/views/layouts/main.php:    <title><?= Html::encode($this->title) ?></title>
year/gii/common/views/layouts/main.php:    <?php $this->head() ?>
year/gii/common/views/layouts/main.php:    <?php $this->beginBody() ?>
year/gii/common/views/layouts/main.php:    <?php $this->endBody() ?>
year/gii/common/views/layouts/main.php:<?php $this->endPage() ?>
year/gii/goodmall/generators/crud/default/search.php:        $this->load($params);
year/gii/goodmall/generators/crud/default/search.php:        if (!$this->validate()) {
year/gii/goodmall/generators/crud/default/controller.php:        return $this->render('index', [
year/gii/goodmall/generators/crud/default/controller.php:        return $this->render('index', [
year/gii/goodmall/generators/crud/default/controller.php:        return $this->render('view', [
year/gii/goodmall/generators/crud/default/controller.php:            'model' => $this->findModel(<?= $actionParams ?>),
year/gii/goodmall/generators/crud/default/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
year/gii/goodmall/generators/crud/default/controller.php:            return $this->render('create', [
year/gii/goodmall/generators/crud/default/controller.php:        $model = $this->findModel(<?= $actionParams ?>);
year/gii/goodmall/generators/crud/default/controller.php:            return $this->redirect(['view', <?= $urlParams ?>]);
year/gii/goodmall/generators/crud/default/controller.php:            return $this->render('update', [
year/gii/goodmall/generators/crud/default/controller.php:        $this->findModel(<?= $actionParams ?>)->delete();
year/gii/goodmall/generators/crud/default/controller.php:        return $this->redirect(['index']);
year/gii/goodmall/generators/model/Generator.php:        if (empty($this->srcDir)) {
year/gii/goodmall/generators/model/Generator.php:            $this->srcDir = dirname(Yii::$app->basePath)
year/gii/goodmall/generators/model/Generator.php:        $value = $this->$attribute;
year/gii/goodmall/generators/model/Generator.php:            $this->addError($attribute, 'Namespace must be associated with an existing directory.');
year/gii/goodmall/generators/model/Generator.php:        $db = $this->getDbConnection();
year/gii/goodmall/generators/model/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/goodmall/generators/model/Generator.php:                ? $this->generateClassName($tableName)
year/gii/goodmall/generators/model/Generator.php:                : $this->modelClass;
year/gii/goodmall/generators/model/Generator.php:            $queryClassName = ($this->generateQuery) ? $this->generateQueryClassName($className) : false;
year/gii/goodmall/generators/model/Generator.php:                'properties' => $this->generateProperties($tableSchema),
year/gii/goodmall/generators/model/Generator.php:                'labels' => $this->generateLabels($tableSchema),
year/gii/goodmall/generators/model/Generator.php:                'hints' => $this->generateHints($tableSchema),
year/gii/goodmall/generators/model/Generator.php:                'rules' => $this->generateRules2($tableSchema),
year/gii/goodmall/generators/model/Generator.php:                'searchModelRules' => $this->generateRules2($tableSchema, true),
year/gii/goodmall/generators/model/Generator.php:                'enum' => $this->getEnum($tableSchema->columns),
year/gii/goodmall/generators/model/Generator.php:            $params['timestamp'] = $this->generateTimestamp($tableSchema);
year/gii/goodmall/generators/model/Generator.php:                $this->srcDir,
year/gii/goodmall/generators/model/Generator.php:                $this->render('model.go.php', $params)
year/gii/goodmall/generators/model/Generator.php:                $this->srcDir,
year/gii/goodmall/generators/model/Generator.php:                $this->render('model-search.go.php', $params)
year/gii/goodmall/generators/model/Generator.php:            $modelClassFile = Yii::getAlias('@' . str_replace('\\', '/', $this->ns)) . '/' . $className . '.php';
year/gii/goodmall/generators/model/Generator.php:            if ($this->generateModelClass || !is_file($modelClassFile)) {
year/gii/goodmall/generators/model/Generator.php:                    $this->render('model-extended.php', $params)
year/gii/goodmall/generators/model/Generator.php:                        '@'.str_replace('\\', '/', $this->queryNs)
year/gii/goodmall/generators/model/Generator.php:                if ($this->generateModelClass || !is_file($queryClassFile)) {
year/gii/goodmall/generators/model/Generator.php:                        $this->render('query.php', $params)
year/gii/goodmall/generators/model/Generator.php:            $suffix = str_replace(' ', '', $this->getName());
year/gii/goodmall/generators/model/Generator.php:            $formDataDir = Yii::getAlias('@'.str_replace('\\', '/', $this->ns));
year/gii/goodmall/generators/model/Generator.php:            $formData = json_encode(SaveForm::getFormAttributesValues($this, $this->formAttributes()));
year/gii/goodmall/generators/model/Generator.php:        $routePath = Inflector::camel2id(StringHelper::basename($this->modelClass));
year/gii/goodmall/generators/model/Generator.php:        $goTableColumns = $this->getXormColumns($table->name) ;
year/gii/goodmall/generators/model/Generator.php:        $driverName = $this->getDbDriverName();
year/gii/goodmall/generators/model/Generator.php:        $db = $this->getDbConnection();
year/gii/goodmall/generators/model/Generator.php:                if (!$this->isColumnAutoIncremental($table, $uniqueColumns)) {
year/gii/goodmall/generators/repository/Generator.php:        if (empty($this->repositoryInterfacePath)) {
year/gii/goodmall/generators/repository/Generator.php:            $this->repositoryInterfacePath = implode(DIRECTORY_SEPARATOR, [
year/gii/goodmall/generators/repository/Generator.php:        if (empty($this->repositoryImplementPath)) {
year/gii/goodmall/generators/repository/Generator.php:            $this->repositoryImplementPath = implode(DIRECTORY_SEPARATOR, [
year/gii/goodmall/generators/repository/Generator.php:        $parts = explode('.', $this->repositoryInterfaceType);
year/gii/goodmall/generators/repository/Generator.php:        $value = $this->$attribute;
year/gii/goodmall/generators/repository/Generator.php:            $this->addError($attribute, 'Namespace must be associated with an existing directory.');
year/gii/goodmall/generators/repository/Generator.php:        $db = $this->getDbConnection();
year/gii/goodmall/generators/repository/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/goodmall/generators/repository/Generator.php:                ? $this->generateClassName($tableName)
year/gii/goodmall/generators/repository/Generator.php:                : $this->modelClass;
year/gii/goodmall/generators/repository/Generator.php:            $queryClassName = ($this->generateQuery) ? $this->generateQueryClassName($className) : false;
year/gii/goodmall/generators/repository/Generator.php:                'properties' => $this->generateProperties($tableSchema),
year/gii/goodmall/generators/repository/Generator.php:                'labels' => $this->generateLabels($tableSchema),
year/gii/goodmall/generators/repository/Generator.php:                'hints' => $this->generateHints($tableSchema),
year/gii/goodmall/generators/repository/Generator.php:                'rules' => $this->generateRules2($tableSchema),
year/gii/goodmall/generators/repository/Generator.php:                'searchModelRules' => $this->generateRules2($tableSchema, true),
year/gii/goodmall/generators/repository/Generator.php:                'enum' => $this->getEnum($tableSchema->columns),
year/gii/goodmall/generators/repository/Generator.php:            $params['timestamp'] = $this->generateTimestamp($tableSchema);
year/gii/goodmall/generators/repository/Generator.php:                $this->repositoryInterfacePath,
year/gii/goodmall/generators/repository/Generator.php:                end(explode('.', $this->repositoryInterfaceType)) . '.go',
year/gii/goodmall/generators/repository/Generator.php:                $this->render('repo-interface.go.php', $params)
year/gii/goodmall/generators/repository/Generator.php:                $this->repositoryImplementPath,
year/gii/goodmall/generators/repository/Generator.php:                $this->getRepositoryImplementType() . '.go',
year/gii/goodmall/generators/repository/Generator.php:                $this->render('repo-impl.go.php', $params)
year/gii/goodmall/generators/repository/Generator.php:        $table = $this->getDbConnection()->getTableSchema($this->tableName);
year/gii/goodmall/generators/repository/Generator.php:            $searchModelProp = $this->getStructPropNameFromField($column);
year/gii/goodmall/generators/repository/Generator.php:                    // $likeKeyword = $this->getClassDbDriverName() === 'pgsql' ? 'ilike' : 'like';
year/gii/goodmall/generators/repository/Generator.php:                    // $likeConditions[] = "->andFilterWhere(['{$likeKeyword}', '{$column}', \$this->{$column}])";
year/gii/goodmall/generators/repository/Generator.php:        $routePath = Inflector::camel2id(StringHelper::basename($this->modelClass));
year/gii/goodmall/generators/repository/Generator.php:        $goTableColumns = $this->getXormColumns($table->name);
year/gii/goodmall/generators/repository/Generator.php:        $driverName = $this->getDbDriverName();
year/gii/goodmall/generators/repository/Generator.php:        $db = $this->getDbConnection();
year/gii/goodmall/generators/repository/Generator.php:                if (!$this->isColumnAutoIncremental($table, $uniqueColumns)) {
year/gii/goodmall/generators/repository/Generator.php:        if (!is_dir($this->{$attribute})) {
year/gii/goodmall/generators/repository/Generator.php:            $this->addError($attribute, ' please check the dir which should must exists： ' . ($this->{$attribute}));
year/gii/goodmall/generators/repository/Generator.php:        $typ = $this->{$attribute};
year/gii/goodmall/generators/repository/Generator.php:            $this->addError($attribute, ' please check the type ： ' . ($this->{$attribute}) . " should like  <pkgName>.<TypeName>");
year/gii/goodmall/generators/crud/default/views/view.php:$this->title = $model-><?= $generator->getNameAttribute() ?>;
year/gii/goodmall/generators/crud/default/views/view.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
year/gii/goodmall/generators/crud/default/views/view.php:$this->params['breadcrumbs'][] = $this->title;
year/gii/goodmall/generators/crud/default/views/view.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
year/gii/goodmall/generators/crud/default/views/index.php:$this->title = <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>;
year/gii/goodmall/generators/crud/default/views/index.php:$this->params['breadcrumbs'][] = $this->title;
year/gii/goodmall/generators/crud/default/views/index.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
year/gii/goodmall/generators/crud/default/views/index.php:<?= "    <?php " . ($generator->indexWidgetType === 'grid' ? "// " : "") ?>echo $this->render('_search', ['model' => $searchModel]); ?>
year/gii/goodmall/generators/pod/Generator.php:        if (trim($this->getProjectHome()) != '') {
year/gii/goodmall/generators/pod/Generator.php:            $this->podsPath =  $this->getProjectHome().'\pods';
year/gii/goodmall/generators/pod/Generator.php:        $modulePath = $this->podsPath;
year/gii/goodmall/generators/pod/Generator.php:        $podPath = $this->podsPath.'/'.$this->podID;
year/gii/goodmall/generators/pod/Generator.php:            $this->render("readme.md.php")
year/gii/goodmall/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/goodmall/generators/pod/Generator.php:            $this->render("adapter-gin-init.go.php")
year/gii/goodmall/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/goodmall/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/goodmall/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/goodmall/generators/pod/Generator.php:            $this->render("gitkeep.php")
year/gii/goodmall/generators/pod/Generator.php:        if (!file_exists($this->podsPath)) {
year/gii/goodmall/generators/pod/Generator.php:            $this->addError('podsPath', ' please check the pods path which should must exists： ' . $this->podsPath);
year/gii/goodmall/generators/crud/default/views/create.php:$this->title = <?= $generator->generateString('Create ' . Inflector::camel2words(StringHelper::basename($generator->modelClass))) ?>;
year/gii/goodmall/generators/crud/default/views/create.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
year/gii/goodmall/generators/crud/default/views/create.php:$this->params['breadcrumbs'][] = $this->title;
year/gii/goodmall/generators/crud/default/views/create.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
year/gii/goodmall/generators/crud/default/views/create.php:    <?= "<?= " ?>$this->render('_form', [
year/gii/goodmall/generators/crud/default/views/update.php:$this->title = <?= $generator->generateString('Update {modelClass}: ', ['modelClass' => Inflector::camel2words(StringHelper::basename($generator->modelClass))]) ?> . $model-><?= $generator->getNameAttribute() ?>;
year/gii/goodmall/generators/crud/default/views/update.php:$this->params['breadcrumbs'][] = ['label' => <?= $generator->generateString(Inflector::pluralize(Inflector::camel2words(StringHelper::basename($generator->modelClass)))) ?>, 'url' => ['index']];
year/gii/goodmall/generators/crud/default/views/update.php:$this->params['breadcrumbs'][] = ['label' => $model-><?= $generator->getNameAttribute() ?>, 'url' => ['view', <?= $urlParams ?>]];
year/gii/goodmall/generators/crud/default/views/update.php:$this->params['breadcrumbs'][] = <?= $generator->generateString('Update') ?>;
year/gii/goodmall/generators/crud/default/views/update.php:    <h1><?= "<?= " ?>Html::encode($this->title) ?></h1>
year/gii/goodmall/generators/crud/default/views/update.php:    <?= "<?= " ?>$this->render('_form', [
year/gii/goodmall/generators/repository/form.php:$this->registerJs(SaveForm::getSavedFormsJs($generator->getName()), yii\web\View::POS_END);
year/gii/goodmall/generators/repository/form.php:$this->registerJs(SaveForm::jsFillForm(), yii\web\View::POS_END);
year/gii/goodmall/generators/test/default/unit.php:        if($this->modelPK != null){
year/gii/goodmall/generators/test/default/unit.php:            $cls = $this->class;
year/gii/goodmall/generators/test/default/unit.php:            $model = $cls::findOne($this->modelPK);
year/gii/goodmall/generators/test/default/unit.php:        $model = $this->newModelInstance();
year/gii/goodmall/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be created', function () use ($model) {
year/gii/goodmall/generators/test/default/unit.php:        $model = $this->newModelInstance();
year/gii/goodmall/generators/test/default/unit.php:        if(!$model->save($this->isModelValidationEnabled)){
year/gii/goodmall/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/goodmall/generators/test/default/unit.php:        $this->modelPK = $model-><?php echo PKAttributeName($attributes); ?>;
year/gii/goodmall/generators/test/default/unit.php:        $reloadedModel = $this->loadModelById($this->modelPK);
year/gii/goodmall/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be saved', function () use ($reloadedModel, $model) {
year/gii/goodmall/generators/test/default/unit.php:        $this->assertNotEmpty($model-><?php echo PKAttributeName($attributes); ?>);
year/gii/goodmall/generators/test/default/unit.php:        $originalModel = $this->newModelInstance();
year/gii/goodmall/generators/test/default/unit.php:        if(!$originalModel->save($this->isModelValidationEnabled)){
year/gii/goodmall/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/goodmall/generators/test/default/unit.php:        $this->modelPK = $originalModel-><?php echo PKAttributeName($attributes); ?>;
year/gii/goodmall/generators/test/default/unit.php:        $updatedModel-><?php echo $attr['name'] ?> = $this->updateAttributeValue($originalModel-><?php echo $attr['name'] ?>, '<?php echo $attr['name'] ?>', '<?php echo $attr['type'] ?>');
year/gii/goodmall/generators/test/default/unit.php:        if(!$updatedModel->save($this->isModelValidationEnabled)){
year/gii/goodmall/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/goodmall/generators/test/default/unit.php:        $reloadedModel = $this->loadModelById($this->modelPK);
year/gii/goodmall/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be updated', function () use ($reloadedModel, $updatedModel) {
year/gii/goodmall/generators/test/default/unit.php:        $model = $this->newModelInstance();
year/gii/goodmall/generators/test/default/unit.php:        if(!$model->save($this->isModelValidationEnabled)){
year/gii/goodmall/generators/test/default/unit.php:            $this->fail(self::ERROR_SAVE_VALIDATION);
year/gii/goodmall/generators/test/default/unit.php:        $this->modelPK = $model-><?php echo PKAttributeName($attributes); ?>;
year/gii/goodmall/generators/test/default/unit.php:        $model = $this->loadModelById($this->modelPK);
year/gii/goodmall/generators/test/default/unit.php:        $deletedModel = $this->loadModelById($this->modelPK);
year/gii/goodmall/generators/test/default/unit.php:        $this->specify($this->modelName.' model should be deleted', function () use ($deletedModel) {
year/gii/goodmall/generators/test/default/unit.php:            expect($this->modelName.' model was deleted', $deletedModel)->equals(null);
year/gii/goodmall/generators/test/default/unit.php:        $r = new \ReflectionClass($this->class);
year/gii/goodmall/generators/test/default/unit.php:        $r = new \ReflectionClass($this->class);
year/gii/common/FileTreeController.php:                return $this->asJson($rslt) ;
year/gii/common/FileTreeController.php:        $this->layout = '@year/gii/common/views/layouts/main' ;
year/gii/common/FileTreeController.php:        return $this->render('@year/gii/common/views/file-tree/home') ;
year/gii/common/FileTreeController.php:         return $this->renderContent($widgetContent) ;
year/gii/common/FileTreeController.php:        // $this->render('@year/gii/common/widgets/views/file-tree');
year/gii/common/FileTreeController.php:        // return $this->renderContent( 'hi') ;
year/gii/common/FileTreeController.php:       // return  $this->renderContent('hello');
year/gii/common/utils/fs.php:        if($this->base && strlen($this->base)) {
year/gii/common/utils/fs.php:            if(strpos($temp, $this->base) !== 0) { throw new Exception('Path is not inside base ('.$this->base.'): ' . $temp); }
year/gii/common/utils/fs.php:        $id = $this->real($this->base . DIRECTORY_SEPARATOR . $id);
year/gii/common/utils/fs.php:        $path = $this->real($path);
year/gii/common/utils/fs.php:        $path = substr($path, strlen($this->base));
year/gii/common/utils/fs.php:        $this->base = $this->real($base);
year/gii/common/utils/fs.php:        if(!$this->base) { throw new Exception('Base directory does not exist'); }
year/gii/common/utils/fs.php:        $dir = $this->path($id);
year/gii/common/utils/fs.php:            if($this->startsWith($item,'.')) { continue; }
year/gii/common/utils/fs.php:                $res[] = array('text' => $item, 'children' => true,  'id' => $this->id($dir . DIRECTORY_SEPARATOR . $item), 'icon' => 'folder');
year/gii/common/utils/fs.php:                $res[] = array('text' => $item, 'children' => false, 'id' => $this->id($dir . DIRECTORY_SEPARATOR . $item), 'type' => 'file', 'icon' => 'file file-'.substr($item, strrpos($item,'.') + 1));
year/gii/common/utils/fs.php:        if($with_root && $this->id($dir) === '/') {
year/gii/common/utils/fs.php:            $res = array(array('text' => basename($this->base), 'children' => $res, 'id' => '/', 'icon'=>'folder', 'state' => array('opened' => true, 'disabled' => true)));
year/gii/common/utils/fs.php:        $dir = $this->path($id);
year/gii/common/utils/fs.php:                    $dat['content'] = 'File not recognized: '.$this->id($dir);
year/gii/common/utils/fs.php:        $dir = $this->path($id);
year/gii/common/utils/fs.php:        return array('id' => $this->id($dir . DIRECTORY_SEPARATOR . $name));
year/gii/common/utils/fs.php:        $dir = $this->path($id);
year/gii/common/utils/fs.php:        if($dir === $this->base) {
year/gii/common/utils/fs.php:        return array('id' => $this->id($new));
year/gii/common/utils/fs.php:        $dir = $this->path($id);
year/gii/common/utils/fs.php:        if($dir === $this->base) {
year/gii/common/utils/fs.php:                $this->remove($this->id($dir . DIRECTORY_SEPARATOR . $f));
year/gii/common/utils/fs.php:        $dir = $this->path($id);
year/gii/common/utils/fs.php:        $par = $this->path($par);
year/gii/common/utils/fs.php:        return array('id' => $this->id($new));
year/gii/common/utils/fs.php:        $dir = $this->path($id);
year/gii/common/utils/fs.php:        $par = $this->path($par);
year/gii/common/utils/fs.php:                $this->copy($this->id($dir . DIRECTORY_SEPARATOR . $f), $this->id($new));
year/gii/common/utils/fs.php:        return array('id' => $this->id($new));
year/gii/goodmall/utils/QualifiedTypeValidator.php:        if ($this->message === null) {
year/gii/goodmall/utils/QualifiedTypeValidator.php:            $this->message = \Yii::t('goodmall_gotype', '{attribute} is not a valid qualified go type. should like  <pkgPath>/<pkgName>.<TypeName>');
year/gii/goodmall/utils/QualifiedTypeValidator.php:        if (preg_match($this->pattern, $value) !== 1) {
year/gii/goodmall/utils/QualifiedTypeValidator.php:            return [$this->message, []];
year/base/Singleton.php:        $this->init();
year/base/DynamicModel.php:        $this->attributeLabels[$name] = $label;
year/base/DynamicModel.php:        unset($this->attributeLabels[$name]);
year/base/DynamicModel.php:            $this->setAttributeLabel($name, $label);
year/base/DynamicModel.php:        return $this->attributeLabels;
year/base/Theme.php:        if ($this->baseUrl === null) {
year/base/Theme.php:            $this->baseUrl = '@web/themes/' . $this->active;
year/base/Theme.php:        $this->baseUrl = rtrim(\Yii::getAlias($this->baseUrl), '/');
year/base/Theme.php:        if ($this->basePath === null) {
year/base/Theme.php:            $this->basePath = '@webroot/themes/' . $this->active;
year/base/Theme.php:        $this->basePath = Yii::getAlias($this->basePath);
year/base/Theme.php:        if (empty($this->pathMap)) {
year/base/Theme.php:            $this->pathMap = [Yii::$app->getBasePath() => [$this->basePath]];
year/base/Theme.php:        foreach ($this->pathMap as $from => $tos) {
year/base/Widget.php:        if ($this->applyTheme == true &&  Yii::$app->view->theme !== null) {
year/base/Widget.php:        if($this->relaxTheme == true){
year/base/Widget.php:            $viewFile = $this->getViewPath().DIRECTORY_SEPARATOR.$view ;
year/base/Widget.php:            || is_file($viewFile.'.'.$this->getView()->defaultExtension)
year/base/Widget.php:               $this->applyTheme = false ;
year/charisma/Box.php:        $this->initOptions();
year/charisma/Box.php:        echo Html::beginTag('div', $this->options) . "\n";
year/charisma/Box.php:        echo $this->renderHeader() . "\n";
year/charisma/Box.php:        echo $this->renderBoxContentBegin() . "\n";
year/charisma/Box.php:        echo "\n" . $this->renderBoxContentEnd();
year/charisma/Box.php:        Html::addCssClass($this->headerOptions, 'box-header well');
year/charisma/Box.php:        $this->headerOptions['data-original-title'] = '' ;
year/charisma/Box.php:        $headerIcons = is_array($this->headerIcons) ? implode("\n", $this->headerIcons) : $this->headerIcons;
year/charisma/Box.php:    <h2>{$this->headerTitle}</h2>
year/charisma/Box.php:        return Html::tag('div', "\n" . $headerContent . "\n", $this->headerOptions);
year/charisma/Box.php:        $this->options = array_merge([
year/charisma/Box.php:        ], $this->options);
year/charisma/Box.php:        Html::addCssClass($this->options, 'box');
year/upload/local/UploadStorage.php:            'class'=>$this->urlAdapter,
year/upload/local/UploadStorage.php:        $basePath = $this->getBasePath();
year/upload/local/UploadStorage.php:        $uploadDir = $this->getUploadDir();
year/upload/local/UploadStorage.php:        $this->ensureDirPath($basePath, $uploadDir);
year/upload/local/UploadStorage.php:        $relativePath = $uploadDir . DIRECTORY_SEPARATOR . $this->genFileName() . '.' . $this->getExtension($uploadedFile);
year/upload/local/UploadStorage.php:        $this->baseUrl = $baseUrl;
year/upload/local/UploadStorage.php:        if (empty($this->baseUrl)) {
year/upload/local/UploadStorage.php:            $this->baseUrl = \Yii::getAlias('@web');
year/upload/local/UploadStorage.php:        return $this->baseUrl;
year/upload/local/UploadStorage.php:       return $this->getUrlAdapter()->getPublicUrl($fileId) ;
year/upload/local/UploadStorage.php:        //  return $this->getBaseUrl() . '/' . ltrim($fileId, '/');
year/upload/local/UploadStorage.php:        $basePath = empty($this->basePath) ? \Yii::getAlias('@webroot') : $this->basePath;
year/upload/local/UploadStorage.php:        $baseDir = $this->baseDirName;
year/upload/local/UploadStorage.php:        $dirTemplate = str_replace(['{', '}'], '', $this->dirTemplate);
year/upload/local/UploadStorage.php:        return uniqid($prefix) . $this->randomString(8);
year/upload/local/UploadStorage.php:          return $this->getUrlAdapter()->getThumbUrl($imageUrI,$height,$width,$extraConfig) ;
year/upload/local/UploadStorage.php:        return $this->getPublicUrl($imageUrI) . "_{$height}x{$width}.{$suffix}";
year/upload/local/UploadStorage.php:        // $filePath = $this->getBasePath() .DIRECTORY_SEPARATOR .str_replace( '/',DIRECTORY_SEPARATOR, $fileId);  ;
year/upload/local/UploadStorage.php:        $filePath = $this->getBasePath() .DIRECTORY_SEPARATOR .str_replace( '/',DIRECTORY_SEPARATOR, $fileId);  ;
year/upload/local/UploadStorage.php:        $filePath = $this->getBasePath() .DIRECTORY_SEPARATOR .str_replace( '/',DIRECTORY_SEPARATOR, $fileId);  ;
year/upload/local/UrlAdapter.php:        return $this->uploadStorage->getBaseUrl() . '/' . ltrim($fileId, '/');
year/upload/local/UrlAdapter.php:        return $this->uploadStorage->getPublicUrl($imageUrI) . "_{$height}x{$width}.{$suffix}";
year/gii/form/generators/form/Generator.php://       var_dump($this->getDbConnection());
year/gii/form/generators/form/Generator.php:        $db = $this->getDbConnection();
year/gii/form/generators/form/Generator.php:        //                $this->db ,
year/gii/form/generators/form/Generator.php:        ////                $this->getTableNames(),
year/gii/form/generators/form/Generator.php:    //     if (Yii::$container->has($this->db)) {
year/gii/form/generators/form/Generator.php:    //         return Yii::$container->get($this->db);
year/gii/form/generators/form/Generator.php:    //         return Yii::$app->get($this->db);
year/gii/form/generators/form/Generator.php:        if (empty($this->srcDir)) {
year/gii/form/generators/form/Generator.php:            $this->srcDir = Yii::getAlias('@app/runtime')
year/gii/form/generators/form/Generator.php:        // die($this->db) ;
year/gii/form/generators/form/Generator.php:        $this->generateLabelsFromComments = (1 == 1);
year/gii/form/generators/form/Generator.php:        $db = $this->getDbConnection();
year/gii/form/generators/form/Generator.php:        foreach ($this->getTableNames() as $tableName) {
year/gii/form/generators/form/Generator.php:                ? $this->generateClassName($tableName)
year/gii/form/generators/form/Generator.php:                : $this->modelClass;
year/gii/form/generators/form/Generator.php:            $className = $this->generateClassName($tableName);
year/gii/form/generators/form/Generator.php:                    ($this->srcDir), // FIXME  临时的 可以更改下 比如从UI选择
year/gii/form/generators/form/Generator.php:                $this->render('form.php', [
year/gii/form/generators/form/Generator.php:                    'properties' => $this->generateProperties($tableSchema),
year/gii/form/generators/form/Generator.php:                    'labels' => $this->generateLabels($tableSchema)
year/gii/form/generators/form/Generator.php:                $this->render('table.php', [
year/gii/form/generators/form/Generator.php:                    'properties' => $this->generateProperties($tableSchema),
year/gii/form/generators/form/Generator.php:                    'labels' => $this->generateLabels($tableSchema)
year/gii/form/generators/form/Generator.php:                $this->render('_search.php', [
year/gii/form/generators/form/Generator.php:                    'properties' => $this->generateProperties($tableSchema),
year/gii/form/generators/form/Generator.php:                    'labels' => $this->generateLabels($tableSchema)
year/gii/form/generators/form/Generator.php:            $dbId = $this->db; // DbMan::getDbId('tpshop');
year/gii/form/generators/form/Generator.php:            $crudBasePath = Yii::getAlias('@backend/runtime/_tmp_gii_form_gen/' . $dbId . '/' . $this->tableName . '_');
year/gii/form/generators/form/Generator.php:        if (isset($this->classNames2[$tableName])) {
year/gii/form/generators/form/Generator.php:            //Yii::trace("Using '{$this->classNames2[$tableName]}' for '{$tableName}' from classNames2.", __METHOD__);
year/gii/form/generators/form/Generator.php:            return $this->classNames2[$tableName];
year/gii/form/generators/form/Generator.php:        if (isset($this->tableNameMap[$tableName])) {
year/gii/form/generators/form/Generator.php:            return $this->classNames2[$tableName] = $this->tableNameMap[$tableName];
year/gii/form/generators/form/Generator.php:        $db = $this->getDbConnection();
year/gii/form/generators/form/Generator.php:        $patterns[] = "/^{$this->tablePrefix}(.*?)$/";
year/gii/form/generators/form/Generator.php:        $patterns[] = "/^(.*?){$this->tablePrefix}$/";
year/gii/form/generators/form/Generator.php:        if (strpos((string)$this->tableName, '*') !== false) {
year/gii/form/generators/form/Generator.php:            $pattern = $this->tableName;
year/gii/form/generators/form/Generator.php:        if ($this->singularEntities) {
year/gii/form/generators/form/Generator.php:        return $this->classNames2[$tableName] = $returnName;
year/gii/form/generators/form/Generator.php://        $routePath = Inflector::camel2id(StringHelper::basename($this->modelClass));
year/gii/form/generators/form/form.php://$this->registerJs(SaveForm::getSavedFormsJs($generator->getName()), yii\web\View::POS_END);
year/gii/form/generators/form/form.php://$this->registerJs(SaveForm::jsFillForm(), yii\web\View::POS_END);
year/caching/SSDBCache.php:        include_once(Yii::getAlias($this->vendorDir) . '/SDDB.php');
year/caching/SSDBCache.php:        if (is_array($this->ssdb)) {
year/caching/SSDBCache.php:            $host = $this->ssdb['host'];
year/caching/SSDBCache.php:            $port = $this->ssdb['port'];
year/caching/SSDBCache.php:            $timeout_ms = isset($this->ssdb['timeout_ms']) ? $this->ssdb['timeout_ms'] :   2000 ;
year/caching/SSDBCache.php:            $conf = ArrayHelper::merge($this->defaultConfig, $this->ssdb);
year/caching/SSDBCache.php:            $this->ssdb = new \SimpleSSDB($conf['host'], $conf['port'], $conf['timeout_ms']);
year/caching/SSDBCache.php:        if (!$this->ssdb instanceof \SimpleSSDB) {
year/caching/SSDBCache.php:        return (bool)$this->executeCommand('exists', [$this->buildKey($key)]);
year/caching/SSDBCache.php:        return $this->executeCommand('get', [$key]);
year/caching/SSDBCache.php:        $response = $this->executeCommand('multi_get', $keys);
year/caching/SSDBCache.php:            return (bool)$this->executeCommand('SET', [$key, $value]);
year/caching/SSDBCache.php:            return (bool)$this->executeCommand('SET', [$key, $value, 'PX', $expire]);
year/caching/SSDBCache.php:            $this->executeCommand('MSET', $args);
year/caching/SSDBCache.php:            $this->executeCommand('MULTI');
year/caching/SSDBCache.php:            $this->executeCommand('MSET', $args);
year/caching/SSDBCache.php:                $this->executeCommand('PEXPIRE', [$key, $expire]);
year/caching/SSDBCache.php:            $result = $this->executeCommand('EXEC');
year/caching/SSDBCache.php:            return (bool)$this->executeCommand('SET', [$key, $value, 'NX']);
year/caching/SSDBCache.php:            return (bool)$this->executeCommand('SET', [$key, $value, 'PX', $expire, 'NX']);
year/caching/SSDBCache.php:        return (bool)$this->executeCommand('DEL', [$key]);
year/caching/SSDBCache.php:        return $this->executeCommand('FLUSHDB');
year/caching/SSDBCache.php:        return call_user_func([$this->ssdb,$name],$params);
year/migration/GeneratorTrait.php:     * generalSchema=false: `$this->string(255)`
year/migration/GeneratorTrait.php:     * generalSchema=true: `$this->string()`
year/migration/GeneratorTrait.php:     * generalSchema=false: `$this->integer(11)->notNull()->append('AUTO_INCREMENT PRIMARY KEY')`
year/migration/GeneratorTrait.php:     * generalSchema=true: `$this->primaryKey()`
year/migration/GeneratorTrait.php:     * generalSchema=false: `$this->string(45)`
year/migration/GeneratorTrait.php:     * generalSchema=true: `$this->string(45)`
year/migration/GeneratorTrait.php:     * updater (i.e. ['column' => 'varchar(255)'] instead of ['column' => $this->string()]). Since the generating
year/migration/GeneratorTrait.php:        if ($this->historyManager === null) {
year/migration/GeneratorTrait.php:                $this->historyManagerClass,
year/migration/GeneratorTrait.php:                    $this->db,
year/migration/GeneratorTrait.php:                    $this->migrationTable
year/migration/GeneratorTrait.php:            $this->historyManager = $configuredObject;
year/migration/GeneratorTrait.php:        return $this->historyManager;
year/migration/GeneratorTrait.php:        if ($this->tableMapper === null) {
year/migration/GeneratorTrait.php:            $configuredObject = Yii::createObject($this->tableMapperClass, [$this->db]);
year/migration/GeneratorTrait.php:            $this->tableMapper = $configuredObject;
year/migration/GeneratorTrait.php:        return $this->tableMapper;
year/migration/GeneratorTrait.php:        if ($this->arranger === null) {
year/migration/GeneratorTrait.php:            $configuredObject = Yii::createObject($this->arrangerClass, [$this->getTableMapper()]);
year/migration/GeneratorTrait.php:            $this->arranger = $configuredObject;
year/migration/GeneratorTrait.php:        return $this->arranger;
year/migration/GeneratorTrait.php:        if ($this->structureRenderer === null) {
year/migration/GeneratorTrait.php:                $this->structureRendererClass,
year/migration/GeneratorTrait.php:                    Yii::createObject($this->columnRendererClass, [$this->generalSchema]),
year/migration/GeneratorTrait.php:                    Yii::createObject($this->primaryKeyRendererClass, [$this->generalSchema]),
year/migration/GeneratorTrait.php:                    Yii::createObject($this->indexRendererClass),
year/migration/GeneratorTrait.php:                    Yii::createObject($this->foreignKeyRendererClass, [$this->generalSchema])
year/migration/GeneratorTrait.php:            $this->structureRenderer = $configuredObject;
year/migration/GeneratorTrait.php:        return $this->structureRenderer;
year/migration/GeneratorTrait.php://        if ($this->view === null) {
year/migration/GeneratorTrait.php://            $this->view = Yii::$app->getView();
year/migration/GeneratorTrait.php:        if ($this->generator === null) {
year/migration/GeneratorTrait.php:                $this->generatorClass,
year/migration/GeneratorTrait.php:                    $this->getTableMapper(),
year/migration/GeneratorTrait.php:                    $this->getStructureRenderer(),
year/migration/GeneratorTrait.php:                    $this->view
year/migration/GeneratorTrait.php:            $this->generator = $configuredObject;
year/migration/GeneratorTrait.php:        return $this->generator;
year/migration/GeneratorTrait.php:        if ($this->extractor === null) {
year/migration/GeneratorTrait.php:            $db = Instance::ensure($this->db, Connection::class);
year/migration/GeneratorTrait.php:            $configuredObject = Yii::createObject($this->extractorClass, [clone $db, $this->experimental]);
year/migration/GeneratorTrait.php:            $this->extractor = $configuredObject;
year/migration/GeneratorTrait.php:        return $this->extractor;
year/migration/GeneratorTrait.php:        if (!$this->extractor instanceof SqlExtractorInterface) {
year/migration/GeneratorTrait.php:            $db = Instance::ensure($this->db, Connection::class);
year/migration/GeneratorTrait.php:            $configuredObject = Yii::createObject($this->extractorClass, [clone $db, $this->experimental]);
year/migration/GeneratorTrait.php:            $this->extractor = $configuredObject;
year/migration/GeneratorTrait.php:        return $this->extractor;
year/migration/GeneratorTrait.php:        if ($this->structureBuilder === null) {
year/migration/GeneratorTrait.php:            $configuredObject = Yii::createObject($this->structureBuilderClass);
year/migration/GeneratorTrait.php:            $this->structureBuilder = $configuredObject;
year/migration/GeneratorTrait.php:        return $this->structureBuilder;
year/migration/GeneratorTrait.php:        if ($this->comparator === null) {
year/migration/GeneratorTrait.php:            $configuredObject = Yii::createObject($this->comparatorClass, [$this->generalSchema]);
year/migration/GeneratorTrait.php:            $this->comparator = $configuredObject;
year/migration/GeneratorTrait.php:        return $this->comparator;
year/migration/GeneratorTrait.php:        if ($this->inspector === null) {
year/migration/GeneratorTrait.php:                $this->inspectorClass,
year/migration/GeneratorTrait.php:                    $this->getHistoryManager(),
year/migration/GeneratorTrait.php:                    $this->getSqlExtractor(),
year/migration/GeneratorTrait.php:                    $this->getStructureBuilder(),
year/migration/GeneratorTrait.php:                    $this->getComparator()
year/migration/GeneratorTrait.php:            $this->inspector = $configuredObject;
year/migration/GeneratorTrait.php:        return $this->inspector;
year/migration/GeneratorTrait.php:        if ($this->blueprintRenderer === null) {
year/migration/GeneratorTrait.php:                $this->blueprintRendererClass,
year/migration/GeneratorTrait.php:                    Yii::createObject($this->columnRendererClass, [$this->generalSchema]),
year/migration/GeneratorTrait.php:                    Yii::createObject($this->primaryKeyRendererClass, [$this->generalSchema]),
year/migration/GeneratorTrait.php:                    Yii::createObject($this->indexRendererClass),
year/migration/GeneratorTrait.php:                    Yii::createObject($this->foreignKeyRendererClass, [$this->generalSchema])
year/migration/GeneratorTrait.php:            $this->blueprintRenderer = $configuredObject;
year/migration/GeneratorTrait.php:        return $this->blueprintRenderer;
year/migration/GeneratorTrait.php://        if ($this->view === null) {
year/migration/GeneratorTrait.php://            $this->view = Yii::$app->getView();
year/migration/GeneratorTrait.php:        if ($this->updater === null) {
year/migration/GeneratorTrait.php:                $this->updaterClass,
year/migration/GeneratorTrait.php:                    $this->getTableMapper(),
year/migration/GeneratorTrait.php:                    $this->getInspector(),
year/migration/GeneratorTrait.php:                    $this->getBlueprintRenderer(),
year/migration/GeneratorTrait.php:                    $this->view
year/migration/GeneratorTrait.php:            $this->updater = $configuredObject;
year/migration/GeneratorTrait.php:        return $this->updater;
year/queue/CommandJob.php:        // echo $this->cmd ;
year/queue/CommandJob.php:        $temp->runAction($this->cmd, $this->params);
year/behaviors/Themable.php:        $this->configureTheme($action);
year/behaviors/WebApplicationEndBehavior.php:        $app->attachBehavior($this->eventId, new WebApplicationEndBehavior());
year/behaviors/WebApplicationEndBehavior.php:        return $this->_endName;
year/behaviors/WebApplicationEndBehavior.php:        $this->_endName = $name;
year/behaviors/WebApplicationEndBehavior.php:        Yii::$app->on($this->eventId, [$this, 'changeModulePaths']);
year/behaviors/WebApplicationEndBehavior.php:        //  $this->onModuleCreate = array($this, 'changeModulePaths');
year/behaviors/WebApplicationEndBehavior.php:        $this->owner->trigger($this->eventId, new Event(array('sender' => $this->owner)));
year/behaviors/WebApplicationEndBehavior.php:        $this->owner->run(); // Run application.
year/behaviors/WebApplicationEndBehavior.php:        $this->owner->trigger($this->eventId, $event);
year/behaviors/WebApplicationEndBehavior.php:        $appOrModule->viewPath .= DIRECTORY_SEPARATOR.$this->_endName;
year/behaviors/WebApplicationEndBehavior.php:        if($this->themedModule === true && !($appOrModule instanceof Application)){
year/behaviors/EavBehavior.php:        return $this->owner->primaryKey;
year/behaviors/EavBehavior.php:        . $this->tableName
year/behaviors/EavBehavior.php:        . $this->attributesPrefix
year/behaviors/EavBehavior.php:        // . $this->owner->className()->tableName()
year/behaviors/EavBehavior.php:        . $this->owner->tableName()
year/behaviors/EavBehavior.php:        . $this->getModelId();
year/behaviors/EavBehavior.php:            $this->modelTableFk = $modelTableFk;
year/behaviors/EavBehavior.php:        if (empty($this->modelTableFk) || !$this->owner->hasAttribute($this->modelTableFk)) {
year/behaviors/EavBehavior.php:            $this->modelTableFk = $this->owner->primaryKey()[0];
year/behaviors/EavBehavior.php:            if (!is_string($this->modelTableFk)) {
year/behaviors/EavBehavior.php:                            '{table}' => $this->owner->tableName()
year/behaviors/EavBehavior.php:        return $this->modelTableFk;
year/behaviors/EavBehavior.php:        if (!empty($this->attributesPrefix) && strpos($attribute, $this->attributesPrefix) === 0) {
year/behaviors/EavBehavior.php:            $attribute = substr($attribute, strlen($this->attributesPrefix));
year/behaviors/EavBehavior.php:        $this->safeAttributes = $safeAttributes;
year/behaviors/EavBehavior.php:        return count($this->safeAttributes) == 0 ? array_keys($this->attributes) : $this->safeAttributes;
year/behaviors/EavBehavior.php:        // return $this->safeAttributes->count() == 0 ? $this->attributes->keys : $this->safeAttributes->toArray();
year/behaviors/EavBehavior.php:        if (count($this->safeAttributes) > 0) {
year/behaviors/EavBehavior.php:            return in_array($attribute, $this->safeAttributes);
year/behaviors/EavBehavior.php:        $this->attributes = [];
year/behaviors/EavBehavior.php:        // $this->attributes->caseSensitive = TRUE;
year/behaviors/EavBehavior.php:        $this->safeAttributes = [];
year/behaviors/EavBehavior.php:        $this->changedAttributes = [];
year/behaviors/EavBehavior.php:        if (!is_string($this->tableName) || empty($this->tableName)) {
year/behaviors/EavBehavior.php:        $this->cache = new DummyCache();
year/behaviors/EavBehavior.php:        $this->cache =\Yii::$app->get($this->cacheId);
year/behaviors/EavBehavior.php:        if (!($this->cache instanceof Cache)) {
year/behaviors/EavBehavior.php:            $this->cache = new DummyCache();
year/behaviors/EavBehavior.php:        if ($this->preload) {
year/behaviors/EavBehavior.php:            $this->loadEavAttributes($this->getSafeAttributesArray());
year/behaviors/EavBehavior.php:        if (count($this->changedAttributes) > 0) {
year/behaviors/EavBehavior.php:            $this->saveEavAttributes($this->changedAttributes);
year/behaviors/EavBehavior.php:        $this->deleteEavAttributes(array(), TRUE);
year/behaviors/EavBehavior.php:        $this->getDeleteCommand($attributes)->execute();
year/behaviors/EavBehavior.php:            if ( isset($this->attributes[$attribute]) && !is_null($values = $this->attributes[$attribute])) {
year/behaviors/EavBehavior.php:                    $this->getSaveEavAttributeCommand($this->attributesPrefix . $attribute, $value)->execute();
year/behaviors/EavBehavior.php:                $idx = array_search($attributes, $this->changedAttributes);
year/behaviors/EavBehavior.php:                    unset($this->changedAttributes[$idx]);
year/behaviors/EavBehavior.php:        if ($this->attributes->count > 0) {
year/behaviors/EavBehavior.php:            $this->cache->set($this->getCacheKey(), $this->attributes->toArray());
year/behaviors/EavBehavior.php:            $this->cache->delete($this->getCacheKey());
year/behaviors/EavBehavior.php:        return $this->owner;
year/behaviors/EavBehavior.php:        $data = $this->cache->get($this->getCacheKey());
year/behaviors/EavBehavior.php:            // $this->attributes->mergeWith($data, FALSE);
year/behaviors/EavBehavior.php:            $this->attributes = $data;
year/behaviors/EavBehavior.php:            return $this->owner;
year/behaviors/EavBehavior.php:        $data = $this->getLoadEavAttributesCommand($attributes)->query();
year/behaviors/EavBehavior.php:            $attribute = $this->stripPrefix($row[$this->attributeField]);
year/behaviors/EavBehavior.php:            $value = $row[$this->valueField];
year/behaviors/EavBehavior.php:            if (isset($this->attributes[$attribute]) && !is_null($current = $this->attributes[$attribute]) && $current != $value) {
year/behaviors/EavBehavior.php:            $this->attributes[$attribute] = $value;
year/behaviors/EavBehavior.php:        $this->cache->set($this->getCacheKey(), $this->attributes);
year/behaviors/EavBehavior.php:        return $this->owner;
year/behaviors/EavBehavior.php:            $attributes = array_keys($this->attributes);
year/behaviors/EavBehavior.php:            // $this->attributes->remove($attribute);
year/behaviors/EavBehavior.php:            unset($this->attributes[$attribute]);
year/behaviors/EavBehavior.php:            $this->changedAttributes[] = $attribute;
year/behaviors/EavBehavior.php:            //$this->changedAttributes->add($attribute);
year/behaviors/EavBehavior.php:            $this->saveEavAttributes($attributes);
year/behaviors/EavBehavior.php:        return $this->owner;
year/behaviors/EavBehavior.php:            /*$this->attributes->add($attribute, $value);
year/behaviors/EavBehavior.php:            $this->changedAttributes->add($attribute);
year/behaviors/EavBehavior.php:            $this->attributes[$attribute] = $value;
year/behaviors/EavBehavior.php:            $this->changedAttributes[] = $attribute;
year/behaviors/EavBehavior.php:            $this->saveEavAttributes(array_keys($attributes));
year/behaviors/EavBehavior.php:        return $this->owner;
year/behaviors/EavBehavior.php:        return $this->setEavAttributes(array($attribute => $value), $save);
year/behaviors/EavBehavior.php:            $attributes = $this->getSafeAttributesArray();
year/behaviors/EavBehavior.php:            if ($this->hasSafeAttribute($attribute)) {
year/behaviors/EavBehavior.php:                $values[$attribute] = isset($this->attributes[$attribute])? $this->attributes[$attribute] : '' ;
year/behaviors/EavBehavior.php:                if (!$this->preload && $values[$attribute] === NULL) {
year/behaviors/EavBehavior.php:        if (!$this->preload && count($loadQueue) > 0) {
year/behaviors/EavBehavior.php:            $this->loadEavAttributes($loadQueue);
year/behaviors/EavBehavior.php:                $values[$attribute] = $this->attributes[$attribute];
year/behaviors/EavBehavior.php:       /* $_ =  $values = */ $this->getEavAttributes(array($attribute));
year/behaviors/EavBehavior.php:        return isset($this->attributes[$attribute])? $this->attributes[$attribute] : '' ;
year/behaviors/EavBehavior.php:     * $attributes = $this->getSafeAttributesArray();
year/behaviors/EavBehavior.php:     * $criteria = $this->getFindByEavAttributesCriteria($attributes);
year/behaviors/EavBehavior.php:     * $this->getOwner()->getDbCriteria()->mergeWith($criteria);
year/behaviors/EavBehavior.php:     * return $this->getOwner();
year/behaviors/EavBehavior.php:            $this->entityField => $this->getModelId(),
year/behaviors/EavBehavior.php:            $this->attributeField => $attribute,
year/behaviors/EavBehavior.php:            $this->valueField => $value,
year/behaviors/EavBehavior.php:        return $this->owner
year/behaviors/EavBehavior.php:            ->insert($this->tableName, $data);
year/behaviors/EavBehavior.php:        $query->from($this->tableName)
year/behaviors/EavBehavior.php:            ->where([$this->entityField => $this->owner->primaryKey]);
year/behaviors/EavBehavior.php:                $this->attributeField => $attributes,
year/behaviors/EavBehavior.php:        return $query->createCommand($this->owner->getDb());
year/behaviors/EavBehavior.php:         return $this->getOwner()
year/behaviors/EavBehavior.php:             ->createFindCommand($this->tableName, $this->getLoadEavAttributesCriteria($attributes));
year/behaviors/EavBehavior.php:        return $this->owner
year/behaviors/EavBehavior.php:            ->delete($this->tableName, [
year/behaviors/EavBehavior.php:                $this->entityField => $this->getModelId(),
year/behaviors/EavBehavior.php:                $this->attributeField => $attributes,
year/behaviors/EavBehavior.php:     * $criteria->compare($this->entityField, $this->getModelId());
year/behaviors/EavBehavior.php:     * $criteria->addInCondition($this->attributeField, $attributes);
year/behaviors/EavBehavior.php:     * return $this->getLoadEavAttributesCriteria($attributes);
year/behaviors/EavBehavior.php:     * $pk = $this->getModelTableFk();
year/behaviors/EavBehavior.php:     * $conn = $this->getOwner()->getDbConnection();
year/behaviors/EavBehavior.php:     * $criteria->join .= "\nJOIN {$this->tableName} eavb$i"
year/behaviors/EavBehavior.php:     * . "\nON t.{$pk} = eavb$i.{$this->entityField}"
year/behaviors/EavBehavior.php:     * . "\nAND eavb$i.{$this->attributeField} = $attribute"
year/behaviors/EavBehavior.php:     * . "\nAND eavb$i.{$this->valueField} = $value";
year/behaviors/EavBehavior.php:     * $criteria->join .= "\nJOIN {$this->tableName} eavb$i"
year/behaviors/EavBehavior.php:     * . "\nON t.{$pk} = eavb$i.{$this->entityField}"
year/behaviors/EavBehavior.php:     * . "\nAND eavb$i.{$this->attributeField} = $values";
year/db/DynamicActiveRecord.php:        $rules = $this->generateRules($db->getTableSchema(static::tableName()));
year/db/DynamicActiveRecord.php:        $driverName = $this->getDbDriverName();
year/db/DynamicActiveRecord.php:                if (!$this->isColumnAutoIncremental($table, $uniqueColumns)) {
year/db/DynamicActiveRecord.php:            $refClassName = $this->generateClassName($refTable);
year/behaviors/eav.md:            return $this->getOwner()->{$this->getModelTableFk()};
year/behaviors/eav.md:            return __CLASS__ . $this->tableName . $this->attributesPrefix . $this->getOwner()->tableName() . $this->getModelId();
year/behaviors/eav.md:                $this->modelTableFk = $modelTableFk;
year/behaviors/eav.md:            if (empty($this->modelTableFk) || !$this->getOwner()->hasAttribute($this->modelTableFk)) {
year/behaviors/eav.md:                $this->modelTableFk = $this->getOwner()->getTableSchema()->primaryKey;
year/behaviors/eav.md:                if(!is_string($this->modelTableFk)) {
year/behaviors/eav.md:                        array('{table}' => $this->getOwner()->getTableSchema())));
year/behaviors/eav.md:            return $this->modelTableFk;
year/behaviors/eav.md:            if (!empty($this->attributesPrefix) && strpos($attribute, $this->attributesPrefix) === 0) {
year/behaviors/eav.md:                $attribute = substr($attribute, strlen($this->attributesPrefix));
year/behaviors/eav.md:            $this->safeAttributes->copyFrom($safeAttributes);
year/behaviors/eav.md:            return $this->safeAttributes->count() == 0 ? $this->attributes->keys : $this->safeAttributes->toArray();
year/behaviors/eav.md:            if ($this->safeAttributes->count() > 0) {
year/behaviors/eav.md:                return $this->safeAttributes->contains($attribute);
year/behaviors/eav.md:            $this->attributes = new CAttributeCollection;
year/behaviors/eav.md:            $this->attributes->caseSensitive = TRUE;
year/behaviors/eav.md:            $this->safeAttributes = new CList;
year/behaviors/eav.md:            $this->changedAttributes = new CList;
year/behaviors/eav.md:            if (!is_string($this->tableName) || empty($this->tableName)) {
year/behaviors/eav.md:            $this->cache = Yii::app()->getComponent($this->cacheId);
year/behaviors/eav.md:            if (!($this->cache instanceof ICache)) {
year/behaviors/eav.md:                $this->cache = new CDummyCache;
year/behaviors/eav.md:            if ($this->changedAttributes->count > 0) {
year/behaviors/eav.md:                $this->saveEavAttributes($this->changedAttributes->toArray());
year/behaviors/eav.md:            $this->deleteEavAttributes(array(), TRUE);
year/behaviors/eav.md:            if ($this->preload) {
year/behaviors/eav.md:                $this->loadEavAttributes($this->getSafeAttributesArray());
year/behaviors/eav.md:            $this->getDeleteCommand($attributes)->execute();
year/behaviors/eav.md:                if (!is_null($values = $this->attributes->itemAt($attribute))) {
year/behaviors/eav.md:                        $this->getSaveEavAttributeCommand($this->attributesPrefix . $attribute, $value)->execute();
year/behaviors/eav.md:                    $this->changedAttributes->remove($attribute);
year/behaviors/eav.md:            if ($this->attributes->count > 0) {
year/behaviors/eav.md:                $this->cache->set($this->getCacheKey(), $this->attributes->toArray());
year/behaviors/eav.md:                $this->cache->delete($this->getCacheKey());
year/behaviors/eav.md:            return $this->getOwner();
year/behaviors/eav.md:            $data = $this->cache->get($this->getCacheKey());
year/behaviors/eav.md:                $this->attributes->mergeWith($data, FALSE);
year/behaviors/eav.md:                return $this->getOwner();
year/behaviors/eav.md:            $data = $this->getLoadEavAttributesCommand($attributes)->query();
year/behaviors/eav.md:                $attribute = $this->stripPrefix($row[$this->attributeField]);
year/behaviors/eav.md:                $value = $row[$this->valueField];
year/behaviors/eav.md:                if (!is_null($current = $this->attributes->itemAt($attribute)) && $current != $value) {
year/behaviors/eav.md:                $this->attributes->add($attribute, $value);
year/behaviors/eav.md:            $this->cache->set($this->getCacheKey(), $this->attributes->toArray());
year/behaviors/eav.md:            return $this->getOwner();
year/behaviors/eav.md:                $attributes = $this->attributes->keys;
year/behaviors/eav.md:                $this->attributes->remove($attribute);
year/behaviors/eav.md:                $this->changedAttributes->add($attribute);
year/behaviors/eav.md:                $this->saveEavAttributes($attributes);
year/behaviors/eav.md:            return $this->getOwner();
year/behaviors/eav.md:                $this->attributes->add($attribute, $value);
year/behaviors/eav.md:                $this->changedAttributes->add($attribute);
year/behaviors/eav.md:                $this->saveEavAttributes(array_keys($attributes));
year/behaviors/eav.md:            return $this->getOwner();
year/behaviors/eav.md:            return $this->setEavAttributes(array($attribute => $value), $save);
year/behaviors/eav.md:                $attributes = $this->getSafeAttributesArray();
year/behaviors/eav.md:                if ($this->hasSafeAttribute($attribute)) {
year/behaviors/eav.md:                    $values[$attribute] = $this->attributes->itemAt($attribute);
year/behaviors/eav.md:                    if (!$this->preload && $values[$attribute] === NULL) {
year/behaviors/eav.md:            if (!$this->preload && $loadQueue->count() > 0) {
year/behaviors/eav.md:                $this->loadEavAttributes($loadQueue->toArray());
year/behaviors/eav.md:                    $values[$attribute] = $this->attributes->itemAt($attribute);
year/behaviors/eav.md:            $values = $this->getEavAttributes(array($attribute));
year/behaviors/eav.md:            return $this->attributes->itemAt($attribute);
year/behaviors/eav.md:                $attributes = $this->getSafeAttributesArray();
year/behaviors/eav.md:            $criteria = $this->getFindByEavAttributesCriteria($attributes);
year/behaviors/eav.md:            $this->getOwner()->getDbCriteria()->mergeWith($criteria);
year/behaviors/eav.md:            return $this->getOwner();
year/behaviors/eav.md:                $this->entityField => $this->getModelId(),
year/behaviors/eav.md:                $this->attributeField => $attribute,
year/behaviors/eav.md:                $this->valueField => $value,
year/behaviors/eav.md:            return $this->getOwner()
year/behaviors/eav.md:                ->createInsertCommand($this->tableName, $data);
year/behaviors/eav.md:            return $this->getOwner()
year/behaviors/eav.md:                ->createFindCommand($this->tableName, $this->getLoadEavAttributesCriteria($attributes));
year/behaviors/eav.md:            return $this->getOwner()
year/behaviors/eav.md:                ->createDeleteCommand($this->tableName, $this->getDeleteEavAttributesCriteria($attributes));
year/behaviors/eav.md:            $criteria->compare($this->entityField, $this->getModelId());
year/behaviors/eav.md:                $criteria->addInCondition($this->attributeField, $attributes);
year/behaviors/eav.md:            return $this->getLoadEavAttributesCriteria($attributes);
year/behaviors/eav.md:            $pk = $this->getModelTableFk();
year/behaviors/eav.md:            $conn = $this->getOwner()->getDbConnection();
year/behaviors/eav.md:                        $criteria->join .= "\nJOIN {$this->tableName} eavb$i"
year/behaviors/eav.md:                                        .  "\nON t.{$pk} = eavb$i.{$this->entityField}"
year/behaviors/eav.md:                                        .  "\nAND eavb$i.{$this->attributeField} = $attribute"
year/behaviors/eav.md:                                        .  "\nAND eavb$i.{$this->valueField} = $value";
year/behaviors/eav.md:                    $criteria->join .= "\nJOIN {$this->tableName} eavb$i"
year/behaviors/eav.md:                                    .  "\nON t.{$pk} = eavb$i.{$this->entityField}"
year/behaviors/eav.md:                                    .  "\nAND eavb$i.{$this->attributeField} = $values";
my/doc-output/assets/68584004/lib/Indexer.php:		$fi = count($this->files);
my/doc-output/assets/68584004/lib/Indexer.php:			$this->files[$fi] = $this->generateFileInfo($file, $contents, $basePath, $baseUrl);
my/doc-output/assets/68584004/lib/Indexer.php:			foreach($this->getAnalyzer()->analyze($contents, $this->getTokenizer()) as $index) {
my/doc-output/assets/68584004/lib/Indexer.php:					if (isset($this->index[$word['t']][$fi])) {
my/doc-output/assets/68584004/lib/Indexer.php:						$this->index[$word['t']][$fi]['w'] *= $word['w'];
my/doc-output/assets/68584004/lib/Indexer.php:						$this->index[$word['t']][$fi] = [
my/doc-output/assets/68584004/lib/Indexer.php:		foreach($this->index as $word => $files) {
my/doc-output/assets/68584004/lib/Indexer.php:			$this->index[$word] = array_values($files);
my/doc-output/assets/68584004/lib/Indexer.php:		$index = json_encode($this->index);
my/doc-output/assets/68584004/lib/Indexer.php:		$files = json_encode($this->files);
my/doc-output/assets/68584004/lib/Indexer.php:		$tokenizeString = $this->getTokenizer()->tokenizeJs();
my/doc-output/assets/68584004/lib/Indexer.php:		if ($this->_tokenizer === null) {
my/doc-output/assets/68584004/lib/Indexer.php:			$this->_tokenizer = new StandardTokenizer();
my/doc-output/assets/68584004/lib/Indexer.php:		return $this->_tokenizer;
my/doc-output/assets/68584004/lib/Indexer.php:		$this->_tokenizer = $tokenizer;
my/doc-output/assets/68584004/lib/Indexer.php:		if ($this->_analyzer === null) {
my/doc-output/assets/68584004/lib/Indexer.php:			$this->_analyzer = new HtmlAnalyzer();
my/doc-output/assets/68584004/lib/Indexer.php:		return $this->_analyzer;
my/doc-output/assets/68584004/lib/Indexer.php:		$this->_analyzer = $analyzer;
my/doc-output/assets/68584004/lib/analyzer/HtmlAnalyzer.php:			$this->findText($string, '~<h(\d)>(.*?)</h\1>~s',   ['text' => 2, 'weight' => 1], $tokenizer, function($w, $h) { return $w * ($this->headWeight - $h) / 10; }),
my/doc-output/assets/68584004/lib/analyzer/HtmlAnalyzer.php:			$this->findText($string, '~<title>(.*?)</title>~s', ['text' => 1], $tokenizer, $this->titleWeight),
my/doc-output/assets/68584004/lib/analyzer/HtmlAnalyzer.php:			$this->findText($string, '~<p>(.*?|(?R))</p>~s',    ['text' => 1], $tokenizer, $this->textWeight),
my/doc-output/assets/68584004/lib/analyzer/HtmlAnalyzer.php:			$this->findText($string, '~<(th|td|li|dd|dt)>(.*?)</\1>~s', ['text' => 2], $tokenizer, $this->textWeight)
year/db/EasyQuery.php:            $this->_tableName = $tableNameOrAr;
year/db/EasyQuery.php:            $this->_tableName = $tableNameOrAr->tableName();
year/db/EasyQuery.php:        $this->_db = empty($db) ? Yii::app()->db : $db;
year/db/EasyQuery.php:        $this->_fetchMode = $fetchMode;
year/db/EasyQuery.php:        return $this->_fetchMode;
year/db/EasyQuery.php:                $criteria['from'] = $this->_tableName;
year/db/EasyQuery.php:            $criteria['from'] = $this->_tableName;
year/db/EasyQuery.php:        $this->_lastCommand = $this->_db->createCommand($criteria);
year/db/EasyQuery.php:        $this->_lastCommand->setFetchMode($this->_fetchMode);
year/db/EasyQuery.php:        return $this->_lastCommand->query($params);
year/db/EasyQuery.php:                $criteria['from'] = $this->_tableName;
year/db/EasyQuery.php:            $criteria['from'] = $this->_tableName;
year/db/EasyQuery.php:        $this->_lastCommand = $this->_db->createCommand($criteria);
year/db/EasyQuery.php:        return $this->_lastCommand->queryAll($this->_fetchMode, $params);
year/db/EasyQuery.php:                $criteria['from'] = $this->_tableName;
year/db/EasyQuery.php:            $criteria['from'] = $this->_tableName;
year/db/EasyQuery.php:        $this->_lastCommand = $this->_db->createCommand($criteria);
year/db/EasyQuery.php:        return $this->_lastCommand->queryRow($this->_fetchMode, $params);
year/db/EasyQuery.php:                $criteria['from'] = $this->_tableName;
year/db/EasyQuery.php:            $criteria['from'] = $this->_tableName;
year/db/EasyQuery.php:        $this->_lastCommand = $this->_db->createCommand($criteria);
year/db/EasyQuery.php:        return $this->_lastCommand->queryColumn($params);
year/db/EasyQuery.php:                $criteria['from'] = $this->_tableName;
year/db/EasyQuery.php:            $criteria['from'] = $this->_tableName;
year/db/EasyQuery.php:        $this->_lastCommand = $this->_db->createCommand($criteria);
year/db/EasyQuery.php:        return $this->_lastCommand->queryScalar($params);
year/db/EasyQuery.php:        return $this->queryRow($condition,$params) !== false ;
year/db/EasyQuery.php:            $criteria['from'] = $this->_tableName;
year/db/EasyQuery.php:            return $this->_db->createCommand($criteria)->query($params);
year/db/EasyQuery.php:            return $this->_db->createCommand($criteria)->queryAll($this->_fetchMode, $params);
year/db/EasyQuery.php:        return $this->_db->createCommand()->insert($this->_tableName, $columns);
year/db/EasyQuery.php:        return $this->_db->createCommand()->update($this->_tableName, $columns, $conditions, $params);
year/db/EasyQuery.php:        return $this->_db->createCommand()->delete($this->_tableName, $conditions, $params);
year/db/EasyQuery.php:        $rtn = $this->_db->createCommand()->renameTable($this->_tableName, $newName);
year/db/EasyQuery.php:        $this->_tableName = $newName;
year/db/EasyQuery.php:        return $this->_db->createCommand()->dropTable($this->_tableName);
year/db/EasyQuery.php:        return $this->_db->createCommand()->truncateTable($this->_tableName);
year/db/EasyQuery.php:        return $this->_db->createCommand()->addColumn($this->_tableName, $column, $type);
year/db/EasyQuery.php:        return $this->_db->createCommand()->dropColumn($this->_tableName, $column);
year/db/EasyQuery.php:        return $this->_db->createCommand()->renameColumn($this->_tableName, $name, $newName);
year/db/EasyQuery.php:        return $this->_db->createCommand()->alterColumn($this->_tableName, $column, $type);
year/db/EasyQuery.php:        return $this->_db->createCommand()->dropForeignKey($name, $this->_tableName);
year/db/EasyQuery.php:        return $this->_db->createCommand()->createIndex($name, $this->_tableName, $column, $unique);
year/db/EasyQuery.php:        return $this->_db->createCommand()->dropIndex($name, $this->_tableName);
year/db/EasyQuery.php:            $criteria['from'] = $this->_tableName;
year/db/EasyQuery.php:        $dbCmd =  $this->_db->createCommand($criteria);
year/db/EasyQuery.php:        $config['totalItemCount'] = $this->countBySql($tmpSql,$params);
year/db/EasyQuery.php:                $count += $this->countBySql($selectSql,$params);
year/db/EasyQuery.php:            return  $this->_db->createCommand($selectStr)->queryScalar($params);
my/doc-output/assets/68584004/lib/tokenizer/StandardTokenizer.php:		$delimiters = preg_quote($this->delimiters, '/');
my/doc-output/assets/68584004/lib/tokenizer/StandardTokenizer.php:				return !in_array($word, $this->stopWords);
my/doc-output/assets/68584004/lib/tokenizer/StandardTokenizer.php:		$delimiters = preg_quote($this->delimiters, '/');
my/doc-output/assets/68584004/lib/tokenizer/StandardTokenizer.php:		$stopWords = json_encode($this->stopWords);
year/map/baidu/views/coordinate-picker.php:        'callback'=>$this->context->callback,
year/map/baidu/views/picker-iframe-content.php:<?php $this->beginPage() ?>
year/map/baidu/views/picker-iframe-content.php:    <?php $this->head() ?>
year/map/baidu/views/picker-iframe-content.php:<?php $this->beginBody() ?>
year/map/baidu/views/picker-iframe-content.php:<?php $this->endBody() ?>
year/map/baidu/views/picker-iframe-content.php:<?php $this->endPage() ?>
year/easyui/Sort.php:        if ($this->_attributeOrders === null || $recalculate) {
year/easyui/Sort.php:            $this->_attributeOrders = [];
year/easyui/Sort.php:            if (($params = $this->params) === null) {
year/easyui/Sort.php:               'sort'=>$params[$this->sortParam],
year/easyui/Sort.php:                'order'=>$params[$this->orderParam],
year/easyui/Sort.php:            if (isset($params[$this->sortParam]) && is_scalar($params[$this->sortParam])) {
year/easyui/Sort.php:                $attributes = explode($this->separator, $params[$this->sortParam]);
year/easyui/Sort.php:                $orders = explode($this->separator,$params[$this->orderParam]);
year/easyui/Sort.php:                    if (isset($this->attributes[$attribute])) {
year/easyui/Sort.php:                        $this->_attributeOrders[$attribute] = $descending ? SORT_DESC : SORT_ASC;
year/easyui/Sort.php:                        if (!$this->enableMultiSort) {
year/easyui/Sort.php:                            return $this->_attributeOrders;
year/easyui/Sort.php:                    $this->_attributeOrders[$attribute] = $descending ? SORT_DESC : SORT_ASC;
year/easyui/Sort.php:                    if (!$this->enableMultiSort) {
year/easyui/Sort.php:                        return $this->_attributeOrders;
year/easyui/Sort.php:                    if (isset($this->attributes[$attribute])) {
year/easyui/Sort.php:                        $this->_attributeOrders[$attribute] = $descending ? SORT_DESC : SORT_ASC;
year/easyui/Sort.php:                        if (!$this->enableMultiSort) {
year/easyui/Sort.php:                            return $this->_attributeOrders;
year/easyui/Sort.php:            if (empty($this->_attributeOrders) && is_array($this->defaultOrder)) {
year/easyui/Sort.php:                $this->_attributeOrders = $this->defaultOrder;
year/easyui/Sort.php:        return $this->_attributeOrders;
year/map/amap/views/coordinate-picker.php:        'callback'=>$this->context->callback,
year/map/baidu/views/coordinate-picker-v0.php:        'callback'=>$this->context->callback,
year/map/amap/GeoCoordinatePicker.php:            'trigger'=>$this->trigger ,
year/map/amap/GeoCoordinatePicker.php:            'callback'=> empty($callback)? $this->callback : $callback,
year/map/amap/GeoCoordinatePicker.php:        if(empty($this->trigger)){
year/map/amap/GeoCoordinatePicker.php:            return $this->render('picker-iframe-content',
year/map/amap/GeoCoordinatePicker.php:            return $this->render('coordinate-picker',[
year/map/baidu/BMapAsset.php:        $this->sourcePath = __DIR__.'/assets';
year/map/baidu/BMap.php:        if (empty($this->ak)) {
year/map/baidu/BMap.php:        BMapAsset::register($this->view) ;
year/map/baidu/BMap.php:            'v' => $this->v,
year/map/baidu/BMap.php:            'ak' => $this->ak,
year/map/baidu/BMap.php:        $this->view->registerJsFile($jsSrc, ['position' => $this->jsPos]);
year/map/baidu/BMap.php:        $this->view->registerJsFile('//api.map.baidu.com/library/SearchInfoWindow/1.5/src/SearchInfoWindow_min.js', ['position' => $this->jsPos]);
year/map/baidu/GeoCoordinatePicker.php:            'trigger'=>$this->trigger ,
year/map/baidu/GeoCoordinatePicker.php:            'callback'=> empty($callback)? $this->callback : $callback,
year/map/baidu/GeoCoordinatePicker.php:        if(empty($this->trigger)){
year/map/baidu/GeoCoordinatePicker.php:            return $this->render('picker-iframe-content',
year/map/baidu/GeoCoordinatePicker.php:            return $this->render('coordinate-picker',[
year/map/amap/views/coordinate-picker-v0.php:        'callback'=>$this->context->callback,
year/status/migrations/m140731_162607_init_status_module.php:        $tableOptions = $this->getTableOptions() ;
year/status/migrations/m140731_162607_init_status_module.php:        $this->createTable('{{%status}}', [
year/status/migrations/m140731_162607_init_status_module.php:        $this->createIndex('idx_status_create_at', '{{%status}}', 'create_at', false);
year/status/migrations/m140731_162607_init_status_module.php:        $this->createTable('{{%status_plugin}}', [
year/status/migrations/m140731_162607_init_status_module.php:        $this->addPrimaryKey('pk_status_plugin_id', '{{%status_plugin}}', 'id');
year/status/migrations/m140731_162607_init_status_module.php:        $this->dropTable('{{%status}}');
year/status/migrations/m140731_162607_init_status_module.php:        $this->dropTable('{{%status_plugin}}');
year/status/controllers/SpaceController.php:        return $this->render('index');
year/status/controllers/StatusController.php:        return $this->render('index', [
year/status/controllers/StatusController.php:        return $this->render('view', [
year/status/controllers/StatusController.php:            'model' => $this->findModel($id),
year/status/controllers/StatusController.php:            return $this->redirect(['view', 'id' => $model->id]);
year/status/controllers/StatusController.php:            return $this->render('create', [
year/status/controllers/StatusController.php:        $model = $this->findModel($id);
year/status/controllers/StatusController.php:            return $this->redirect(['view', 'id' => $model->id]);
year/status/controllers/StatusController.php:            return $this->render('update', [
year/status/controllers/StatusController.php:        $this->findModel($id)->delete();
year/status/controllers/StatusController.php:        return $this->redirect(['index']);
year/status/views/status/create.php:$this->title = Yii::t('status', 'Create {modelClass}', [
year/status/views/status/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('status', 'Statuses'), 'url' => ['index']];
year/status/views/status/create.php:$this->params['breadcrumbs'][] = $this->title;
year/status/views/status/create.php:    <h1><?= Html::encode($this->title) ?></h1>
year/status/views/status/create.php:    <?= $this->render('_form', [
year/status/views/space/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
year/status/views/space/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
year/status/views/space/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
year/status/views/space/index.php:        in the "<?= $this->context->module->id ?>" module.
year/status/views/my/create.php:$this->title = Yii::t('status', 'Create {modelClass}', [
year/status/views/my/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('status', 'Statuses'), 'url' => ['index']];
year/status/views/my/create.php:$this->params['breadcrumbs'][] = $this->title;
year/status/views/my/create.php:    <h1><?= Html::encode($this->title) ?></h1>
year/status/views/my/create.php:    <?= $this->render('_form', [
year/status/views/status/index.php:$this->title = Yii::t('status', 'Statuses');
year/status/views/status/index.php:$this->params['breadcrumbs'][] = $this->title;
year/status/views/status/index.php:    <h1><?= Html::encode($this->title) ?></h1>
year/status/views/status/index.php:    <?php echo $this->render('_search', ['model' => $searchModel]); ?>
year/status/views/status/update.php:$this->title = Yii::t('status', 'Update {modelClass}: ', [
year/status/views/status/update.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('status', 'Statuses'), 'url' => ['index']];
year/status/views/status/update.php:$this->params['breadcrumbs'][] = ['label' => $model->id, 'url' => ['view', 'id' => $model->id]];
year/status/views/status/update.php:$this->params['breadcrumbs'][] = Yii::t('status', 'Update');
year/status/views/status/update.php:    <h1><?= Html::encode($this->title) ?></h1>
year/status/views/status/update.php:    <?= $this->render('_form', [
year/status/views/status/view.php:$this->title = $model->id;
year/status/views/status/view.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('status', 'Statuses'), 'url' => ['index']];
year/status/views/status/view.php:$this->params['breadcrumbs'][] = $this->title;
year/status/views/status/view.php:    <h1><?= Html::encode($this->title) ?></h1>
year/status/controllers/MyController.php:            return $this->redirect(['view', 'id' => $model->id]);
year/status/controllers/MyController.php:            return $this->render('create', [
year/status/views/layouts/space.php:<?php $this->beginContent('@year/user/views/layouts/space.php') ?>
year/status/views/layouts/space.php:<?php $this->endContent() ?>
year/status/models/StatusSearch.php:        if (!($this->load($params) && $this->validate())) {
year/status/models/StatusSearch.php:            'id' => $this->id,
year/status/models/StatusSearch.php:            'creator_id' => $this->creator_id,
year/status/models/StatusSearch.php:            'create_at' => $this->create_at,
year/status/models/StatusSearch.php:            'profile_id' => $this->profile_id,
year/status/models/StatusSearch.php:            'approved' => $this->approved,
year/status/models/StatusSearch.php:        $query->andFilterWhere(['like', 'content', $this->content])
year/status/models/StatusSearch.php:            ->andFilterWhere(['like', 'type', $this->type]);
year/captcha/gregwar/CaptchaAction.php:            return $this->renderImageByGD($code);
year/captcha/gregwar/CaptchaAction.php:            return $this->renderImageByImagick($code);
year/captcha/gregwar/CaptchaAction.php:        $builder->build($this->width,$this->height);
year/payment/CCB.php:        $this->MERCHANTID = '';
year/payment/CCB.php:        $this->POSID = '';
year/payment/CCB.php:        $this->BRANCHID = '';
year/payment/CCB.php:        $this->ORDERID = $order_sn;
year/payment/CCB.php:        $this->PAYMENT = $payment;
year/payment/CCB.php:        $this->CURCODE = '01';
year/payment/CCB.php:        $this->TXCODE = '';
year/payment/CCB.php:        $this->REMARK1 = '';
year/payment/CCB.php:        $this->REMARK2 = $order_sn;
year/payment/CCB.php:        $this->bankURL = 'https://ibsbjstar.ccb.com.cn/app/ccbMain';
year/payment/CCB.php:        $this->TYPE = 1;
year/payment/CCB.php:        $this->PUB32TR2 = substr($this->pubstr, -30);
year/payment/CCB.php:        $this->GATEWAY = '';
year/payment/CCB.php:        $this->CLIENTIP = real_ip();   //可以自己写个方法，我这里自己调用系统里
year/payment/CCB.php:        $this->REGINFO = '';
year/payment/CCB.php:        $this->PROINFO = '';
year/payment/CCB.php:        $this->REFERER = '';
year/payment/CCB.php:        return $this->$name;
year/payment/CCB.php:        $this->tmp .='MERCHANTID='.$this->MERCHANTID.'&POSID='.$this->POSID.'&BRANCHID='.$this->BRANCHID.'&ORDERID='.$this->ORDERID.'&PAYMENT='.$this->PAYMENT.'&CURCODE='.$this->CURCODE.'&TXCODE='.$this->TXCODE.'&REMARK1='.$this->REMARK1.'&REMARK2='.$this->REMARK2;
year/payment/CCB.php:        $this->temp_New .=$this->tmp."&TYPE=".$this->TYPE."&PUB=".$this->PUB32TR2."&GATEWAY=".$this->GATEWAY."&CLIENTIP=".$this->CLIENTIP."®INFO=".$this->REGINFO."&PROINFO=".$this->PROINFO."&REFERER=".$this->REFERER;
year/payment/CCB.php:        $this->temp_New1 .=$this->tmp."&TYPE=".$this->TYPE."&GATEWAY=".$this->GATEWAY."&CLIENTIP=".$this->CLIENTIP."®INFO=".$this->REGINFO."&PROINFO=".$this->PROINFO."&REFERER=".$this->REFERER;
year/payment/CCB.php:        $strMD5 = md5($this->temp_New);
year/payment/CCB.php:        $this->URL .= $this->bankURL."?".$this->temp_New1."&MAC=".$strMD5;
year/payment/CCB.php:        return $this->URL;
year/payment/CCB.php:            fwrite($fp, $this->getUrl());
year/web/View.php:        $this->jsBlocks[$pos][] = $blockId ;
year/web/View.php:        if (!empty($this->metaTags)) {
year/web/View.php:            $lines[] = implode("\n", $this->metaTags);
year/web/View.php:        if (!empty($this->linkTags)) {
year/web/View.php:            $lines[] = implode("\n", $this->linkTags);
year/web/View.php:        if (!empty($this->cssFiles)) {
year/web/View.php:            $lines[] = implode("\n", $this->cssFiles);
year/web/View.php:        if (!empty($this->css)) {
year/web/View.php:            $lines[] = implode("\n", $this->css);
year/web/View.php:        if (!empty($this->jsFiles[self::POS_HEAD])) {
year/web/View.php:            $lines[] = implode("\n", $this->jsFiles[self::POS_HEAD]);
year/web/View.php:        if (!empty($this->js[self::POS_HEAD])) {
year/web/View.php:            if(!empty($this->jsBlocks[self::JS_BLOCK_POS_BEGIN])){
year/web/View.php:                foreach($this->jsBlocks[self::JS_BLOCK_POS_BEGIN] as $blockId){
year/web/View.php:                    $lines[] = $this->blocks[$blockId];
year/web/View.php:            $lines[] = Html::script(implode("\n", $this->js[self::POS_HEAD]), ['type' => 'text/javascript']);
year/web/View.php:            if(!empty($this->jsBlocks[self::JS_BLOCK_POS_END])){
year/web/View.php:                foreach($this->jsBlocks[self::JS_BLOCK_POS_END] as $blockId){
year/web/View.php:                    $lines[] = $this->blocks[$blockId];
year/web/AjaxPartialAction.php:       return $this->renderAjax($view);
year/uikit/core/Pagination.php:            Html::addCssClass($options, $this->activePageCssClass);
year/uikit/core/Pagination.php:            Html::addCssClass($options, $this->disabledPageCssClass);
year/uikit/core/Pagination.php:        $linkOptions = $this->linkOptions;
year/uikit/core/Pagination.php:        return Html::tag('li', Html::a($label, $this->pagination->createUrl($page), $linkOptions), $options);
year/web/yii2-layout/map/Map.php:            $this->copyFrom($data);
year/web/yii2-layout/map/Map.php:        $this->setReadOnly($readOnly);
year/web/yii2-layout/map/Map.php:        return $this->_r;
year/web/yii2-layout/map/Map.php:        $this->_r = $value;
year/web/yii2-layout/map/Map.php:        return new MapIterator($this->_d);
year/web/yii2-layout/map/Map.php:        return $this->getCount();
year/web/yii2-layout/map/Map.php:        return count($this->_d);
year/web/yii2-layout/map/Map.php:        return array_keys($this->_d);
year/web/yii2-layout/map/Map.php:        if (isset($this->_d[$key]))
year/web/yii2-layout/map/Map.php:            return $this->_d[$key];
year/web/yii2-layout/map/Map.php:        if (!$this->_r) {
year/web/yii2-layout/map/Map.php:                $this->_d[] = $value;
year/web/yii2-layout/map/Map.php:                $this->_d[$key] = $value;
year/web/yii2-layout/map/Map.php:        if (!$this->_r) {
year/web/yii2-layout/map/Map.php:            if (isset($this->_d[$key])) {
year/web/yii2-layout/map/Map.php:                $value = $this->_d[$key];
year/web/yii2-layout/map/Map.php:                unset($this->_d[$key]);
year/web/yii2-layout/map/Map.php:                unset($this->_d[$key]);
year/web/yii2-layout/map/Map.php:        foreach (array_keys($this->_d) as $key)
year/web/yii2-layout/map/Map.php:            $this->remove($key);
year/web/yii2-layout/map/Map.php:        return isset($this->_d[$key]) || array_key_exists($key, $this->_d);
year/web/yii2-layout/map/Map.php:        return $this->_d;
year/web/yii2-layout/map/Map.php:            if ($this->getCount() > 0)
year/web/yii2-layout/map/Map.php:                $this->clear();
year/web/yii2-layout/map/Map.php:                $this->add($key, $value);
year/web/yii2-layout/map/Map.php:                    $this->_d = self::mergeArray($this->_d, $d);
year/web/yii2-layout/map/Map.php:                    $this->_d = self::mergeArray($this->_d, $data);
year/web/yii2-layout/map/Map.php:                    $this->add($key, $value);
year/web/yii2-layout/map/Map.php:        return $this->contains($offset);
year/web/yii2-layout/map/Map.php:        return $this->itemAt($offset);
year/web/yii2-layout/map/Map.php:        $this->add($offset, $item);
year/web/yii2-layout/map/Map.php:        $this->remove($offset);
year/web/yii2-layout/Layout.php:        // $this->regions = new CMap;
year/web/yii2-layout/Layout.php:        $this->regions = new Map();
year/web/yii2-layout/map/MapIterator.php:        $this->_d=&$data;
year/web/yii2-layout/map/MapIterator.php:        $this->_keys=array_keys($data);
year/web/yii2-layout/map/MapIterator.php:        $this->_key=reset($this->_keys);
year/web/yii2-layout/map/MapIterator.php:        $this->_key=reset($this->_keys);
year/web/yii2-layout/map/MapIterator.php:        return $this->_key;
year/web/yii2-layout/map/MapIterator.php:        return $this->_d[$this->_key];
year/web/yii2-layout/map/MapIterator.php:        $this->_key=next($this->_keys);
year/web/yii2-layout/map/MapIterator.php:        return $this->_key!==false;
year/jsTpl/ArtTemplateAsset.php:        if(empty($this->js)){
year/jsTpl/ArtTemplateAsset.php:            $this->js = [
year/user/widgets/LatestUsers.php:        $query->limit($this->limit)
year/user/widgets/LatestUsers.php:       return   $this->render('latestUsers',['users'=>$users]);
year/user/views/layouts/center.php:<?php $this->beginContent('//layouts/main') ?>
year/user/views/layouts/center.php:<?php $this->endContent() ?>
year/user/views/layouts/space.php:<?php $this->beginContent('@app/views/layouts/main.php') ?>
year/user/views/layouts/space.php:<?php $this->endContent() ?>
year/web/CSRF4Ajax.php:    $this->extendAjax() ;
year/web/CSRF4Ajax.php:        $this->view->registerJs($js);
year/web/yii2-layout/LayoutBlock.php:        $this->setId($id);
year/web/yii2-layout/LayoutBlock.php:        $this->setContent($content);
year/web/yii2-layout/LayoutBlock.php:        $this->setWeight($weight);
year/web/yii2-layout/LayoutBlock.php:        $this->setVisible($visible);
year/web/yii2-layout/LayoutBlock.php:        $this->setHtmlOptions($htmlOptions);
year/web/yii2-layout/LayoutBlock.php:        $this->setTagName($tagName);
year/web/yii2-layout/LayoutBlock.php:        return $this->_id;
year/web/yii2-layout/LayoutBlock.php:        return $this->_content;
year/web/yii2-layout/LayoutBlock.php:        return $this->_weight;
year/web/yii2-layout/LayoutBlock.php:        return $this->_visible;
year/web/yii2-layout/LayoutBlock.php:        return $this->_tagName;
year/web/yii2-layout/LayoutBlock.php:        $this->_id = $id;
year/web/yii2-layout/LayoutBlock.php:        $this->_content = $content;
year/web/yii2-layout/LayoutBlock.php:        $this->_weight = (int)$weight;
year/web/yii2-layout/LayoutBlock.php:            $this->_htmlOptions = ArrayHelper::merge($this->_htmlOptions, $htmlOptions);
year/web/yii2-layout/LayoutBlock.php:            $this->_htmlOptions = $htmlOptions;
year/web/yii2-layout/LayoutBlock.php:        $this->_tagName = $tagName;
year/web/yii2-layout/LayoutBlock.php:        $this->_visible = $visible;
year/web/yii2-layout/LayoutBlock.php:        $block = $this->_content;
year/web/yii2-layout/LayoutBlock.php:            $block = Html::beginTag($this->_tagName, ArrayHelper::merge($this->_defaultHtmlOptions, $this->_htmlOptions))
year/web/yii2-layout/LayoutBlock.php:                . Html::endTag($this->_tagName);
year/user/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
year/user/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
year/user/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
year/user/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
year/user/views/signup/view.php:$this->title = $model->id;
year/user/views/signup/view.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Users'), 'url' => ['index']];
year/user/views/signup/view.php:$this->params['breadcrumbs'][] = $this->title;
year/user/views/signup/view.php:    <h1><?= Html::encode($this->title) ?></h1>
year/user/views/signup/index.php:$this->title = Yii::t('app', 'Users');
year/user/views/signup/index.php:$this->params['breadcrumbs'][] = $this->title;
year/user/views/signup/index.php:    <h1><?= Html::encode($this->title) ?></h1>
year/user/views/signup/index.php:    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>
year/user/views/signup/create.php:$this->title = Yii::t('app', 'Create {modelClass}', [
year/user/views/signup/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Users'), 'url' => ['index']];
year/user/views/signup/create.php:$this->params['breadcrumbs'][] = $this->title;
year/user/views/signup/create.php:    <h1><?= Html::encode($this->title) ?></h1>
year/user/views/signup/create.php:    <?= $this->render('_form', [
year/user/views/auth/login.php:$this->title = 'Login';
year/user/views/auth/login.php:$this->params['breadcrumbs'][] = $this->title;
year/user/views/auth/login.php:    <h1><?= Html::encode($this->title) ?></h1>
year/jsTpl/MustacheAsset.php:        $this->js = [
year/user/controllers/SignupController.php:        return $this->render('index', [
year/user/controllers/SignupController.php:        return $this->render('view', [
year/user/controllers/SignupController.php:            'model' => $this->findModel($id),
year/user/controllers/SignupController.php:                return $this->redirect(['view', 'id' => $userModel->id]);
year/user/controllers/SignupController.php:            return $this->render('create', [
year/user/controllers/SignupController.php:        $model = $this->findModel($id);
year/user/controllers/SignupController.php:            return $this->redirect(['view', 'id' => $model->id]);
year/user/controllers/SignupController.php:            return $this->render('update', [
year/user/controllers/SignupController.php:        $this->findModel($id)->delete();
year/user/controllers/SignupController.php:        return $this->redirect(['index']);
year/user/controllers/SpaceController.php:        return $this->render('index');
year/jsTpl/docs/about-template.md:    $booksTmpl = $this->mustache->loadTemplate('books');
year/jsTpl/docs/about-template.md:    $moviesTmpl = $this->mustache->loadTemplate('movies');
year/user/controllers/AuthController.php:            return $this->goHome();
year/user/controllers/AuthController.php:            return $this->goBack();
year/user/controllers/AuthController.php:            return $this->render('login', [
year/user/views/signup/update.php:$this->title = Yii::t('app', 'Update {modelClass}: ', [
year/user/views/signup/update.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Users'), 'url' => ['index']];
year/user/views/signup/update.php:$this->params['breadcrumbs'][] = ['label' => $model->id, 'url' => ['view', 'id' => $model->id]];
year/user/views/signup/update.php:$this->params['breadcrumbs'][] = Yii::t('app', 'Update');
year/user/views/signup/update.php:    <h1><?= Html::encode($this->title) ?></h1>
year/user/views/signup/update.php:    <?= $this->render('_form', [
year/user/UserAsset.php:        $this->sourcePath =  __DIR__ . DIRECTORY_SEPARATOR .'assets';
year/user/UserAsset.php:        if($this->theme == 'bootstrap' ){
year/user/UserAsset.php:           $this->depends =  [
year/user/migrations/m140728_070134_create_user_table.php:        if ($this->db->driverName === 'mysql') {
year/user/migrations/m140728_070134_create_user_table.php:        $this->createTable('{{%user}}', [
year/user/migrations/m140728_070134_create_user_table.php:        $this->createIndex('{{%user_UK1}}', '{{%user}}', 'username', true);
year/user/migrations/m140728_070134_create_user_table.php:        $this->createIndex('{{%user_UK2}}', '{{%user}}', 'email', true);
year/user/migrations/m140728_070134_create_user_table.php:        $this->createIndex('{{%user_NU1}}', '{{%user}}', 'status');
year/user/migrations/m140728_070134_create_user_table.php:        $this->dropTable('{{%user}}');
year/user/models/User.php:        return $this->password === $password;
year/user/models/User.php:        return $this->primaryKey ;
year/user/models/User.php:        return md5($this->primaryKey);
year/user/models/User.php:        return $authKey == md5($this->primaryKey);
year/layui/LayerAsset.php:            $this->js = [
year/layui/LayerAsset.php:            $this->js = [
year/layui/LayerAsset.php:        $this->js = [
year/layui/LayerAsset.php:        if(empty($this->js)){
year/layui/LayerAsset.php:        //   $this->js[] = YII_DEBUG ?   'dialog-plus.js' :   'dialog-plus.min.js' ;
year/layui/LayerAsset.php:        $this->js[] = 'xxx-min.js' ;
year/user/models/LoginForm.php:        if (!$this->hasErrors()) {
year/user/models/LoginForm.php:            $user = $this->getUser();
year/user/models/LoginForm.php:            if (!$user || !$user->validatePassword($this->password)) {
year/user/models/LoginForm.php:                $this->addError('password', 'Incorrect username or password.');
year/user/models/LoginForm.php:        if ($this->validate()) {
year/user/models/LoginForm.php:            return Yii::$app->user->login($this->getUser(), $this->rememberMe ? 3600*24*30 : 0);
year/user/models/LoginForm.php:        if ($this->_user === false) {
year/user/models/LoginForm.php:            // $this->_user = User::findByUsername($this->username);
year/user/models/LoginForm.php:            $this->_user = User::findByUserOrEmail($this->username);
year/user/models/LoginForm.php:        return $this->_user;
year/user/models/UserSearch.php:        if (!($this->load($params) && $this->validate())) {
year/user/models/UserSearch.php:            'id' => $this->id,
year/user/models/UserSearch.php:            'status' => $this->status,
year/user/models/UserSearch.php:            'last_active_at' => $this->last_active_at,
year/user/models/UserSearch.php:            'created_at' => $this->created_at,
year/user/models/UserSearch.php:        $query->andFilterWhere(['like', 'username', $this->username])
year/user/models/UserSearch.php:            ->andFilterWhere(['like', 'email', $this->email])
year/user/models/UserSearch.php:            ->andFilterWhere(['like', 'icon_url', $this->icon_url])
year/user/models/UserSearch.php:            ->andFilterWhere(['like', 'password', $this->password])
year/user/models/UserSearch.php:            ->andFilterWhere(['like', 'salt', $this->salt])
year/user/models/UserSearch.php:            ->andFilterWhere(['like', 'last_login_ip', $this->last_login_ip]);
year/traits/AjaxValidation.php:            $this->performAjaxValidation($model);
year/traits/AjaxValidation.php:                  return $this->goBack();
year/traits/AjaxValidation.php:            return $this->render('login', [
year/traits/AjaxValidation.php:                  'module' => $this->module,
my/migration/backend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/migration/backend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/migration/backend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/migration/backend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
year/user/components/WebUser.php:        if (null === $this->identityClass) {
year/user/components/WebUser.php:            $this->identityClass = 'year\user\models\User';
my/course/api/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/course/api/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/course/api/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/course/api/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/migration/backend/controllers/DefaultController.php:        return $this->render('index');
my/course/api/controllers/DefaultController.php:        return $this->render('index');
year/bootstrap/TbThumbListView.php:        $models = $this->dataProvider->getModels();
year/bootstrap/TbThumbListView.php:        $keys = $this->dataProvider->getKeys();
year/bootstrap/TbThumbListView.php:        $colStep = 12 / $this->col;
year/bootstrap/TbThumbListView.php:            $rows[] = $this->renderItem($model, $keys[$index], $index);
year/bootstrap/TbThumbListView.php:            if (($index + 1) % $this->col == 0) {
year/bootstrap/TbThumbListView.php:        return implode($this->separator, $rows);
year/user/controllers/DefaultController.php:        return $this->render('index');
year/mdl/MDLAsset.php:            $this->css = [
year/mdl/MDLAsset.php:            $this->js = [
year/mdl/MDLAsset.php:            $this->css = [
year/mdl/MDLAsset.php:            $this->js = [
year/bootstrap/BootstrapWizard.php:        $view = $this->getView();
year/bootstrap/BootstrapWizard.php:        $id = $this->options['id'];
year/bootstrap/BootstrapWizard.php:        if ($this->clientOptions !== false) {
year/bootstrap/BootstrapWizard.php:            $options = empty($this->clientOptions) ? '' : Json::encode($this->clientOptions);
year/bootstrap/BootstrapWizard.php:        $this->registerClientEvents();
year/bootstrap/Alert.php:        $appendCss = isset($this->options['class']) ? ' ' . $this->options['class'] : '';
year/bootstrap/Alert.php:            foreach ($this->alertTypes as $k => $t) {
year/bootstrap/Alert.php:            if (isset($this->alertTypes[$type])) {
year/bootstrap/Alert.php:                $this->options['class'] = $this->alertTypes[$type] . $appendCss;
year/bootstrap/Alert.php:                $this->options['id'] = $this->getId() . '-' . $type;
year/bootstrap/Alert.php:                    'closeButton' => $this->closeButton,
year/bootstrap/Alert.php:                    'options' => $this->options,
year/validate/JValidationEngine.php:        $view = $this->getView();
year/validate/JFormValidatorAsset.php:        $this->js = [
year/ui/usage-samples/AdminLTE.php:<?php $this->beginPage() ?>
year/ui/usage-samples/AdminLTE.php:    <title><?= Html::encode($this->title) ?></title>
year/ui/usage-samples/AdminLTE.php:    <?php $this->head() ?>
year/ui/usage-samples/AdminLTE.php:<?php $this->beginBody() ?>
year/ui/usage-samples/AdminLTE.php:<?php $this->endBody() ?>
year/ui/usage-samples/AdminLTE.php:<?php $this->endPage() ?>
year/ui/usage-samples/main_bcoreadmin.php:<?php $this->beginPage() ?>
year/ui/usage-samples/main_bcoreadmin.php:    <title><?= Html::encode($this->title) ?></title>
year/ui/usage-samples/main_bcoreadmin.php:    <?php $this->head() ?>
year/ui/usage-samples/main_bcoreadmin.php:<?php $this->beginBody() ?>
year/ui/usage-samples/main_bcoreadmin.php:<?php $this->endBody() ?>
year/ui/usage-samples/main_bcoreadmin.php:<?php $this->endPage() ?>
year/bootstrap/BootstrapWizardAsset.php:        $this->sourcePath = __DIR__.'/assets/twitter-bootstrap-wizard';
year/bootstrap/BootstrapWizardAsset.php:            $this->js = [
year/bootstrap/BootstrapWizardAsset.php:            $this->js = [
year/bootstrap/BootstrapWizardAsset.php:        $this->js[] = 'prettify.js';
year/ui/usage-samples/DevOOPS.php:<?php $this->beginPage() ?>
year/ui/usage-samples/DevOOPS.php:    <title><?= Html::encode($this->title) ?></title>
year/ui/usage-samples/DevOOPS.php:    <?php $this->head() ?>
year/ui/usage-samples/DevOOPS.php:<?php $this->beginBody() ?>
year/ui/usage-samples/DevOOPS.php:<?php $this->endBody() ?>
year/ui/usage-samples/DevOOPS.php:<?php $this->endPage() ?>
year/ui/assets/bs-admin-bcore/template/assets/plugins/daterangepicker/moment.min.js:!function(t){function e(t,e){return function(n){return u(t.call(this,n),e)}}function n(t,e){return function(n){return this.lang().ordinal(t.call(this,n),e)}}function s(){}function i(t){a(this,t)}function r(t){var e=t.years||t.year||t.y||0,n=t.months||t.month||t.M||0,s=t.weeks||t.week||t.w||0,i=t.days||t.day||t.d||0,r=t.hours||t.hour||t.h||0,a=t.minutes||t.minute||t.m||0,o=t.seconds||t.second||t.s||0,u=t.milliseconds||t.millisecond||t.ms||0;this._input=t,this._milliseconds=u+1e3*o+6e4*a+36e5*r,this._days=i+7*s,this._months=n+12*e,this._data={},this._bubble()}function a(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}function o(t){return 0>t?Math.ceil(t):Math.floor(t)}function u(t,e){for(var n=t+"";n.length<e;)n="0"+n;return n}function h(t,e,n,s){var i,r,a=e._milliseconds,o=e._days,u=e._months;a&&t._d.setTime(+t._d+a*n),(o||u)&&(i=t.minute(),r=t.hour()),o&&t.date(t.date()+o*n),u&&t.month(t.month()+u*n),a&&!s&&H.updateOffset(t),(o||u)&&(t.minute(i),t.hour(r))}function d(t){return"[object Array]"===Object.prototype.toString.call(t)}function c(t,e){var n,s=Math.min(t.length,e.length),i=Math.abs(t.length-e.length),r=0;for(n=0;s>n;n++)~~t[n]!==~~e[n]&&r++;return r+i}function f(t){return t?ie[t]||t.toLowerCase().replace(/(.)s$/,"$1"):t}function l(t,e){return e.abbr=t,x[t]||(x[t]=new s),x[t].set(e),x[t]}function _(t){if(!t)return H.fn._lang;if(!x[t]&&A)try{require("./lang/"+t)}catch(e){return H.fn._lang}return x[t]}function m(t){return t.match(/\[.*\]/)?t.replace(/^\[|\]$/g,""):t.replace(/\\/g,"")}function y(t){var e,n,s=t.match(E);for(e=0,n=s.length;n>e;e++)s[e]=ue[s[e]]?ue[s[e]]:m(s[e]);return function(i){var r="";for(e=0;n>e;e++)r+=s[e]instanceof Function?s[e].call(i,t):s[e];return r}}function M(t,e){function n(e){return t.lang().longDateFormat(e)||e}for(var s=5;s--&&N.test(e);)e=e.replace(N,n);return re[e]||(re[e]=y(e)),re[e](t)}function g(t,e){switch(t){case"DDDD":return V;case"YYYY":return X;case"YYYYY":return $;case"S":case"SS":case"SSS":case"DDD":return I;case"MMM":case"MMMM":case"dd":case"ddd":case"dddd":return R;case"a":case"A":return _(e._l)._meridiemParse;case"X":return B;case"Z":case"ZZ":return j;case"T":return q;case"MM":case"DD":case"YY":case"HH":case"hh":case"mm":case"ss":case"M":case"D":case"d":case"H":case"h":case"m":case"s":return J;default:return new RegExp(t.replace("\\",""))}}function p(t){var e=(j.exec(t)||[])[0],n=(e+"").match(ee)||["-",0,0],s=+(60*n[1])+~~n[2];return"+"===n[0]?-s:s}function D(t,e,n){var s,i=n._a;switch(t){case"M":case"MM":i[1]=null==e?0:~~e-1;break;case"MMM":case"MMMM":s=_(n._l).monthsParse(e),null!=s?i[1]=s:n._isValid=!1;break;case"D":case"DD":case"DDD":case"DDDD":null!=e&&(i[2]=~~e);break;case"YY":i[0]=~~e+(~~e>68?1900:2e3);break;case"YYYY":case"YYYYY":i[0]=~~e;break;case"a":case"A":n._isPm=_(n._l).isPM(e);break;case"H":case"HH":case"h":case"hh":i[3]=~~e;break;case"m":case"mm":i[4]=~~e;break;case"s":case"ss":i[5]=~~e;break;case"S":case"SS":case"SSS":i[6]=~~(1e3*("0."+e));break;case"X":n._d=new Date(1e3*parseFloat(e));break;case"Z":case"ZZ":n._useUTC=!0,n._tzm=p(e)}null==e&&(n._isValid=!1)}function Y(t){var e,n,s=[];if(!t._d){for(e=0;7>e;e++)t._a[e]=s[e]=null==t._a[e]?2===e?1:0:t._a[e];s[3]+=~~((t._tzm||0)/60),s[4]+=~~((t._tzm||0)%60),n=new Date(0),t._useUTC?(n.setUTCFullYear(s[0],s[1],s[2]),n.setUTCHours(s[3],s[4],s[5],s[6])):(n.setFullYear(s[0],s[1],s[2]),n.setHours(s[3],s[4],s[5],s[6])),t._d=n}}function w(t){var e,n,s=t._f.match(E),i=t._i;for(t._a=[],e=0;e<s.length;e++)n=(g(s[e],t).exec(i)||[])[0],n&&(i=i.slice(i.indexOf(n)+n.length)),ue[s[e]]&&D(s[e],n,t);i&&(t._il=i),t._isPm&&t._a[3]<12&&(t._a[3]+=12),t._isPm===!1&&12===t._a[3]&&(t._a[3]=0),Y(t)}function k(t){var e,n,s,r,o,u=99;for(r=0;r<t._f.length;r++)e=a({},t),e._f=t._f[r],w(e),n=new i(e),o=c(e._a,n.toArray()),n._il&&(o+=n._il.length),u>o&&(u=o,s=n);a(t,s)}function v(t){var e,n=t._i,s=K.exec(n);if(s){for(t._f="YYYY-MM-DD"+(s[2]||" "),e=0;4>e;e++)if(te[e][1].exec(n)){t._f+=te[e][0];break}j.exec(n)&&(t._f+=" Z"),w(t)}else t._d=new Date(n)}function T(e){var n=e._i,s=G.exec(n);n===t?e._d=new Date:s?e._d=new Date(+s[1]):"string"==typeof n?v(e):d(n)?(e._a=n.slice(0),Y(e)):e._d=n instanceof Date?new Date(+n):new Date(n)}function b(t,e,n,s,i){return i.relativeTime(e||1,!!n,t,s)}function S(t,e,n){var s=W(Math.abs(t)/1e3),i=W(s/60),r=W(i/60),a=W(r/24),o=W(a/365),u=45>s&&["s",s]||1===i&&["m"]||45>i&&["mm",i]||1===r&&["h"]||22>r&&["hh",r]||1===a&&["d"]||25>=a&&["dd",a]||45>=a&&["M"]||345>a&&["MM",W(a/30)]||1===o&&["y"]||["yy",o];return u[2]=e,u[3]=t>0,u[4]=n,b.apply({},u)}function F(t,e,n){var s,i=n-e,r=n-t.day();return r>i&&(r-=7),i-7>r&&(r+=7),s=H(t).add("d",r),{week:Math.ceil(s.dayOfYear()/7),year:s.year()}}function O(t){var e=t._i,n=t._f;return null===e||""===e?null:("string"==typeof e&&(t._i=e=_().preparse(e)),H.isMoment(e)?(t=a({},e),t._d=new Date(+e._d)):n?d(n)?k(t):w(t):T(t),new i(t))}function z(t,e){H.fn[t]=H.fn[t+"s"]=function(t){var n=this._isUTC?"UTC":"";return null!=t?(this._d["set"+n+e](t),H.updateOffset(this),this):this._d["get"+n+e]()}}function C(t){H.duration.fn[t]=function(){return this._data[t]}}function L(t,e){H.duration.fn["as"+t]=function(){return+this/e}}for(var H,P,U="2.1.0",W=Math.round,x={},A="undefined"!=typeof module&&module.exports,G=/^\/?Date\((\-?\d+)/i,Z=/(\-)?(\d*)?\.?(\d+)\:(\d+)\:(\d+)\.?(\d{3})?/,E=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|SS?S?|X|zz?|ZZ?|.)/g,N=/(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,J=/\d\d?/,I=/\d{1,3}/,V=/\d{3}/,X=/\d{1,4}/,$=/[+\-]?\d{1,6}/,R=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,j=/Z|[\+\-]\d\d:?\d\d/i,q=/T/i,B=/[\+\-]?\d+(\.\d{1,3})?/,K=/^\s*\d{4}-\d\d-\d\d((T| )(\d\d(:\d\d(:\d\d(\.\d\d?\d?)?)?)?)?([\+\-]\d\d:?\d\d)?)?/,Q="YYYY-MM-DDTHH:mm:ssZ",te=[["HH:mm:ss.S",/(T| )\d\d:\d\d:\d\d\.\d{1,3}/],["HH:mm:ss",/(T| )\d\d:\d\d:\d\d/],["HH:mm",/(T| )\d\d:\d\d/],["HH",/(T| )\d\d/]],ee=/([\+\-]|\d\d)/gi,ne="Date|Hours|Minutes|Seconds|Milliseconds".split("|"),se={Milliseconds:1,Seconds:1e3,Minutes:6e4,Hours:36e5,Days:864e5,Months:2592e6,Years:31536e6},ie={ms:"millisecond",s:"second",m:"minute",h:"hour",d:"day",w:"week",M:"month",y:"year"},re={},ae="DDD w W M D d".split(" "),oe="M D H h m s w W".split(" "),ue={M:function(){return this.month()+1},MMM:function(t){return this.lang().monthsShort(this,t)},MMMM:function(t){return this.lang().months(this,t)},D:function(){return this.date()},DDD:function(){return this.dayOfYear()},d:function(){return this.day()},dd:function(t){return this.lang().weekdaysMin(this,t)},ddd:function(t){return this.lang().weekdaysShort(this,t)},dddd:function(t){return this.lang().weekdays(this,t)},w:function(){return this.week()},W:function(){return this.isoWeek()},YY:function(){return u(this.year()%100,2)},YYYY:function(){return u(this.year(),4)},YYYYY:function(){return u(this.year(),5)},gg:function(){return u(this.weekYear()%100,2)},gggg:function(){return this.weekYear()},ggggg:function(){return u(this.weekYear(),5)},GG:function(){return u(this.isoWeekYear()%100,2)},GGGG:function(){return this.isoWeekYear()},GGGGG:function(){return u(this.isoWeekYear(),5)},e:function(){return this.weekday()},E:function(){return this.isoWeekday()},a:function(){return this.lang().meridiem(this.hours(),this.minutes(),!0)},A:function(){return this.lang().meridiem(this.hours(),this.minutes(),!1)},H:function(){return this.hours()},h:function(){return this.hours()%12||12},m:function(){return this.minutes()},s:function(){return this.seconds()},S:function(){return~~(this.milliseconds()/100)},SS:function(){return u(~~(this.milliseconds()/10),2)},SSS:function(){return u(this.milliseconds(),3)},Z:function(){var t=-this.zone(),e="+";return 0>t&&(t=-t,e="-"),e+u(~~(t/60),2)+":"+u(~~t%60,2)},ZZ:function(){var t=-this.zone(),e="+";return 0>t&&(t=-t,e="-"),e+u(~~(10*t/6),4)},z:function(){return this.zoneAbbr()},zz:function(){return this.zoneName()},X:function(){return this.unix()}};ae.length;)P=ae.pop(),ue[P+"o"]=n(ue[P],P);for(;oe.length;)P=oe.pop(),ue[P+P]=e(ue[P],2);for(ue.DDDD=e(ue.DDD,3),s.prototype={set:function(t){var e,n;for(n in t)e=t[n],"function"==typeof e?this[n]=e:this["_"+n]=e},_months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),months:function(t){return this._months[t.month()]},_monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),monthsShort:function(t){return this._monthsShort[t.month()]},monthsParse:function(t){var e,n,s;for(this._monthsParse||(this._monthsParse=[]),e=0;12>e;e++)if(this._monthsParse[e]||(n=H([2e3,e]),s="^"+this.months(n,"")+"|^"+this.monthsShort(n,""),this._monthsParse[e]=new RegExp(s.replace(".",""),"i")),this._monthsParse[e].test(t))return e},_weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdays:function(t){return this._weekdays[t.day()]},_weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysShort:function(t){return this._weekdaysShort[t.day()]},_weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),weekdaysMin:function(t){return this._weekdaysMin[t.day()]},weekdaysParse:function(t){var e,n,s;for(this._weekdaysParse||(this._weekdaysParse=[]),e=0;7>e;e++)if(this._weekdaysParse[e]||(n=H([2e3,1]).day(e),s="^"+this.weekdays(n,"")+"|^"+this.weekdaysShort(n,"")+"|^"+this.weekdaysMin(n,""),this._weekdaysParse[e]=new RegExp(s.replace(".",""),"i")),this._weekdaysParse[e].test(t))return e},_longDateFormat:{LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D YYYY",LLL:"MMMM D YYYY LT",LLLL:"dddd, MMMM D YYYY LT"},longDateFormat:function(t){var e=this._longDateFormat[t];return!e&&this._longDateFormat[t.toUpperCase()]&&(e=this._longDateFormat[t.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,function(t){return t.slice(1)}),this._longDateFormat[t]=e),e},isPM:function(t){return"p"===(t+"").toLowerCase()[0]},_meridiemParse:/[ap]\.?m?\.?/i,meridiem:function(t,e,n){return t>11?n?"pm":"PM":n?"am":"AM"},_calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},calendar:function(t,e){var n=this._calendar[t];return"function"==typeof n?n.apply(e):n},_relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},relativeTime:function(t,e,n,s){var i=this._relativeTime[n];return"function"==typeof i?i(t,e,n,s):i.replace(/%d/i,t)},pastFuture:function(t,e){var n=this._relativeTime[t>0?"future":"past"];return"function"==typeof n?n(e):n.replace(/%s/i,e)},ordinal:function(t){return this._ordinal.replace("%d",t)},_ordinal:"%d",preparse:function(t){return t},postformat:function(t){return t},week:function(t){return F(t,this._week.dow,this._week.doy).week},_week:{dow:0,doy:6}},H=function(t,e,n){return O({_i:t,_f:e,_l:n,_isUTC:!1})},H.utc=function(t,e,n){return O({_useUTC:!0,_isUTC:!0,_l:n,_i:t,_f:e})},H.unix=function(t){return H(1e3*t)},H.duration=function(t,e){var n,s,i=H.isDuration(t),a="number"==typeof t,o=i?t._input:a?{}:t,u=Z.exec(t);return a?e?o[e]=t:o.milliseconds=t:u&&(n="-"===u[1]?-1:1,o={y:0,d:~~u[2]*n,h:~~u[3]*n,m:~~u[4]*n,s:~~u[5]*n,ms:~~u[6]*n}),s=new r(o),i&&t.hasOwnProperty("_lang")&&(s._lang=t._lang),s},H.version=U,H.defaultFormat=Q,H.updateOffset=function(){},H.lang=function(t,e){return t?(e?l(t,e):x[t]||_(t),H.duration.fn._lang=H.fn._lang=_(t),void 0):H.fn._lang._abbr},H.langData=function(t){return t&&t._lang&&t._lang._abbr&&(t=t._lang._abbr),_(t)},H.isMoment=function(t){return t instanceof i},H.isDuration=function(t){return t instanceof r},H.fn=i.prototype={clone:function(){return H(this)},valueOf:function(){return+this._d+6e4*(this._offset||0)},unix:function(){return Math.floor(+this/1e3)},toString:function(){return this.format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},toDate:function(){return this._offset?new Date(+this):this._d},toISOString:function(){return M(H(this).utc(),"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]")},toArray:function(){var t=this;return[t.year(),t.month(),t.date(),t.hours(),t.minutes(),t.seconds(),t.milliseconds()]},isValid:function(){return null==this._isValid&&(this._isValid=this._a?!c(this._a,(this._isUTC?H.utc(this._a):H(this._a)).toArray()):!isNaN(this._d.getTime())),!!this._isValid},utc:function(){return this.zone(0)},local:function(){return this.zone(0),this._isUTC=!1,this},format:function(t){var e=M(this,t||H.defaultFormat);return this.lang().postformat(e)},add:function(t,e){var n;return n="string"==typeof t?H.duration(+e,t):H.duration(t,e),h(this,n,1),this},subtract:function(t,e){var n;return n="string"==typeof t?H.duration(+e,t):H.duration(t,e),h(this,n,-1),this},diff:function(t,e,n){var s,i,r=this._isUTC?H(t).zone(this._offset||0):H(t).local(),a=6e4*(this.zone()-r.zone());return e=f(e),"year"===e||"month"===e?(s=432e5*(this.daysInMonth()+r.daysInMonth()),i=12*(this.year()-r.year())+(this.month()-r.month()),i+=(this-H(this).startOf("month")-(r-H(r).startOf("month")))/s,i-=6e4*(this.zone()-H(this).startOf("month").zone()-(r.zone()-H(r).startOf("month").zone()))/s,"year"===e&&(i/=12)):(s=this-r,i="second"===e?s/1e3:"minute"===e?s/6e4:"hour"===e?s/36e5:"day"===e?(s-a)/864e5:"week"===e?(s-a)/6048e5:s),n?i:o(i)},from:function(t,e){return H.duration(this.diff(t)).lang(this.lang()._abbr).humanize(!e)},fromNow:function(t){return this.from(H(),t)},calendar:function(){var t=this.diff(H().startOf("day"),"days",!0),e=-6>t?"sameElse":-1>t?"lastWeek":0>t?"lastDay":1>t?"sameDay":2>t?"nextDay":7>t?"nextWeek":"sameElse";return this.format(this.lang().calendar(e,this))},isLeapYear:function(){var t=this.year();return 0===t%4&&0!==t%100||0===t%400},isDST:function(){return this.zone()<this.clone().month(0).zone()||this.zone()<this.clone().month(5).zone()},day:function(t){var e=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=t?"string"==typeof t&&(t=this.lang().weekdaysParse(t),"number"!=typeof t)?this:this.add({d:t-e}):e},month:function(t){var e,n=this._isUTC?"UTC":"";return null!=t?"string"==typeof t&&(t=this.lang().monthsParse(t),"number"!=typeof t)?this:(e=this.date(),this.date(1),this._d["set"+n+"Month"](t),this.date(Math.min(e,this.daysInMonth())),H.updateOffset(this),this):this._d["get"+n+"Month"]()},startOf:function(t){switch(t=f(t)){case"year":this.month(0);case"month":this.date(1);case"week":case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===t&&this.weekday(0),this},endOf:function(t){return this.startOf(t).add(t,1).subtract("ms",1)},isAfter:function(t,e){return e="undefined"!=typeof e?e:"millisecond",+this.clone().startOf(e)>+H(t).startOf(e)},isBefore:function(t,e){return e="undefined"!=typeof e?e:"millisecond",+this.clone().startOf(e)<+H(t).startOf(e)},isSame:function(t,e){return e="undefined"!=typeof e?e:"millisecond",+this.clone().startOf(e)===+H(t).startOf(e)},min:function(t){return t=H.apply(null,arguments),this>t?this:t},max:function(t){return t=H.apply(null,arguments),t>this?this:t},zone:function(t){var e=this._offset||0;return null==t?this._isUTC?e:this._d.getTimezoneOffset():("string"==typeof t&&(t=p(t)),Math.abs(t)<16&&(t=60*t),this._offset=t,this._isUTC=!0,e!==t&&h(this,H.duration(e-t,"m"),1,!0),this)},zoneAbbr:function(){return this._isUTC?"UTC":""},zoneName:function(){return this._isUTC?"Coordinated Universal Time":""},daysInMonth:function(){return H.utc([this.year(),this.month()+1,0]).date()},dayOfYear:function(t){var e=W((H(this).startOf("day")-H(this).startOf("year"))/864e5)+1;return null==t?e:this.add("d",t-e)},weekYear:function(t){var e=F(this,this.lang()._week.dow,this.lang()._week.doy).year;return null==t?e:this.add("y",t-e)},isoWeekYear:function(t){var e=F(this,1,4).year;return null==t?e:this.add("y",t-e)},week:function(t){var e=this.lang().week(this);return null==t?e:this.add("d",7*(t-e))},isoWeek:function(t){var e=F(this,1,4).week;return null==t?e:this.add("d",7*(t-e))},weekday:function(t){var e=(this._d.getDay()+7-this.lang()._week.dow)%7;return null==t?e:this.add("d",t-e)},isoWeekday:function(t){return null==t?this.day()||7:this.day(this.day()%7?t:t-7)},lang:function(e){return e===t?this._lang:(this._lang=_(e),this)}},P=0;P<ne.length;P++)z(ne[P].toLowerCase().replace(/s$/,""),ne[P]);z("year","FullYear"),H.fn.days=H.fn.day,H.fn.months=H.fn.month,H.fn.weeks=H.fn.week,H.fn.isoWeeks=H.fn.isoWeek,H.fn.toJSON=H.fn.toISOString,H.duration.fn=r.prototype={_bubble:function(){var t,e,n,s,i=this._milliseconds,r=this._days,a=this._months,u=this._data;u.milliseconds=i%1e3,t=o(i/1e3),u.seconds=t%60,e=o(t/60),u.minutes=e%60,n=o(e/60),u.hours=n%24,r+=o(n/24),u.days=r%30,a+=o(r/30),u.months=a%12,s=o(a/12),u.years=s},weeks:function(){return o(this.days()/7)},valueOf:function(){return this._milliseconds+864e5*this._days+2592e6*(this._months%12)+31536e6*~~(this._months/12)},humanize:function(t){var e=+this,n=S(e,!t,this.lang());return t&&(n=this.lang().pastFuture(e,n)),this.lang().postformat(n)},add:function(t,e){var n=H.duration(t,e);return this._milliseconds+=n._milliseconds,this._days+=n._days,this._months+=n._months,this._bubble(),this},subtract:function(t,e){var n=H.duration(t,e);return this._milliseconds-=n._milliseconds,this._days-=n._days,this._months-=n._months,this._bubble(),this},get:function(t){return t=f(t),this[t.toLowerCase()+"s"]()},as:function(t){return t=f(t),this["as"+t.charAt(0).toUpperCase()+t.slice(1)+"s"]()},lang:H.fn.lang};for(P in se)se.hasOwnProperty(P)&&(L(P,se[P]),C(P.toLowerCase()));L("Weeks",6048e5),H.duration.fn.asMonths=function(){return(+this-31536e6*this.years())/2592e6+12*this.years()},H.lang("en",{ordinal:function(t){var e=t%10,n=1===~~(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th";return t+n}}),A&&(module.exports=H),"undefined"==typeof ender&&(this.moment=H),"function"==typeof define&&define.amd&&define("moment",[],function(){return H})}.call(this);
year/ui/assets/charisma/bower_components/moment/min/moment.min.js:(function(a){function b(a,b,c){switch(arguments.length){case 2:return null!=a?a:b;case 3:return null!=a?a:null!=b?b:c;default:throw new Error("Implement me")}}function c(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function d(a,b){function c(){mb.suppressDeprecationWarnings===!1&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+a)}var d=!0;return j(function(){return d&&(c(),d=!1),b.apply(this,arguments)},b)}function e(a,b){return function(c){return m(a.call(this,c),b)}}function f(a,b){return function(c){return this.lang().ordinal(a.call(this,c),b)}}function g(){}function h(a){z(a),j(this,a)}function i(a){var b=s(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;this._milliseconds=+k+1e3*j+6e4*i+36e5*h,this._days=+g+7*f,this._months=+e+3*d+12*c,this._data={},this._bubble()}function j(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return b.hasOwnProperty("toString")&&(a.toString=b.toString),b.hasOwnProperty("valueOf")&&(a.valueOf=b.valueOf),a}function k(a){var b,c={};for(b in a)a.hasOwnProperty(b)&&Ab.hasOwnProperty(b)&&(c[b]=a[b]);return c}function l(a){return 0>a?Math.ceil(a):Math.floor(a)}function m(a,b,c){for(var d=""+Math.abs(a),e=a>=0;d.length<b;)d="0"+d;return(e?c?"+":"":"-")+d}function n(a,b,c,d){var e=b._milliseconds,f=b._days,g=b._months;d=null==d?!0:d,e&&a._d.setTime(+a._d+e*c),f&&hb(a,"Date",gb(a,"Date")+f*c),g&&fb(a,gb(a,"Month")+g*c),d&&mb.updateOffset(a,f||g)}function o(a){return"[object Array]"===Object.prototype.toString.call(a)}function p(a){return"[object Date]"===Object.prototype.toString.call(a)||a instanceof Date}function q(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e>d;d++)(c&&a[d]!==b[d]||!c&&u(a[d])!==u(b[d]))&&g++;return g+f}function r(a){if(a){var b=a.toLowerCase().replace(/(.)s$/,"$1");a=bc[a]||cc[b]||b}return a}function s(a){var b,c,d={};for(c in a)a.hasOwnProperty(c)&&(b=r(c),b&&(d[b]=a[c]));return d}function t(b){var c,d;if(0===b.indexOf("week"))c=7,d="day";else{if(0!==b.indexOf("month"))return;c=12,d="month"}mb[b]=function(e,f){var g,h,i=mb.fn._lang[b],j=[];if("number"==typeof e&&(f=e,e=a),h=function(a){var b=mb().utc().set(d,a);return i.call(mb.fn._lang,b,e||"")},null!=f)return h(f);for(g=0;c>g;g++)j.push(h(g));return j}}function u(a){var b=+a,c=0;return 0!==b&&isFinite(b)&&(c=b>=0?Math.floor(b):Math.ceil(b)),c}function v(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function w(a,b,c){return bb(mb([a,11,31+b-c]),b,c).week}function x(a){return y(a)?366:365}function y(a){return a%4===0&&a%100!==0||a%400===0}function z(a){var b;a._a&&-2===a._pf.overflow&&(b=a._a[tb]<0||a._a[tb]>11?tb:a._a[ub]<1||a._a[ub]>v(a._a[sb],a._a[tb])?ub:a._a[vb]<0||a._a[vb]>23?vb:a._a[wb]<0||a._a[wb]>59?wb:a._a[xb]<0||a._a[xb]>59?xb:a._a[yb]<0||a._a[yb]>999?yb:-1,a._pf._overflowDayOfYear&&(sb>b||b>ub)&&(b=ub),a._pf.overflow=b)}function A(a){return null==a._isValid&&(a._isValid=!isNaN(a._d.getTime())&&a._pf.overflow<0&&!a._pf.empty&&!a._pf.invalidMonth&&!a._pf.nullInput&&!a._pf.invalidFormat&&!a._pf.userInvalidated,a._strict&&(a._isValid=a._isValid&&0===a._pf.charsLeftOver&&0===a._pf.unusedTokens.length)),a._isValid}function B(a){return a?a.toLowerCase().replace("_","-"):a}function C(a,b){return b._isUTC?mb(a).zone(b._offset||0):mb(a).local()}function D(a,b){return b.abbr=a,zb[a]||(zb[a]=new g),zb[a].set(b),zb[a]}function E(a){delete zb[a]}function F(a){var b,c,d,e,f=0,g=function(a){if(!zb[a]&&Bb)try{require("./lang/"+a)}catch(b){}return zb[a]};if(!a)return mb.fn._lang;if(!o(a)){if(c=g(a))return c;a=[a]}for(;f<a.length;){for(e=B(a[f]).split("-"),b=e.length,d=B(a[f+1]),d=d?d.split("-"):null;b>0;){if(c=g(e.slice(0,b).join("-")))return c;if(d&&d.length>=b&&q(e,d,!0)>=b-1)break;b--}f++}return mb.fn._lang}function G(a){return a.match(/\[[\s\S]/)?a.replace(/^\[|\]$/g,""):a.replace(/\\/g,"")}function H(a){var b,c,d=a.match(Fb);for(b=0,c=d.length;c>b;b++)d[b]=hc[d[b]]?hc[d[b]]:G(d[b]);return function(e){var f="";for(b=0;c>b;b++)f+=d[b]instanceof Function?d[b].call(e,a):d[b];return f}}function I(a,b){return a.isValid()?(b=J(b,a.lang()),dc[b]||(dc[b]=H(b)),dc[b](a)):a.lang().invalidDate()}function J(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Gb.lastIndex=0;d>=0&&Gb.test(a);)a=a.replace(Gb,c),Gb.lastIndex=0,d-=1;return a}function K(a,b){var c,d=b._strict;switch(a){case"Q":return Rb;case"DDDD":return Tb;case"YYYY":case"GGGG":case"gggg":return d?Ub:Jb;case"Y":case"G":case"g":return Wb;case"YYYYYY":case"YYYYY":case"GGGGG":case"ggggg":return d?Vb:Kb;case"S":if(d)return Rb;case"SS":if(d)return Sb;case"SSS":if(d)return Tb;case"DDD":return Ib;case"MMM":case"MMMM":case"dd":case"ddd":case"dddd":return Mb;case"a":case"A":return F(b._l)._meridiemParse;case"X":return Pb;case"Z":case"ZZ":return Nb;case"T":return Ob;case"SSSS":return Lb;case"MM":case"DD":case"YY":case"GG":case"gg":case"HH":case"hh":case"mm":case"ss":case"ww":case"WW":return d?Sb:Hb;case"M":case"D":case"d":case"H":case"h":case"m":case"s":case"w":case"W":case"e":case"E":return Hb;case"Do":return Qb;default:return c=new RegExp(T(S(a.replace("\\","")),"i"))}}function L(a){a=a||"";var b=a.match(Nb)||[],c=b[b.length-1]||[],d=(c+"").match(_b)||["-",0,0],e=+(60*d[1])+u(d[2]);return"+"===d[0]?-e:e}function M(a,b,c){var d,e=c._a;switch(a){case"Q":null!=b&&(e[tb]=3*(u(b)-1));break;case"M":case"MM":null!=b&&(e[tb]=u(b)-1);break;case"MMM":case"MMMM":d=F(c._l).monthsParse(b),null!=d?e[tb]=d:c._pf.invalidMonth=b;break;case"D":case"DD":null!=b&&(e[ub]=u(b));break;case"Do":null!=b&&(e[ub]=u(parseInt(b,10)));break;case"DDD":case"DDDD":null!=b&&(c._dayOfYear=u(b));break;case"YY":e[sb]=mb.parseTwoDigitYear(b);break;case"YYYY":case"YYYYY":case"YYYYYY":e[sb]=u(b);break;case"a":case"A":c._isPm=F(c._l).isPM(b);break;case"H":case"HH":case"h":case"hh":e[vb]=u(b);break;case"m":case"mm":e[wb]=u(b);break;case"s":case"ss":e[xb]=u(b);break;case"S":case"SS":case"SSS":case"SSSS":e[yb]=u(1e3*("0."+b));break;case"X":c._d=new Date(1e3*parseFloat(b));break;case"Z":case"ZZ":c._useUTC=!0,c._tzm=L(b);break;case"dd":case"ddd":case"dddd":d=F(c._l).weekdaysParse(b),null!=d?(c._w=c._w||{},c._w.d=d):c._pf.invalidWeekday=b;break;case"w":case"ww":case"W":case"WW":case"d":case"e":case"E":a=a.substr(0,1);case"gggg":case"GGGG":case"GGGGG":a=a.substr(0,2),b&&(c._w=c._w||{},c._w[a]=u(b));break;case"gg":case"GG":c._w=c._w||{},c._w[a]=mb.parseTwoDigitYear(b)}}function N(a){var c,d,e,f,g,h,i,j;c=a._w,null!=c.GG||null!=c.W||null!=c.E?(g=1,h=4,d=b(c.GG,a._a[sb],bb(mb(),1,4).year),e=b(c.W,1),f=b(c.E,1)):(j=F(a._l),g=j._week.dow,h=j._week.doy,d=b(c.gg,a._a[sb],bb(mb(),g,h).year),e=b(c.w,1),null!=c.d?(f=c.d,g>f&&++e):f=null!=c.e?c.e+g:g),i=cb(d,e,f,h,g),a._a[sb]=i.year,a._dayOfYear=i.dayOfYear}function O(a){var c,d,e,f,g=[];if(!a._d){for(e=Q(a),a._w&&null==a._a[ub]&&null==a._a[tb]&&N(a),a._dayOfYear&&(f=b(a._a[sb],e[sb]),a._dayOfYear>x(f)&&(a._pf._overflowDayOfYear=!0),d=Z(f,0,a._dayOfYear),a._a[tb]=d.getUTCMonth(),a._a[ub]=d.getUTCDate()),c=0;3>c&&null==a._a[c];++c)a._a[c]=g[c]=e[c];for(;7>c;c++)a._a[c]=g[c]=null==a._a[c]?2===c?1:0:a._a[c];a._d=(a._useUTC?Z:Y).apply(null,g),null!=a._tzm&&a._d.setUTCMinutes(a._d.getUTCMinutes()+a._tzm)}}function P(a){var b;a._d||(b=s(a._i),a._a=[b.year,b.month,b.day,b.hour,b.minute,b.second,b.millisecond],O(a))}function Q(a){var b=new Date;return a._useUTC?[b.getUTCFullYear(),b.getUTCMonth(),b.getUTCDate()]:[b.getFullYear(),b.getMonth(),b.getDate()]}function R(a){if(a._f===mb.ISO_8601)return void V(a);a._a=[],a._pf.empty=!0;var b,c,d,e,f,g=F(a._l),h=""+a._i,i=h.length,j=0;for(d=J(a._f,g).match(Fb)||[],b=0;b<d.length;b++)e=d[b],c=(h.match(K(e,a))||[])[0],c&&(f=h.substr(0,h.indexOf(c)),f.length>0&&a._pf.unusedInput.push(f),h=h.slice(h.indexOf(c)+c.length),j+=c.length),hc[e]?(c?a._pf.empty=!1:a._pf.unusedTokens.push(e),M(e,c,a)):a._strict&&!c&&a._pf.unusedTokens.push(e);a._pf.charsLeftOver=i-j,h.length>0&&a._pf.unusedInput.push(h),a._isPm&&a._a[vb]<12&&(a._a[vb]+=12),a._isPm===!1&&12===a._a[vb]&&(a._a[vb]=0),O(a),z(a)}function S(a){return a.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(a,b,c,d,e){return b||c||d||e})}function T(a){return a.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function U(a){var b,d,e,f,g;if(0===a._f.length)return a._pf.invalidFormat=!0,void(a._d=new Date(0/0));for(f=0;f<a._f.length;f++)g=0,b=j({},a),b._pf=c(),b._f=a._f[f],R(b),A(b)&&(g+=b._pf.charsLeftOver,g+=10*b._pf.unusedTokens.length,b._pf.score=g,(null==e||e>g)&&(e=g,d=b));j(a,d||b)}function V(a){var b,c,d=a._i,e=Xb.exec(d);if(e){for(a._pf.iso=!0,b=0,c=Zb.length;c>b;b++)if(Zb[b][1].exec(d)){a._f=Zb[b][0]+(e[6]||" ");break}for(b=0,c=$b.length;c>b;b++)if($b[b][1].exec(d)){a._f+=$b[b][0];break}d.match(Nb)&&(a._f+="Z"),R(a)}else a._isValid=!1}function W(a){V(a),a._isValid===!1&&(delete a._isValid,mb.createFromInputFallback(a))}function X(b){var c=b._i,d=Cb.exec(c);c===a?b._d=new Date:d?b._d=new Date(+d[1]):"string"==typeof c?W(b):o(c)?(b._a=c.slice(0),O(b)):p(c)?b._d=new Date(+c):"object"==typeof c?P(b):"number"==typeof c?b._d=new Date(c):mb.createFromInputFallback(b)}function Y(a,b,c,d,e,f,g){var h=new Date(a,b,c,d,e,f,g);return 1970>a&&h.setFullYear(a),h}function Z(a){var b=new Date(Date.UTC.apply(null,arguments));return 1970>a&&b.setUTCFullYear(a),b}function $(a,b){if("string"==typeof a)if(isNaN(a)){if(a=b.weekdaysParse(a),"number"!=typeof a)return null}else a=parseInt(a,10);return a}function _(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function ab(a,b,c){var d=rb(Math.abs(a)/1e3),e=rb(d/60),f=rb(e/60),g=rb(f/24),h=rb(g/365),i=d<ec.s&&["s",d]||1===e&&["m"]||e<ec.m&&["mm",e]||1===f&&["h"]||f<ec.h&&["hh",f]||1===g&&["d"]||g<=ec.dd&&["dd",g]||g<=ec.dm&&["M"]||g<ec.dy&&["MM",rb(g/30)]||1===h&&["y"]||["yy",h];return i[2]=b,i[3]=a>0,i[4]=c,_.apply({},i)}function bb(a,b,c){var d,e=c-b,f=c-a.day();return f>e&&(f-=7),e-7>f&&(f+=7),d=mb(a).add("d",f),{week:Math.ceil(d.dayOfYear()/7),year:d.year()}}function cb(a,b,c,d,e){var f,g,h=Z(a,0,1).getUTCDay();return h=0===h?7:h,c=null!=c?c:e,f=e-h+(h>d?7:0)-(e>h?7:0),g=7*(b-1)+(c-e)+f+1,{year:g>0?a:a-1,dayOfYear:g>0?g:x(a-1)+g}}function db(b){var c=b._i,d=b._f;return null===c||d===a&&""===c?mb.invalid({nullInput:!0}):("string"==typeof c&&(b._i=c=F().preparse(c)),mb.isMoment(c)?(b=k(c),b._d=new Date(+c._d)):d?o(d)?U(b):R(b):X(b),new h(b))}function eb(a,b){var c,d;if(1===b.length&&o(b[0])&&(b=b[0]),!b.length)return mb();for(c=b[0],d=1;d<b.length;++d)b[d][a](c)&&(c=b[d]);return c}function fb(a,b){var c;return"string"==typeof b&&(b=a.lang().monthsParse(b),"number"!=typeof b)?a:(c=Math.min(a.date(),v(a.year(),b)),a._d["set"+(a._isUTC?"UTC":"")+"Month"](b,c),a)}function gb(a,b){return a._d["get"+(a._isUTC?"UTC":"")+b]()}function hb(a,b,c){return"Month"===b?fb(a,c):a._d["set"+(a._isUTC?"UTC":"")+b](c)}function ib(a,b){return function(c){return null!=c?(hb(this,a,c),mb.updateOffset(this,b),this):gb(this,a)}}function jb(a){mb.duration.fn[a]=function(){return this._data[a]}}function kb(a,b){mb.duration.fn["as"+a]=function(){return+this/b}}function lb(a){"undefined"==typeof ender&&(nb=qb.moment,qb.moment=a?d("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.",mb):mb)}for(var mb,nb,ob,pb="2.7.0",qb="undefined"!=typeof global?global:this,rb=Math.round,sb=0,tb=1,ub=2,vb=3,wb=4,xb=5,yb=6,zb={},Ab={_isAMomentObject:null,_i:null,_f:null,_l:null,_strict:null,_tzm:null,_isUTC:null,_offset:null,_pf:null,_lang:null},Bb="undefined"!=typeof module&&module.exports,Cb=/^\/?Date\((\-?\d+)/i,Db=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,Eb=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,Fb=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,Gb=/(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,Hb=/\d\d?/,Ib=/\d{1,3}/,Jb=/\d{1,4}/,Kb=/[+\-]?\d{1,6}/,Lb=/\d+/,Mb=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,Nb=/Z|[\+\-]\d\d:?\d\d/gi,Ob=/T/i,Pb=/[\+\-]?\d+(\.\d{1,3})?/,Qb=/\d{1,2}/,Rb=/\d/,Sb=/\d\d/,Tb=/\d{3}/,Ub=/\d{4}/,Vb=/[+-]?\d{6}/,Wb=/[+-]?\d+/,Xb=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Yb="YYYY-MM-DDTHH:mm:ssZ",Zb=[["YYYYYY-MM-DD",/[+-]\d{6}-\d{2}-\d{2}/],["YYYY-MM-DD",/\d{4}-\d{2}-\d{2}/],["GGGG-[W]WW-E",/\d{4}-W\d{2}-\d/],["GGGG-[W]WW",/\d{4}-W\d{2}/],["YYYY-DDD",/\d{4}-\d{3}/]],$b=[["HH:mm:ss.SSSS",/(T| )\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss",/(T| )\d\d:\d\d:\d\d/],["HH:mm",/(T| )\d\d:\d\d/],["HH",/(T| )\d\d/]],_b=/([\+\-]|\d\d)/gi,ac=("Date|Hours|Minutes|Seconds|Milliseconds".split("|"),{Milliseconds:1,Seconds:1e3,Minutes:6e4,Hours:36e5,Days:864e5,Months:2592e6,Years:31536e6}),bc={ms:"millisecond",s:"second",m:"minute",h:"hour",d:"day",D:"date",w:"week",W:"isoWeek",M:"month",Q:"quarter",y:"year",DDD:"dayOfYear",e:"weekday",E:"isoWeekday",gg:"weekYear",GG:"isoWeekYear"},cc={dayofyear:"dayOfYear",isoweekday:"isoWeekday",isoweek:"isoWeek",weekyear:"weekYear",isoweekyear:"isoWeekYear"},dc={},ec={s:45,m:45,h:22,dd:25,dm:45,dy:345},fc="DDD w W M D d".split(" "),gc="M D H h m s w W".split(" "),hc={M:function(){return this.month()+1},MMM:function(a){return this.lang().monthsShort(this,a)},MMMM:function(a){return this.lang().months(this,a)},D:function(){return this.date()},DDD:function(){return this.dayOfYear()},d:function(){return this.day()},dd:function(a){return this.lang().weekdaysMin(this,a)},ddd:function(a){return this.lang().weekdaysShort(this,a)},dddd:function(a){return this.lang().weekdays(this,a)},w:function(){return this.week()},W:function(){return this.isoWeek()},YY:function(){return m(this.year()%100,2)},YYYY:function(){return m(this.year(),4)},YYYYY:function(){return m(this.year(),5)},YYYYYY:function(){var a=this.year(),b=a>=0?"+":"-";return b+m(Math.abs(a),6)},gg:function(){return m(this.weekYear()%100,2)},gggg:function(){return m(this.weekYear(),4)},ggggg:function(){return m(this.weekYear(),5)},GG:function(){return m(this.isoWeekYear()%100,2)},GGGG:function(){return m(this.isoWeekYear(),4)},GGGGG:function(){return m(this.isoWeekYear(),5)},e:function(){return this.weekday()},E:function(){return this.isoWeekday()},a:function(){return this.lang().meridiem(this.hours(),this.minutes(),!0)},A:function(){return this.lang().meridiem(this.hours(),this.minutes(),!1)},H:function(){return this.hours()},h:function(){return this.hours()%12||12},m:function(){return this.minutes()},s:function(){return this.seconds()},S:function(){return u(this.milliseconds()/100)},SS:function(){return m(u(this.milliseconds()/10),2)},SSS:function(){return m(this.milliseconds(),3)},SSSS:function(){return m(this.milliseconds(),3)},Z:function(){var a=-this.zone(),b="+";return 0>a&&(a=-a,b="-"),b+m(u(a/60),2)+":"+m(u(a)%60,2)},ZZ:function(){var a=-this.zone(),b="+";return 0>a&&(a=-a,b="-"),b+m(u(a/60),2)+m(u(a)%60,2)},z:function(){return this.zoneAbbr()},zz:function(){return this.zoneName()},X:function(){return this.unix()},Q:function(){return this.quarter()}},ic=["months","monthsShort","weekdays","weekdaysShort","weekdaysMin"];fc.length;)ob=fc.pop(),hc[ob+"o"]=f(hc[ob],ob);for(;gc.length;)ob=gc.pop(),hc[ob+ob]=e(hc[ob],2);for(hc.DDDD=e(hc.DDD,3),j(g.prototype,{set:function(a){var b,c;for(c in a)b=a[c],"function"==typeof b?this[c]=b:this["_"+c]=b},_months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),months:function(a){return this._months[a.month()]},_monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),monthsShort:function(a){return this._monthsShort[a.month()]},monthsParse:function(a){var b,c,d;for(this._monthsParse||(this._monthsParse=[]),b=0;12>b;b++)if(this._monthsParse[b]||(c=mb.utc([2e3,b]),d="^"+this.months(c,"")+"|^"+this.monthsShort(c,""),this._monthsParse[b]=new RegExp(d.replace(".",""),"i")),this._monthsParse[b].test(a))return b},_weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdays:function(a){return this._weekdays[a.day()]},_weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysShort:function(a){return this._weekdaysShort[a.day()]},_weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),weekdaysMin:function(a){return this._weekdaysMin[a.day()]},weekdaysParse:function(a){var b,c,d;for(this._weekdaysParse||(this._weekdaysParse=[]),b=0;7>b;b++)if(this._weekdaysParse[b]||(c=mb([2e3,1]).day(b),d="^"+this.weekdays(c,"")+"|^"+this.weekdaysShort(c,"")+"|^"+this.weekdaysMin(c,""),this._weekdaysParse[b]=new RegExp(d.replace(".",""),"i")),this._weekdaysParse[b].test(a))return b},_longDateFormat:{LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D YYYY",LLL:"MMMM D YYYY LT",LLLL:"dddd, MMMM D YYYY LT"},longDateFormat:function(a){var b=this._longDateFormat[a];return!b&&this._longDateFormat[a.toUpperCase()]&&(b=this._longDateFormat[a.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a]=b),b},isPM:function(a){return"p"===(a+"").toLowerCase().charAt(0)},_meridiemParse:/[ap]\.?m?\.?/i,meridiem:function(a,b,c){return a>11?c?"pm":"PM":c?"am":"AM"},_calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},calendar:function(a,b){var c=this._calendar[a];return"function"==typeof c?c.apply(b):c},_relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},relativeTime:function(a,b,c,d){var e=this._relativeTime[c];return"function"==typeof e?e(a,b,c,d):e.replace(/%d/i,a)},pastFuture:function(a,b){var c=this._relativeTime[a>0?"future":"past"];return"function"==typeof c?c(b):c.replace(/%s/i,b)},ordinal:function(a){return this._ordinal.replace("%d",a)},_ordinal:"%d",preparse:function(a){return a},postformat:function(a){return a},week:function(a){return bb(a,this._week.dow,this._week.doy).week},_week:{dow:0,doy:6},_invalidDate:"Invalid date",invalidDate:function(){return this._invalidDate}}),mb=function(b,d,e,f){var g;return"boolean"==typeof e&&(f=e,e=a),g={},g._isAMomentObject=!0,g._i=b,g._f=d,g._l=e,g._strict=f,g._isUTC=!1,g._pf=c(),db(g)},mb.suppressDeprecationWarnings=!1,mb.createFromInputFallback=d("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",function(a){a._d=new Date(a._i)}),mb.min=function(){var a=[].slice.call(arguments,0);return eb("isBefore",a)},mb.max=function(){var a=[].slice.call(arguments,0);return eb("isAfter",a)},mb.utc=function(b,d,e,f){var g;return"boolean"==typeof e&&(f=e,e=a),g={},g._isAMomentObject=!0,g._useUTC=!0,g._isUTC=!0,g._l=e,g._i=b,g._f=d,g._strict=f,g._pf=c(),db(g).utc()},mb.unix=function(a){return mb(1e3*a)},mb.duration=function(a,b){var c,d,e,f=a,g=null;return mb.isDuration(a)?f={ms:a._milliseconds,d:a._days,M:a._months}:"number"==typeof a?(f={},b?f[b]=a:f.milliseconds=a):(g=Db.exec(a))?(c="-"===g[1]?-1:1,f={y:0,d:u(g[ub])*c,h:u(g[vb])*c,m:u(g[wb])*c,s:u(g[xb])*c,ms:u(g[yb])*c}):(g=Eb.exec(a))&&(c="-"===g[1]?-1:1,e=function(a){var b=a&&parseFloat(a.replace(",","."));return(isNaN(b)?0:b)*c},f={y:e(g[2]),M:e(g[3]),d:e(g[4]),h:e(g[5]),m:e(g[6]),s:e(g[7]),w:e(g[8])}),d=new i(f),mb.isDuration(a)&&a.hasOwnProperty("_lang")&&(d._lang=a._lang),d},mb.version=pb,mb.defaultFormat=Yb,mb.ISO_8601=function(){},mb.momentProperties=Ab,mb.updateOffset=function(){},mb.relativeTimeThreshold=function(b,c){return ec[b]===a?!1:(ec[b]=c,!0)},mb.lang=function(a,b){var c;return a?(b?D(B(a),b):null===b?(E(a),a="en"):zb[a]||F(a),c=mb.duration.fn._lang=mb.fn._lang=F(a),c._abbr):mb.fn._lang._abbr},mb.langData=function(a){return a&&a._lang&&a._lang._abbr&&(a=a._lang._abbr),F(a)},mb.isMoment=function(a){return a instanceof h||null!=a&&a.hasOwnProperty("_isAMomentObject")},mb.isDuration=function(a){return a instanceof i},ob=ic.length-1;ob>=0;--ob)t(ic[ob]);mb.normalizeUnits=function(a){return r(a)},mb.invalid=function(a){var b=mb.utc(0/0);return null!=a?j(b._pf,a):b._pf.userInvalidated=!0,b},mb.parseZone=function(){return mb.apply(null,arguments).parseZone()},mb.parseTwoDigitYear=function(a){return u(a)+(u(a)>68?1900:2e3)},j(mb.fn=h.prototype,{clone:function(){return mb(this)},valueOf:function(){return+this._d+6e4*(this._offset||0)},unix:function(){return Math.floor(+this/1e3)},toString:function(){return this.clone().lang("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},toDate:function(){return this._offset?new Date(+this):this._d},toISOString:function(){var a=mb(this).utc();return 0<a.year()&&a.year()<=9999?I(a,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):I(a,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")},toArray:function(){var a=this;return[a.year(),a.month(),a.date(),a.hours(),a.minutes(),a.seconds(),a.milliseconds()]},isValid:function(){return A(this)},isDSTShifted:function(){return this._a?this.isValid()&&q(this._a,(this._isUTC?mb.utc(this._a):mb(this._a)).toArray())>0:!1},parsingFlags:function(){return j({},this._pf)},invalidAt:function(){return this._pf.overflow},utc:function(){return this.zone(0)},local:function(){return this.zone(0),this._isUTC=!1,this},format:function(a){var b=I(this,a||mb.defaultFormat);return this.lang().postformat(b)},add:function(a,b){var c;return c="string"==typeof a&&"string"==typeof b?mb.duration(isNaN(+b)?+a:+b,isNaN(+b)?b:a):"string"==typeof a?mb.duration(+b,a):mb.duration(a,b),n(this,c,1),this},subtract:function(a,b){var c;return c="string"==typeof a&&"string"==typeof b?mb.duration(isNaN(+b)?+a:+b,isNaN(+b)?b:a):"string"==typeof a?mb.duration(+b,a):mb.duration(a,b),n(this,c,-1),this},diff:function(a,b,c){var d,e,f=C(a,this),g=6e4*(this.zone()-f.zone());return b=r(b),"year"===b||"month"===b?(d=432e5*(this.daysInMonth()+f.daysInMonth()),e=12*(this.year()-f.year())+(this.month()-f.month()),e+=(this-mb(this).startOf("month")-(f-mb(f).startOf("month")))/d,e-=6e4*(this.zone()-mb(this).startOf("month").zone()-(f.zone()-mb(f).startOf("month").zone()))/d,"year"===b&&(e/=12)):(d=this-f,e="second"===b?d/1e3:"minute"===b?d/6e4:"hour"===b?d/36e5:"day"===b?(d-g)/864e5:"week"===b?(d-g)/6048e5:d),c?e:l(e)},from:function(a,b){return mb.duration(this.diff(a)).lang(this.lang()._abbr).humanize(!b)},fromNow:function(a){return this.from(mb(),a)},calendar:function(a){var b=a||mb(),c=C(b,this).startOf("day"),d=this.diff(c,"days",!0),e=-6>d?"sameElse":-1>d?"lastWeek":0>d?"lastDay":1>d?"sameDay":2>d?"nextDay":7>d?"nextWeek":"sameElse";return this.format(this.lang().calendar(e,this))},isLeapYear:function(){return y(this.year())},isDST:function(){return this.zone()<this.clone().month(0).zone()||this.zone()<this.clone().month(5).zone()},day:function(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=$(a,this.lang()),this.add({d:a-b})):b},month:ib("Month",!0),startOf:function(a){switch(a=r(a)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===a?this.weekday(0):"isoWeek"===a&&this.isoWeekday(1),"quarter"===a&&this.month(3*Math.floor(this.month()/3)),this},endOf:function(a){return a=r(a),this.startOf(a).add("isoWeek"===a?"week":a,1).subtract("ms",1)},isAfter:function(a,b){return b="undefined"!=typeof b?b:"millisecond",+this.clone().startOf(b)>+mb(a).startOf(b)},isBefore:function(a,b){return b="undefined"!=typeof b?b:"millisecond",+this.clone().startOf(b)<+mb(a).startOf(b)},isSame:function(a,b){return b=b||"ms",+this.clone().startOf(b)===+C(a,this).startOf(b)},min:d("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",function(a){return a=mb.apply(null,arguments),this>a?this:a}),max:d("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",function(a){return a=mb.apply(null,arguments),a>this?this:a}),zone:function(a,b){var c=this._offset||0;return null==a?this._isUTC?c:this._d.getTimezoneOffset():("string"==typeof a&&(a=L(a)),Math.abs(a)<16&&(a=60*a),this._offset=a,this._isUTC=!0,c!==a&&(!b||this._changeInProgress?n(this,mb.duration(c-a,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,mb.updateOffset(this,!0),this._changeInProgress=null)),this)},zoneAbbr:function(){return this._isUTC?"UTC":""},zoneName:function(){return this._isUTC?"Coordinated Universal Time":""},parseZone:function(){return this._tzm?this.zone(this._tzm):"string"==typeof this._i&&this.zone(this._i),this},hasAlignedHourOffset:function(a){return a=a?mb(a).zone():0,(this.zone()-a)%60===0},daysInMonth:function(){return v(this.year(),this.month())},dayOfYear:function(a){var b=rb((mb(this).startOf("day")-mb(this).startOf("year"))/864e5)+1;return null==a?b:this.add("d",a-b)},quarter:function(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)},weekYear:function(a){var b=bb(this,this.lang()._week.dow,this.lang()._week.doy).year;return null==a?b:this.add("y",a-b)},isoWeekYear:function(a){var b=bb(this,1,4).year;return null==a?b:this.add("y",a-b)},week:function(a){var b=this.lang().week(this);return null==a?b:this.add("d",7*(a-b))},isoWeek:function(a){var b=bb(this,1,4).week;return null==a?b:this.add("d",7*(a-b))},weekday:function(a){var b=(this.day()+7-this.lang()._week.dow)%7;return null==a?b:this.add("d",a-b)},isoWeekday:function(a){return null==a?this.day()||7:this.day(this.day()%7?a:a-7)},isoWeeksInYear:function(){return w(this.year(),1,4)},weeksInYear:function(){var a=this._lang._week;return w(this.year(),a.dow,a.doy)},get:function(a){return a=r(a),this[a]()},set:function(a,b){return a=r(a),"function"==typeof this[a]&&this[a](b),this},lang:function(b){return b===a?this._lang:(this._lang=F(b),this)}}),mb.fn.millisecond=mb.fn.milliseconds=ib("Milliseconds",!1),mb.fn.second=mb.fn.seconds=ib("Seconds",!1),mb.fn.minute=mb.fn.minutes=ib("Minutes",!1),mb.fn.hour=mb.fn.hours=ib("Hours",!0),mb.fn.date=ib("Date",!0),mb.fn.dates=d("dates accessor is deprecated. Use date instead.",ib("Date",!0)),mb.fn.year=ib("FullYear",!0),mb.fn.years=d("years accessor is deprecated. Use year instead.",ib("FullYear",!0)),mb.fn.days=mb.fn.day,mb.fn.months=mb.fn.month,mb.fn.weeks=mb.fn.week,mb.fn.isoWeeks=mb.fn.isoWeek,mb.fn.quarters=mb.fn.quarter,mb.fn.toJSON=mb.fn.toISOString,j(mb.duration.fn=i.prototype,{_bubble:function(){var a,b,c,d,e=this._milliseconds,f=this._days,g=this._months,h=this._data;h.milliseconds=e%1e3,a=l(e/1e3),h.seconds=a%60,b=l(a/60),h.minutes=b%60,c=l(b/60),h.hours=c%24,f+=l(c/24),h.days=f%30,g+=l(f/30),h.months=g%12,d=l(g/12),h.years=d},weeks:function(){return l(this.days()/7)},valueOf:function(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*u(this._months/12)},humanize:function(a){var b=+this,c=ab(b,!a,this.lang());return a&&(c=this.lang().pastFuture(b,c)),this.lang().postformat(c)},add:function(a,b){var c=mb.duration(a,b);return this._milliseconds+=c._milliseconds,this._days+=c._days,this._months+=c._months,this._bubble(),this},subtract:function(a,b){var c=mb.duration(a,b);return this._milliseconds-=c._milliseconds,this._days-=c._days,this._months-=c._months,this._bubble(),this},get:function(a){return a=r(a),this[a.toLowerCase()+"s"]()},as:function(a){return a=r(a),this["as"+a.charAt(0).toUpperCase()+a.slice(1)+"s"]()},lang:mb.fn.lang,toIsoString:function(){var a=Math.abs(this.years()),b=Math.abs(this.months()),c=Math.abs(this.days()),d=Math.abs(this.hours()),e=Math.abs(this.minutes()),f=Math.abs(this.seconds()+this.milliseconds()/1e3);return this.asSeconds()?(this.asSeconds()<0?"-":"")+"P"+(a?a+"Y":"")+(b?b+"M":"")+(c?c+"D":"")+(d||e||f?"T":"")+(d?d+"H":"")+(e?e+"M":"")+(f?f+"S":""):"P0D"}});for(ob in ac)ac.hasOwnProperty(ob)&&(kb(ob,ac[ob]),jb(ob.toLowerCase()));kb("Weeks",6048e5),mb.duration.fn.asMonths=function(){return(+this-31536e6*this.years())/2592e6+12*this.years()},mb.lang("en",{ordinal:function(a){var b=a%10,c=1===u(a%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th";return a+c}}),Bb?module.exports=mb:"function"==typeof define&&define.amd?(define("moment",function(a,b,c){return c.config&&c.config()&&c.config().noGlobal===!0&&(qb.moment=nb),mb}),lb(!0)):lb()}).call(this);
year/ui/assets/charisma/bower_components/moment/min/moment-with-langs.min.js:(function(a){function b(a,b,c){switch(arguments.length){case 2:return null!=a?a:b;case 3:return null!=a?a:null!=b?b:c;default:throw new Error("Implement me")}}function c(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1}}function d(a,b){function c(){mb.suppressDeprecationWarnings===!1&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+a)}var d=!0;return j(function(){return d&&(c(),d=!1),b.apply(this,arguments)},b)}function e(a,b){return function(c){return m(a.call(this,c),b)}}function f(a,b){return function(c){return this.lang().ordinal(a.call(this,c),b)}}function g(){}function h(a){z(a),j(this,a)}function i(a){var b=s(a),c=b.year||0,d=b.quarter||0,e=b.month||0,f=b.week||0,g=b.day||0,h=b.hour||0,i=b.minute||0,j=b.second||0,k=b.millisecond||0;this._milliseconds=+k+1e3*j+6e4*i+36e5*h,this._days=+g+7*f,this._months=+e+3*d+12*c,this._data={},this._bubble()}function j(a,b){for(var c in b)b.hasOwnProperty(c)&&(a[c]=b[c]);return b.hasOwnProperty("toString")&&(a.toString=b.toString),b.hasOwnProperty("valueOf")&&(a.valueOf=b.valueOf),a}function k(a){var b,c={};for(b in a)a.hasOwnProperty(b)&&Ab.hasOwnProperty(b)&&(c[b]=a[b]);return c}function l(a){return 0>a?Math.ceil(a):Math.floor(a)}function m(a,b,c){for(var d=""+Math.abs(a),e=a>=0;d.length<b;)d="0"+d;return(e?c?"+":"":"-")+d}function n(a,b,c,d){var e=b._milliseconds,f=b._days,g=b._months;d=null==d?!0:d,e&&a._d.setTime(+a._d+e*c),f&&hb(a,"Date",gb(a,"Date")+f*c),g&&fb(a,gb(a,"Month")+g*c),d&&mb.updateOffset(a,f||g)}function o(a){return"[object Array]"===Object.prototype.toString.call(a)}function p(a){return"[object Date]"===Object.prototype.toString.call(a)||a instanceof Date}function q(a,b,c){var d,e=Math.min(a.length,b.length),f=Math.abs(a.length-b.length),g=0;for(d=0;e>d;d++)(c&&a[d]!==b[d]||!c&&u(a[d])!==u(b[d]))&&g++;return g+f}function r(a){if(a){var b=a.toLowerCase().replace(/(.)s$/,"$1");a=bc[a]||cc[b]||b}return a}function s(a){var b,c,d={};for(c in a)a.hasOwnProperty(c)&&(b=r(c),b&&(d[b]=a[c]));return d}function t(b){var c,d;if(0===b.indexOf("week"))c=7,d="day";else{if(0!==b.indexOf("month"))return;c=12,d="month"}mb[b]=function(e,f){var g,h,i=mb.fn._lang[b],j=[];if("number"==typeof e&&(f=e,e=a),h=function(a){var b=mb().utc().set(d,a);return i.call(mb.fn._lang,b,e||"")},null!=f)return h(f);for(g=0;c>g;g++)j.push(h(g));return j}}function u(a){var b=+a,c=0;return 0!==b&&isFinite(b)&&(c=b>=0?Math.floor(b):Math.ceil(b)),c}function v(a,b){return new Date(Date.UTC(a,b+1,0)).getUTCDate()}function w(a,b,c){return bb(mb([a,11,31+b-c]),b,c).week}function x(a){return y(a)?366:365}function y(a){return a%4===0&&a%100!==0||a%400===0}function z(a){var b;a._a&&-2===a._pf.overflow&&(b=a._a[tb]<0||a._a[tb]>11?tb:a._a[ub]<1||a._a[ub]>v(a._a[sb],a._a[tb])?ub:a._a[vb]<0||a._a[vb]>23?vb:a._a[wb]<0||a._a[wb]>59?wb:a._a[xb]<0||a._a[xb]>59?xb:a._a[yb]<0||a._a[yb]>999?yb:-1,a._pf._overflowDayOfYear&&(sb>b||b>ub)&&(b=ub),a._pf.overflow=b)}function A(a){return null==a._isValid&&(a._isValid=!isNaN(a._d.getTime())&&a._pf.overflow<0&&!a._pf.empty&&!a._pf.invalidMonth&&!a._pf.nullInput&&!a._pf.invalidFormat&&!a._pf.userInvalidated,a._strict&&(a._isValid=a._isValid&&0===a._pf.charsLeftOver&&0===a._pf.unusedTokens.length)),a._isValid}function B(a){return a?a.toLowerCase().replace("_","-"):a}function C(a,b){return b._isUTC?mb(a).zone(b._offset||0):mb(a).local()}function D(a,b){return b.abbr=a,zb[a]||(zb[a]=new g),zb[a].set(b),zb[a]}function E(a){delete zb[a]}function F(a){var b,c,d,e,f=0,g=function(a){if(!zb[a]&&Bb)try{require("./lang/"+a)}catch(b){}return zb[a]};if(!a)return mb.fn._lang;if(!o(a)){if(c=g(a))return c;a=[a]}for(;f<a.length;){for(e=B(a[f]).split("-"),b=e.length,d=B(a[f+1]),d=d?d.split("-"):null;b>0;){if(c=g(e.slice(0,b).join("-")))return c;if(d&&d.length>=b&&q(e,d,!0)>=b-1)break;b--}f++}return mb.fn._lang}function G(a){return a.match(/\[[\s\S]/)?a.replace(/^\[|\]$/g,""):a.replace(/\\/g,"")}function H(a){var b,c,d=a.match(Fb);for(b=0,c=d.length;c>b;b++)d[b]=hc[d[b]]?hc[d[b]]:G(d[b]);return function(e){var f="";for(b=0;c>b;b++)f+=d[b]instanceof Function?d[b].call(e,a):d[b];return f}}function I(a,b){return a.isValid()?(b=J(b,a.lang()),dc[b]||(dc[b]=H(b)),dc[b](a)):a.lang().invalidDate()}function J(a,b){function c(a){return b.longDateFormat(a)||a}var d=5;for(Gb.lastIndex=0;d>=0&&Gb.test(a);)a=a.replace(Gb,c),Gb.lastIndex=0,d-=1;return a}function K(a,b){var c,d=b._strict;switch(a){case"Q":return Rb;case"DDDD":return Tb;case"YYYY":case"GGGG":case"gggg":return d?Ub:Jb;case"Y":case"G":case"g":return Wb;case"YYYYYY":case"YYYYY":case"GGGGG":case"ggggg":return d?Vb:Kb;case"S":if(d)return Rb;case"SS":if(d)return Sb;case"SSS":if(d)return Tb;case"DDD":return Ib;case"MMM":case"MMMM":case"dd":case"ddd":case"dddd":return Mb;case"a":case"A":return F(b._l)._meridiemParse;case"X":return Pb;case"Z":case"ZZ":return Nb;case"T":return Ob;case"SSSS":return Lb;case"MM":case"DD":case"YY":case"GG":case"gg":case"HH":case"hh":case"mm":case"ss":case"ww":case"WW":return d?Sb:Hb;case"M":case"D":case"d":case"H":case"h":case"m":case"s":case"w":case"W":case"e":case"E":return Hb;case"Do":return Qb;default:return c=new RegExp(T(S(a.replace("\\","")),"i"))}}function L(a){a=a||"";var b=a.match(Nb)||[],c=b[b.length-1]||[],d=(c+"").match(_b)||["-",0,0],e=+(60*d[1])+u(d[2]);return"+"===d[0]?-e:e}function M(a,b,c){var d,e=c._a;switch(a){case"Q":null!=b&&(e[tb]=3*(u(b)-1));break;case"M":case"MM":null!=b&&(e[tb]=u(b)-1);break;case"MMM":case"MMMM":d=F(c._l).monthsParse(b),null!=d?e[tb]=d:c._pf.invalidMonth=b;break;case"D":case"DD":null!=b&&(e[ub]=u(b));break;case"Do":null!=b&&(e[ub]=u(parseInt(b,10)));break;case"DDD":case"DDDD":null!=b&&(c._dayOfYear=u(b));break;case"YY":e[sb]=mb.parseTwoDigitYear(b);break;case"YYYY":case"YYYYY":case"YYYYYY":e[sb]=u(b);break;case"a":case"A":c._isPm=F(c._l).isPM(b);break;case"H":case"HH":case"h":case"hh":e[vb]=u(b);break;case"m":case"mm":e[wb]=u(b);break;case"s":case"ss":e[xb]=u(b);break;case"S":case"SS":case"SSS":case"SSSS":e[yb]=u(1e3*("0."+b));break;case"X":c._d=new Date(1e3*parseFloat(b));break;case"Z":case"ZZ":c._useUTC=!0,c._tzm=L(b);break;case"dd":case"ddd":case"dddd":d=F(c._l).weekdaysParse(b),null!=d?(c._w=c._w||{},c._w.d=d):c._pf.invalidWeekday=b;break;case"w":case"ww":case"W":case"WW":case"d":case"e":case"E":a=a.substr(0,1);case"gggg":case"GGGG":case"GGGGG":a=a.substr(0,2),b&&(c._w=c._w||{},c._w[a]=u(b));break;case"gg":case"GG":c._w=c._w||{},c._w[a]=mb.parseTwoDigitYear(b)}}function N(a){var c,d,e,f,g,h,i,j;c=a._w,null!=c.GG||null!=c.W||null!=c.E?(g=1,h=4,d=b(c.GG,a._a[sb],bb(mb(),1,4).year),e=b(c.W,1),f=b(c.E,1)):(j=F(a._l),g=j._week.dow,h=j._week.doy,d=b(c.gg,a._a[sb],bb(mb(),g,h).year),e=b(c.w,1),null!=c.d?(f=c.d,g>f&&++e):f=null!=c.e?c.e+g:g),i=cb(d,e,f,h,g),a._a[sb]=i.year,a._dayOfYear=i.dayOfYear}function O(a){var c,d,e,f,g=[];if(!a._d){for(e=Q(a),a._w&&null==a._a[ub]&&null==a._a[tb]&&N(a),a._dayOfYear&&(f=b(a._a[sb],e[sb]),a._dayOfYear>x(f)&&(a._pf._overflowDayOfYear=!0),d=Z(f,0,a._dayOfYear),a._a[tb]=d.getUTCMonth(),a._a[ub]=d.getUTCDate()),c=0;3>c&&null==a._a[c];++c)a._a[c]=g[c]=e[c];for(;7>c;c++)a._a[c]=g[c]=null==a._a[c]?2===c?1:0:a._a[c];a._d=(a._useUTC?Z:Y).apply(null,g),null!=a._tzm&&a._d.setUTCMinutes(a._d.getUTCMinutes()+a._tzm)}}function P(a){var b;a._d||(b=s(a._i),a._a=[b.year,b.month,b.day,b.hour,b.minute,b.second,b.millisecond],O(a))}function Q(a){var b=new Date;return a._useUTC?[b.getUTCFullYear(),b.getUTCMonth(),b.getUTCDate()]:[b.getFullYear(),b.getMonth(),b.getDate()]}function R(a){if(a._f===mb.ISO_8601)return void V(a);a._a=[],a._pf.empty=!0;var b,c,d,e,f,g=F(a._l),h=""+a._i,i=h.length,j=0;for(d=J(a._f,g).match(Fb)||[],b=0;b<d.length;b++)e=d[b],c=(h.match(K(e,a))||[])[0],c&&(f=h.substr(0,h.indexOf(c)),f.length>0&&a._pf.unusedInput.push(f),h=h.slice(h.indexOf(c)+c.length),j+=c.length),hc[e]?(c?a._pf.empty=!1:a._pf.unusedTokens.push(e),M(e,c,a)):a._strict&&!c&&a._pf.unusedTokens.push(e);a._pf.charsLeftOver=i-j,h.length>0&&a._pf.unusedInput.push(h),a._isPm&&a._a[vb]<12&&(a._a[vb]+=12),a._isPm===!1&&12===a._a[vb]&&(a._a[vb]=0),O(a),z(a)}function S(a){return a.replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(a,b,c,d,e){return b||c||d||e})}function T(a){return a.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function U(a){var b,d,e,f,g;if(0===a._f.length)return a._pf.invalidFormat=!0,void(a._d=new Date(0/0));for(f=0;f<a._f.length;f++)g=0,b=j({},a),b._pf=c(),b._f=a._f[f],R(b),A(b)&&(g+=b._pf.charsLeftOver,g+=10*b._pf.unusedTokens.length,b._pf.score=g,(null==e||e>g)&&(e=g,d=b));j(a,d||b)}function V(a){var b,c,d=a._i,e=Xb.exec(d);if(e){for(a._pf.iso=!0,b=0,c=Zb.length;c>b;b++)if(Zb[b][1].exec(d)){a._f=Zb[b][0]+(e[6]||" ");break}for(b=0,c=$b.length;c>b;b++)if($b[b][1].exec(d)){a._f+=$b[b][0];break}d.match(Nb)&&(a._f+="Z"),R(a)}else a._isValid=!1}function W(a){V(a),a._isValid===!1&&(delete a._isValid,mb.createFromInputFallback(a))}function X(b){var c=b._i,d=Cb.exec(c);c===a?b._d=new Date:d?b._d=new Date(+d[1]):"string"==typeof c?W(b):o(c)?(b._a=c.slice(0),O(b)):p(c)?b._d=new Date(+c):"object"==typeof c?P(b):"number"==typeof c?b._d=new Date(c):mb.createFromInputFallback(b)}function Y(a,b,c,d,e,f,g){var h=new Date(a,b,c,d,e,f,g);return 1970>a&&h.setFullYear(a),h}function Z(a){var b=new Date(Date.UTC.apply(null,arguments));return 1970>a&&b.setUTCFullYear(a),b}function $(a,b){if("string"==typeof a)if(isNaN(a)){if(a=b.weekdaysParse(a),"number"!=typeof a)return null}else a=parseInt(a,10);return a}function _(a,b,c,d,e){return e.relativeTime(b||1,!!c,a,d)}function ab(a,b,c){var d=rb(Math.abs(a)/1e3),e=rb(d/60),f=rb(e/60),g=rb(f/24),h=rb(g/365),i=d<ec.s&&["s",d]||1===e&&["m"]||e<ec.m&&["mm",e]||1===f&&["h"]||f<ec.h&&["hh",f]||1===g&&["d"]||g<=ec.dd&&["dd",g]||g<=ec.dm&&["M"]||g<ec.dy&&["MM",rb(g/30)]||1===h&&["y"]||["yy",h];return i[2]=b,i[3]=a>0,i[4]=c,_.apply({},i)}function bb(a,b,c){var d,e=c-b,f=c-a.day();return f>e&&(f-=7),e-7>f&&(f+=7),d=mb(a).add("d",f),{week:Math.ceil(d.dayOfYear()/7),year:d.year()}}function cb(a,b,c,d,e){var f,g,h=Z(a,0,1).getUTCDay();return h=0===h?7:h,c=null!=c?c:e,f=e-h+(h>d?7:0)-(e>h?7:0),g=7*(b-1)+(c-e)+f+1,{year:g>0?a:a-1,dayOfYear:g>0?g:x(a-1)+g}}function db(b){var c=b._i,d=b._f;return null===c||d===a&&""===c?mb.invalid({nullInput:!0}):("string"==typeof c&&(b._i=c=F().preparse(c)),mb.isMoment(c)?(b=k(c),b._d=new Date(+c._d)):d?o(d)?U(b):R(b):X(b),new h(b))}function eb(a,b){var c,d;if(1===b.length&&o(b[0])&&(b=b[0]),!b.length)return mb();for(c=b[0],d=1;d<b.length;++d)b[d][a](c)&&(c=b[d]);return c}function fb(a,b){var c;return"string"==typeof b&&(b=a.lang().monthsParse(b),"number"!=typeof b)?a:(c=Math.min(a.date(),v(a.year(),b)),a._d["set"+(a._isUTC?"UTC":"")+"Month"](b,c),a)}function gb(a,b){return a._d["get"+(a._isUTC?"UTC":"")+b]()}function hb(a,b,c){return"Month"===b?fb(a,c):a._d["set"+(a._isUTC?"UTC":"")+b](c)}function ib(a,b){return function(c){return null!=c?(hb(this,a,c),mb.updateOffset(this,b),this):gb(this,a)}}function jb(a){mb.duration.fn[a]=function(){return this._data[a]}}function kb(a,b){mb.duration.fn["as"+a]=function(){return+this/b}}function lb(a){"undefined"==typeof ender&&(nb=qb.moment,qb.moment=a?d("Accessing Moment through the global scope is deprecated, and will be removed in an upcoming release.",mb):mb)}for(var mb,nb,ob,pb="2.7.0",qb="undefined"!=typeof global?global:this,rb=Math.round,sb=0,tb=1,ub=2,vb=3,wb=4,xb=5,yb=6,zb={},Ab={_isAMomentObject:null,_i:null,_f:null,_l:null,_strict:null,_tzm:null,_isUTC:null,_offset:null,_pf:null,_lang:null},Bb="undefined"!=typeof module&&module.exports,Cb=/^\/?Date\((\-?\d+)/i,Db=/(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/,Eb=/^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/,Fb=/(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,4}|X|zz?|ZZ?|.)/g,Gb=/(\[[^\[]*\])|(\\)?(LT|LL?L?L?|l{1,4})/g,Hb=/\d\d?/,Ib=/\d{1,3}/,Jb=/\d{1,4}/,Kb=/[+\-]?\d{1,6}/,Lb=/\d+/,Mb=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,Nb=/Z|[\+\-]\d\d:?\d\d/gi,Ob=/T/i,Pb=/[\+\-]?\d+(\.\d{1,3})?/,Qb=/\d{1,2}/,Rb=/\d/,Sb=/\d\d/,Tb=/\d{3}/,Ub=/\d{4}/,Vb=/[+-]?\d{6}/,Wb=/[+-]?\d+/,Xb=/^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Yb="YYYY-MM-DDTHH:mm:ssZ",Zb=[["YYYYYY-MM-DD",/[+-]\d{6}-\d{2}-\d{2}/],["YYYY-MM-DD",/\d{4}-\d{2}-\d{2}/],["GGGG-[W]WW-E",/\d{4}-W\d{2}-\d/],["GGGG-[W]WW",/\d{4}-W\d{2}/],["YYYY-DDD",/\d{4}-\d{3}/]],$b=[["HH:mm:ss.SSSS",/(T| )\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss",/(T| )\d\d:\d\d:\d\d/],["HH:mm",/(T| )\d\d:\d\d/],["HH",/(T| )\d\d/]],_b=/([\+\-]|\d\d)/gi,ac=("Date|Hours|Minutes|Seconds|Milliseconds".split("|"),{Milliseconds:1,Seconds:1e3,Minutes:6e4,Hours:36e5,Days:864e5,Months:2592e6,Years:31536e6}),bc={ms:"millisecond",s:"second",m:"minute",h:"hour",d:"day",D:"date",w:"week",W:"isoWeek",M:"month",Q:"quarter",y:"year",DDD:"dayOfYear",e:"weekday",E:"isoWeekday",gg:"weekYear",GG:"isoWeekYear"},cc={dayofyear:"dayOfYear",isoweekday:"isoWeekday",isoweek:"isoWeek",weekyear:"weekYear",isoweekyear:"isoWeekYear"},dc={},ec={s:45,m:45,h:22,dd:25,dm:45,dy:345},fc="DDD w W M D d".split(" "),gc="M D H h m s w W".split(" "),hc={M:function(){return this.month()+1},MMM:function(a){return this.lang().monthsShort(this,a)},MMMM:function(a){return this.lang().months(this,a)},D:function(){return this.date()},DDD:function(){return this.dayOfYear()},d:function(){return this.day()},dd:function(a){return this.lang().weekdaysMin(this,a)},ddd:function(a){return this.lang().weekdaysShort(this,a)},dddd:function(a){return this.lang().weekdays(this,a)},w:function(){return this.week()},W:function(){return this.isoWeek()},YY:function(){return m(this.year()%100,2)},YYYY:function(){return m(this.year(),4)},YYYYY:function(){return m(this.year(),5)},YYYYYY:function(){var a=this.year(),b=a>=0?"+":"-";return b+m(Math.abs(a),6)},gg:function(){return m(this.weekYear()%100,2)},gggg:function(){return m(this.weekYear(),4)},ggggg:function(){return m(this.weekYear(),5)},GG:function(){return m(this.isoWeekYear()%100,2)},GGGG:function(){return m(this.isoWeekYear(),4)},GGGGG:function(){return m(this.isoWeekYear(),5)},e:function(){return this.weekday()},E:function(){return this.isoWeekday()},a:function(){return this.lang().meridiem(this.hours(),this.minutes(),!0)},A:function(){return this.lang().meridiem(this.hours(),this.minutes(),!1)},H:function(){return this.hours()},h:function(){return this.hours()%12||12},m:function(){return this.minutes()},s:function(){return this.seconds()},S:function(){return u(this.milliseconds()/100)},SS:function(){return m(u(this.milliseconds()/10),2)},SSS:function(){return m(this.milliseconds(),3)},SSSS:function(){return m(this.milliseconds(),3)},Z:function(){var a=-this.zone(),b="+";return 0>a&&(a=-a,b="-"),b+m(u(a/60),2)+":"+m(u(a)%60,2)},ZZ:function(){var a=-this.zone(),b="+";return 0>a&&(a=-a,b="-"),b+m(u(a/60),2)+m(u(a)%60,2)},z:function(){return this.zoneAbbr()},zz:function(){return this.zoneName()},X:function(){return this.unix()},Q:function(){return this.quarter()}},ic=["months","monthsShort","weekdays","weekdaysShort","weekdaysMin"];fc.length;)ob=fc.pop(),hc[ob+"o"]=f(hc[ob],ob);for(;gc.length;)ob=gc.pop(),hc[ob+ob]=e(hc[ob],2);for(hc.DDDD=e(hc.DDD,3),j(g.prototype,{set:function(a){var b,c;for(c in a)b=a[c],"function"==typeof b?this[c]=b:this["_"+c]=b},_months:"January_February_March_April_May_June_July_August_September_October_November_December".split("_"),months:function(a){return this._months[a.month()]},_monthsShort:"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),monthsShort:function(a){return this._monthsShort[a.month()]},monthsParse:function(a){var b,c,d;for(this._monthsParse||(this._monthsParse=[]),b=0;12>b;b++)if(this._monthsParse[b]||(c=mb.utc([2e3,b]),d="^"+this.months(c,"")+"|^"+this.monthsShort(c,""),this._monthsParse[b]=new RegExp(d.replace(".",""),"i")),this._monthsParse[b].test(a))return b},_weekdays:"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),weekdays:function(a){return this._weekdays[a.day()]},_weekdaysShort:"Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),weekdaysShort:function(a){return this._weekdaysShort[a.day()]},_weekdaysMin:"Su_Mo_Tu_We_Th_Fr_Sa".split("_"),weekdaysMin:function(a){return this._weekdaysMin[a.day()]},weekdaysParse:function(a){var b,c,d;for(this._weekdaysParse||(this._weekdaysParse=[]),b=0;7>b;b++)if(this._weekdaysParse[b]||(c=mb([2e3,1]).day(b),d="^"+this.weekdays(c,"")+"|^"+this.weekdaysShort(c,"")+"|^"+this.weekdaysMin(c,""),this._weekdaysParse[b]=new RegExp(d.replace(".",""),"i")),this._weekdaysParse[b].test(a))return b},_longDateFormat:{LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D YYYY",LLL:"MMMM D YYYY LT",LLLL:"dddd, MMMM D YYYY LT"},longDateFormat:function(a){var b=this._longDateFormat[a];return!b&&this._longDateFormat[a.toUpperCase()]&&(b=this._longDateFormat[a.toUpperCase()].replace(/MMMM|MM|DD|dddd/g,function(a){return a.slice(1)}),this._longDateFormat[a]=b),b},isPM:function(a){return"p"===(a+"").toLowerCase().charAt(0)},_meridiemParse:/[ap]\.?m?\.?/i,meridiem:function(a,b,c){return a>11?c?"pm":"PM":c?"am":"AM"},_calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},calendar:function(a,b){var c=this._calendar[a];return"function"==typeof c?c.apply(b):c},_relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},relativeTime:function(a,b,c,d){var e=this._relativeTime[c];return"function"==typeof e?e(a,b,c,d):e.replace(/%d/i,a)},pastFuture:function(a,b){var c=this._relativeTime[a>0?"future":"past"];return"function"==typeof c?c(b):c.replace(/%s/i,b)},ordinal:function(a){return this._ordinal.replace("%d",a)},_ordinal:"%d",preparse:function(a){return a},postformat:function(a){return a},week:function(a){return bb(a,this._week.dow,this._week.doy).week},_week:{dow:0,doy:6},_invalidDate:"Invalid date",invalidDate:function(){return this._invalidDate}}),mb=function(b,d,e,f){var g;return"boolean"==typeof e&&(f=e,e=a),g={},g._isAMomentObject=!0,g._i=b,g._f=d,g._l=e,g._strict=f,g._isUTC=!1,g._pf=c(),db(g)},mb.suppressDeprecationWarnings=!1,mb.createFromInputFallback=d("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.",function(a){a._d=new Date(a._i)}),mb.min=function(){var a=[].slice.call(arguments,0);return eb("isBefore",a)},mb.max=function(){var a=[].slice.call(arguments,0);return eb("isAfter",a)},mb.utc=function(b,d,e,f){var g;return"boolean"==typeof e&&(f=e,e=a),g={},g._isAMomentObject=!0,g._useUTC=!0,g._isUTC=!0,g._l=e,g._i=b,g._f=d,g._strict=f,g._pf=c(),db(g).utc()},mb.unix=function(a){return mb(1e3*a)},mb.duration=function(a,b){var c,d,e,f=a,g=null;return mb.isDuration(a)?f={ms:a._milliseconds,d:a._days,M:a._months}:"number"==typeof a?(f={},b?f[b]=a:f.milliseconds=a):(g=Db.exec(a))?(c="-"===g[1]?-1:1,f={y:0,d:u(g[ub])*c,h:u(g[vb])*c,m:u(g[wb])*c,s:u(g[xb])*c,ms:u(g[yb])*c}):(g=Eb.exec(a))&&(c="-"===g[1]?-1:1,e=function(a){var b=a&&parseFloat(a.replace(",","."));return(isNaN(b)?0:b)*c},f={y:e(g[2]),M:e(g[3]),d:e(g[4]),h:e(g[5]),m:e(g[6]),s:e(g[7]),w:e(g[8])}),d=new i(f),mb.isDuration(a)&&a.hasOwnProperty("_lang")&&(d._lang=a._lang),d},mb.version=pb,mb.defaultFormat=Yb,mb.ISO_8601=function(){},mb.momentProperties=Ab,mb.updateOffset=function(){},mb.relativeTimeThreshold=function(b,c){return ec[b]===a?!1:(ec[b]=c,!0)},mb.lang=function(a,b){var c;return a?(b?D(B(a),b):null===b?(E(a),a="en"):zb[a]||F(a),c=mb.duration.fn._lang=mb.fn._lang=F(a),c._abbr):mb.fn._lang._abbr},mb.langData=function(a){return a&&a._lang&&a._lang._abbr&&(a=a._lang._abbr),F(a)},mb.isMoment=function(a){return a instanceof h||null!=a&&a.hasOwnProperty("_isAMomentObject")},mb.isDuration=function(a){return a instanceof i},ob=ic.length-1;ob>=0;--ob)t(ic[ob]);mb.normalizeUnits=function(a){return r(a)},mb.invalid=function(a){var b=mb.utc(0/0);return null!=a?j(b._pf,a):b._pf.userInvalidated=!0,b},mb.parseZone=function(){return mb.apply(null,arguments).parseZone()},mb.parseTwoDigitYear=function(a){return u(a)+(u(a)>68?1900:2e3)},j(mb.fn=h.prototype,{clone:function(){return mb(this)},valueOf:function(){return+this._d+6e4*(this._offset||0)},unix:function(){return Math.floor(+this/1e3)},toString:function(){return this.clone().lang("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},toDate:function(){return this._offset?new Date(+this):this._d},toISOString:function(){var a=mb(this).utc();return 0<a.year()&&a.year()<=9999?I(a,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):I(a,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]")},toArray:function(){var a=this;return[a.year(),a.month(),a.date(),a.hours(),a.minutes(),a.seconds(),a.milliseconds()]},isValid:function(){return A(this)},isDSTShifted:function(){return this._a?this.isValid()&&q(this._a,(this._isUTC?mb.utc(this._a):mb(this._a)).toArray())>0:!1},parsingFlags:function(){return j({},this._pf)},invalidAt:function(){return this._pf.overflow},utc:function(){return this.zone(0)},local:function(){return this.zone(0),this._isUTC=!1,this},format:function(a){var b=I(this,a||mb.defaultFormat);return this.lang().postformat(b)},add:function(a,b){var c;return c="string"==typeof a&&"string"==typeof b?mb.duration(isNaN(+b)?+a:+b,isNaN(+b)?b:a):"string"==typeof a?mb.duration(+b,a):mb.duration(a,b),n(this,c,1),this},subtract:function(a,b){var c;return c="string"==typeof a&&"string"==typeof b?mb.duration(isNaN(+b)?+a:+b,isNaN(+b)?b:a):"string"==typeof a?mb.duration(+b,a):mb.duration(a,b),n(this,c,-1),this},diff:function(a,b,c){var d,e,f=C(a,this),g=6e4*(this.zone()-f.zone());return b=r(b),"year"===b||"month"===b?(d=432e5*(this.daysInMonth()+f.daysInMonth()),e=12*(this.year()-f.year())+(this.month()-f.month()),e+=(this-mb(this).startOf("month")-(f-mb(f).startOf("month")))/d,e-=6e4*(this.zone()-mb(this).startOf("month").zone()-(f.zone()-mb(f).startOf("month").zone()))/d,"year"===b&&(e/=12)):(d=this-f,e="second"===b?d/1e3:"minute"===b?d/6e4:"hour"===b?d/36e5:"day"===b?(d-g)/864e5:"week"===b?(d-g)/6048e5:d),c?e:l(e)},from:function(a,b){return mb.duration(this.diff(a)).lang(this.lang()._abbr).humanize(!b)},fromNow:function(a){return this.from(mb(),a)},calendar:function(a){var b=a||mb(),c=C(b,this).startOf("day"),d=this.diff(c,"days",!0),e=-6>d?"sameElse":-1>d?"lastWeek":0>d?"lastDay":1>d?"sameDay":2>d?"nextDay":7>d?"nextWeek":"sameElse";return this.format(this.lang().calendar(e,this))},isLeapYear:function(){return y(this.year())},isDST:function(){return this.zone()<this.clone().month(0).zone()||this.zone()<this.clone().month(5).zone()},day:function(a){var b=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=a?(a=$(a,this.lang()),this.add({d:a-b})):b},month:ib("Month",!0),startOf:function(a){switch(a=r(a)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===a?this.weekday(0):"isoWeek"===a&&this.isoWeekday(1),"quarter"===a&&this.month(3*Math.floor(this.month()/3)),this},endOf:function(a){return a=r(a),this.startOf(a).add("isoWeek"===a?"week":a,1).subtract("ms",1)},isAfter:function(a,b){return b="undefined"!=typeof b?b:"millisecond",+this.clone().startOf(b)>+mb(a).startOf(b)},isBefore:function(a,b){return b="undefined"!=typeof b?b:"millisecond",+this.clone().startOf(b)<+mb(a).startOf(b)},isSame:function(a,b){return b=b||"ms",+this.clone().startOf(b)===+C(a,this).startOf(b)},min:d("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548",function(a){return a=mb.apply(null,arguments),this>a?this:a}),max:d("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548",function(a){return a=mb.apply(null,arguments),a>this?this:a}),zone:function(a,b){var c=this._offset||0;return null==a?this._isUTC?c:this._d.getTimezoneOffset():("string"==typeof a&&(a=L(a)),Math.abs(a)<16&&(a=60*a),this._offset=a,this._isUTC=!0,c!==a&&(!b||this._changeInProgress?n(this,mb.duration(c-a,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,mb.updateOffset(this,!0),this._changeInProgress=null)),this)},zoneAbbr:function(){return this._isUTC?"UTC":""},zoneName:function(){return this._isUTC?"Coordinated Universal Time":""},parseZone:function(){return this._tzm?this.zone(this._tzm):"string"==typeof this._i&&this.zone(this._i),this},hasAlignedHourOffset:function(a){return a=a?mb(a).zone():0,(this.zone()-a)%60===0},daysInMonth:function(){return v(this.year(),this.month())},dayOfYear:function(a){var b=rb((mb(this).startOf("day")-mb(this).startOf("year"))/864e5)+1;return null==a?b:this.add("d",a-b)},quarter:function(a){return null==a?Math.ceil((this.month()+1)/3):this.month(3*(a-1)+this.month()%3)},weekYear:function(a){var b=bb(this,this.lang()._week.dow,this.lang()._week.doy).year;return null==a?b:this.add("y",a-b)},isoWeekYear:function(a){var b=bb(this,1,4).year;return null==a?b:this.add("y",a-b)},week:function(a){var b=this.lang().week(this);return null==a?b:this.add("d",7*(a-b))},isoWeek:function(a){var b=bb(this,1,4).week;return null==a?b:this.add("d",7*(a-b))},weekday:function(a){var b=(this.day()+7-this.lang()._week.dow)%7;return null==a?b:this.add("d",a-b)},isoWeekday:function(a){return null==a?this.day()||7:this.day(this.day()%7?a:a-7)},isoWeeksInYear:function(){return w(this.year(),1,4)},weeksInYear:function(){var a=this._lang._week;return w(this.year(),a.dow,a.doy)},get:function(a){return a=r(a),this[a]()},set:function(a,b){return a=r(a),"function"==typeof this[a]&&this[a](b),this},lang:function(b){return b===a?this._lang:(this._lang=F(b),this)}}),mb.fn.millisecond=mb.fn.milliseconds=ib("Milliseconds",!1),mb.fn.second=mb.fn.seconds=ib("Seconds",!1),mb.fn.minute=mb.fn.minutes=ib("Minutes",!1),mb.fn.hour=mb.fn.hours=ib("Hours",!0),mb.fn.date=ib("Date",!0),mb.fn.dates=d("dates accessor is deprecated. Use date instead.",ib("Date",!0)),mb.fn.year=ib("FullYear",!0),mb.fn.years=d("years accessor is deprecated. Use year instead.",ib("FullYear",!0)),mb.fn.days=mb.fn.day,mb.fn.months=mb.fn.month,mb.fn.weeks=mb.fn.week,mb.fn.isoWeeks=mb.fn.isoWeek,mb.fn.quarters=mb.fn.quarter,mb.fn.toJSON=mb.fn.toISOString,j(mb.duration.fn=i.prototype,{_bubble:function(){var a,b,c,d,e=this._milliseconds,f=this._days,g=this._months,h=this._data;h.milliseconds=e%1e3,a=l(e/1e3),h.seconds=a%60,b=l(a/60),h.minutes=b%60,c=l(b/60),h.hours=c%24,f+=l(c/24),h.days=f%30,g+=l(f/30),h.months=g%12,d=l(g/12),h.years=d},weeks:function(){return l(this.days()/7)},valueOf:function(){return this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*u(this._months/12)},humanize:function(a){var b=+this,c=ab(b,!a,this.lang());return a&&(c=this.lang().pastFuture(b,c)),this.lang().postformat(c)},add:function(a,b){var c=mb.duration(a,b);return this._milliseconds+=c._milliseconds,this._days+=c._days,this._months+=c._months,this._bubble(),this},subtract:function(a,b){var c=mb.duration(a,b);return this._milliseconds-=c._milliseconds,this._days-=c._days,this._months-=c._months,this._bubble(),this},get:function(a){return a=r(a),this[a.toLowerCase()+"s"]()},as:function(a){return a=r(a),this["as"+a.charAt(0).toUpperCase()+a.slice(1)+"s"]()},lang:mb.fn.lang,toIsoString:function(){var a=Math.abs(this.years()),b=Math.abs(this.months()),c=Math.abs(this.days()),d=Math.abs(this.hours()),e=Math.abs(this.minutes()),f=Math.abs(this.seconds()+this.milliseconds()/1e3);return this.asSeconds()?(this.asSeconds()<0?"-":"")+"P"+(a?a+"Y":"")+(b?b+"M":"")+(c?c+"D":"")+(d||e||f?"T":"")+(d?d+"H":"")+(e?e+"M":"")+(f?f+"S":""):"P0D"}});for(ob in ac)ac.hasOwnProperty(ob)&&(kb(ob,ac[ob]),jb(ob.toLowerCase()));kb("Weeks",6048e5),mb.duration.fn.asMonths=function(){return(+this-31536e6*this.years())/2592e6+12*this.years()},mb.lang("en",{ordinal:function(a){var b=a%10,c=1===u(a%100/10)?"th":1===b?"st":2===b?"nd":3===b?"rd":"th";return a+c}}),function(a){a(mb)}(function(a){return a.lang("ar-ma",{months:"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),monthsShort:"يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),weekdays:"الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),longDateFormat:{LT:"HH:mm",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY LT",LLLL:"dddd D MMMM YYYY LT"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},week:{dow:6,doy:12}})}),function(a){a(mb)}(function(a){var b={1:"١",2:"٢",3:"٣",4:"٤",5:"٥",6:"٦",7:"٧",8:"٨",9:"٩",0:"٠"},c={"١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","٠":"0"};return a.lang("ar-sa",{months:"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),monthsShort:"يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),longDateFormat:{LT:"HH:mm",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY LT",LLLL:"dddd D MMMM YYYY LT"},meridiem:function(a){return 12>a?"ص":"م"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},preparse:function(a){return a.replace(/[۰-۹]/g,function(a){return c[a]}).replace(/،/g,",")},postformat:function(a){return a.replace(/\d/g,function(a){return b[a]}).replace(/,/g,"،")},week:{dow:6,doy:12}})}),function(a){a(mb)}(function(a){var b={1:"١",2:"٢",3:"٣",4:"٤",5:"٥",6:"٦",7:"٧",8:"٨",9:"٩",0:"٠"},c={"١":"1","٢":"2","٣":"3","٤":"4","٥":"5","٦":"6","٧":"7","٨":"8","٩":"9","٠":"0"};return a.lang("ar",{months:"يناير/ كانون الثاني_فبراير/ شباط_مارس/ آذار_أبريل/ نيسان_مايو/ أيار_يونيو/ حزيران_يوليو/ تموز_أغسطس/ آب_سبتمبر/ أيلول_أكتوبر/ تشرين الأول_نوفمبر/ تشرين الثاني_ديسمبر/ كانون الأول".split("_"),monthsShort:"يناير/ كانون الثاني_فبراير/ شباط_مارس/ آذار_أبريل/ نيسان_مايو/ أيار_يونيو/ حزيران_يوليو/ تموز_أغسطس/ آب_سبتمبر/ أيلول_أكتوبر/ تشرين الأول_نوفمبر/ تشرين الثاني_ديسمبر/ كانون الأول".split("_"),weekdays:"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),weekdaysShort:"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),weekdaysMin:"ح_ن_ث_ر_خ_ج_س".split("_"),longDateFormat:{LT:"HH:mm",L:"DD/MM/YYYY",LL:"D MMMM YYYY",LLL:"D MMMM YYYY LT",LLLL:"dddd D MMMM YYYY LT"},meridiem:function(a){return 12>a?"ص":"م"},calendar:{sameDay:"[اليوم على الساعة] LT",nextDay:"[غدا على الساعة] LT",nextWeek:"dddd [على الساعة] LT",lastDay:"[أمس على الساعة] LT",lastWeek:"dddd [على الساعة] LT",sameElse:"L"},relativeTime:{future:"في %s",past:"منذ %s",s:"ثوان",m:"دقيقة",mm:"%d دقائق",h:"ساعة",hh:"%d ساعات",d:"يوم",dd:"%d أيام",M:"شهر",MM:"%d أشهر",y:"سنة",yy:"%d سنوات"},preparse:function(a){return a.replace(/[۰-۹]/g,function(a){return c[a]}).replace(/،/g,",")},postformat:function(a){return a.replace(/\d/g,function(a){return b[a]}).replace(/,/g,"،")
year/filters/ForgerySessionFilter.php:        switch(strtoupper($this->method))
year/filters/ForgerySessionFilter.php:        if(is_string($sessionId=Yii::app()->getRequest()->$method($this->paramName)))
year/filters/ForgerySessionFilter.php:        $this->forgery() ;
year/validate/JValidationEngineAsset.php:        //  注意// \Yii::$container->set(JValidationEngineAsset::className(), ['css' => ["skins/{$this->skin}.css"]]);
year/validate/JValidationEngineAsset.php:        if(!empty($this->js)){
year/validate/JValidationEngineAsset.php:            print_r($this->js) ;
year/validate/JValidationEngineAsset.php:            $this->js[] =   'js/jquery.validationEngine.js';
year/validate/JValidationEngineAsset.php:            $this->js = [
year/validate/JValidityAsset.php:        //  注意// \Yii::$container->set(JValidationEngineAsset::className(), ['css' => ["skins/{$this->skin}.css"]]);
year/validate/JValidityAsset.php:        if(!empty($this->js)){
year/validate/JValidityAsset.php:            print_r($this->js) ;
year/validate/JValidityAsset.php:            $this->js[] =   'jquery.validity.js';
year/validate/JValidityAsset.php:            $this->js = [
year/validate/HappyJsAsset.php:        $this->js = [
year/validate/JValidateAsset.php:        $this->sourcePath = __DIR__.'/assets/jquery-validation/dist';
year/validate/JValidateAsset.php:        $this->js = [
my/course/backend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/course/backend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/course/backend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/course/backend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/dev/console/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/dev/console/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/dev/console/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/dev/console/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/dev/console/controllers/JobController.php:        $this->stdout(__METHOD__) ;
my/dev/console/controllers/JobController.php:        $this->stdout("Job send OK") ;
my/dev/console/controllers/DefaultController.php:        $this->stdout(__METHOD__) ;
my/dev/console/jobs/DownloadJob.php:        file_put_contents($this->file, file_get_contents($this->url));
my/dev/backend/views/default/index.php:$controllers = \dmstr\helpers\Metadata::getModuleControllers($this->context->module->id);
my/dev/backend/views/default/index.php:<?= $this->render(
my/dev/backend/controllers/ModuleController.php:            return $this->getGiiCommand($item);
my/dev/backend/controllers/ModuleController.php:                    return $this->findModelsPathOf($item);
my/dev/backend/controllers/ModuleController.php:        return $this->render('index', [
my/dev/backend/controllers/ModuleController.php:        $modelPaths = $this->findModelsPathOf($module);
my/dev/backend/controllers/DefaultController.php:        return $this->render('index');
my/dev/backend/controllers/DefaultController.php:        return $this->render('fill-form');
my/course/backend/controllers/DefaultController.php:        return $this->render('index');
my/dev/backend/controllers/ShellController.php:        //  return $this->renderContent($content.'<br/>'.$output);
my/dev/backend/controllers/ShellController.php:        return $this->renderContent(($output));
my/dev/backend/controllers/ShellController.php:            return  $output ; // $this->renderAjax() ;
my/dev/backend/controllers/ShellController.php:        //  return $this->renderContent($content.'<br/>'.$output);
my/dev/backend/controllers/ShellController.php:        return $this->renderContent($output);
my/uitest/frontend/assets/AppUiKit.php:        $this->sourcePath = __DIR__ . '/uikit';
my/uitest/frontend/views/layouts/_main.php:<?php $this->beginPage() ?>
my/uitest/frontend/views/layouts/_main.php:    <title><?= Html::encode($this->title) ?></title>
my/uitest/frontend/views/layouts/_main.php:    <?php $this->head() ?>
my/uitest/frontend/views/layouts/_main.php:    <?php $this->beginBody() ?>
my/uitest/frontend/views/layouts/_main.php:    <?php $this->endBody() ?>
my/uitest/frontend/views/layouts/_main.php:<?php $this->endPage() ?>
my/uitest/frontend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/uitest/frontend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/uitest/frontend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/uitest/frontend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/uitest/frontend/controllers/DefaultController.php:        return $this->render('index');
my/uitest/frontend/controllers/DefaultController.php:           return $this->renderContent( print_r($request->post(),true) ) ;
my/uitest/frontend/controllers/DefaultController.php:        return $this->render('form');
my/monkey/controllers/DefaultController.php:        // $this->stdout('hi  here!');
my/monkey/controllers/DefaultController.php:        $this->stdout(sprintf("Hello %s! This is the Monkey programming language!\n", $username));
my/monkey/controllers/DefaultController.php:        $this->stdout(sprintf("Feel free to type in commands\n"));
my/monkey/ast/IntegerLiteral.php:      return  $this->Token->Literal ;
my/monkey/ast/IntegerLiteral.php:       return $this->Token->Literal ;
my/monkey/ast/Program.php:        if(count($this->Statements) >0 ){
my/monkey/ast/Program.php:            return $this->Statements[0]->TokenLiteral() ;
my/monkey/ast/Program.php:        foreach ($this->Statements as $i=>$statement){
my/monkey/ast/FunctionLiteral.php:       return $this->Token->Literal ;
my/monkey/ast/FunctionLiteral.php:        foreach($this->Parameters as $parameter){
my/monkey/ast/FunctionLiteral.php:        $out .= $this->TokenLiteral() ;
my/monkey/ast/FunctionLiteral.php:        $out .= $this->Body->String() ;
my/monkey/ast/ReturnStatement.php:        return $this->Token->Literal ;
my/monkey/ast/ReturnStatement.php:       $out .= $this->TokenLiteral() . ' ';
my/monkey/ast/ReturnStatement.php:       if($this->ReturnValue != null ){
my/monkey/ast/ReturnStatement.php:           $out .= $this->ReturnValue->String() ;
my/monkey/ast/LetStatement.php:        return $this->Token->Literal ;
my/monkey/ast/LetStatement.php:        $out .= $this->TokenLiteral().' ';
my/monkey/ast/LetStatement.php:        $out .= $this->Name->String() ;
my/monkey/ast/LetStatement.php:        if($this->Value != null){
my/monkey/ast/LetStatement.php:            $out .= $this->Value->String() ;
my/monkey/ast/ExpressionStatement.php:       return $this->Token->Literal ;
my/monkey/ast/ExpressionStatement.php:        if($this->Expression != null ){
my/monkey/ast/ExpressionStatement.php:            return $this->Expression->String() ;
my/monkey/ast/BlockStatement.php:       return $this->Token->Literal ;
my/monkey/ast/BlockStatement.php:        foreach ($this->Statements as $i=>$statement){
my/monkey/ast/InfixExpression.php:        return $this->Token->Literal ;
my/monkey/ast/InfixExpression.php:        $out .= $this->Left->String();
my/monkey/ast/InfixExpression.php:        $out .= ' '.$this->Operator.' ';
my/monkey/ast/InfixExpression.php:        $out .= $this->Right->String();
my/monkey/ast/IfExpression.php:        return $this->Token->Literal ;
my/monkey/ast/IfExpression.php:       $out .= $this->Condition->String() ;
my/monkey/ast/IfExpression.php:       $out .= $this->Consequence->String() ;
my/monkey/ast/IfExpression.php:       if($this->Alternative != null){
my/monkey/ast/IfExpression.php:           $out .= $this->Alternative->String() ;
my/monkey/ast/PrefixExpression.php:        return $this->Token->Literal;
my/monkey/ast/PrefixExpression.php:        $out .= $this->Operator;
my/monkey/ast/PrefixExpression.php:        $out .= $this->Right->String();
my/monkey/ast/CallExpression.php:        return $this->Token->Literal;
my/monkey/ast/CallExpression.php:        foreach ($this->Arguments as $i => $argument) {
my/monkey/ast/CallExpression.php:        $out .= $this->Function->String();
my/monkey/ast/Identifier.php:        return $this->Token->Literal ;
my/monkey/ast/Identifier.php:       return $this->Value ;
my/monkey/ast/Boolean.php:        return $this->Token->Literal ;
my/monkey/ast/Boolean.php:        return $this->Token->Literal ;
my/monkey/object/Environment.php:        return isset($this->store[$name]) || ( !empty($this->outer) && $this->outer->Exists($name) );
my/monkey/object/Environment.php:        if(isset($this->store[$name])){
my/monkey/object/Environment.php:            return $this->store[$name] ;
my/monkey/object/Environment.php:        } elseif(!empty($this->outer)){
my/monkey/object/Environment.php:            return $this->outer->Get($name) ;
my/monkey/object/Environment.php:        $this->store[$name] = $val ;
my/monkey/object/Func.php:        foreach ($this->Parameters as $_ => $p) {
my/monkey/object/Func.php:        $out .= $this->Body->String();
my/monkey/object/Error.php:        return 'ERROR: '.$this->Message ;
my/monkey/object/ReturnValue.php:        return $this->Value->Inspect() ;
my/uitest/frontend/views/layouts/main.php:<?php $this->beginPage() ?>
my/uitest/frontend/views/layouts/main.php:    <title><?= Html::encode($this->title) ?></title>
my/uitest/frontend/views/layouts/main.php:    <?php $this->head() ?>
my/uitest/frontend/views/layouts/main.php:    <?php $this->beginBody() ?>
my/uitest/frontend/views/layouts/main.php:    <?php $this->endBody() ?>
my/uitest/frontend/views/layouts/main.php:<?php $this->endPage() ?>
my/monkey/object/Integer.php:      return sprintf("%d",$this->Value);
my/monkey/object/Boolean.php:        return $this->Value == true ? 'true':'false' ;
my/monkey/object/Boolean.php:       //  return sprintf("%s", $this->Value /*gettype($this->Value)*/) ;
my/monkey/parser/Parser.php:        $p = self::$precedences[$this->peekToken->Type] ?? self::LOWEST;
my/monkey/parser/Parser.php:        return self::$precedences[$this->curToken->Type] ?? self::LOWEST;
my/monkey/parser/Parser.php:        $this->prefixParseFns[$tokenType] = $fn;
my/monkey/parser/Parser.php:        $this->infixParseFns[$tokenType] = $fn;
my/monkey/parser/Parser.php:        $this->errors[] = $msg;
my/monkey/parser/Parser.php:        $this->curToken = $this->peekToken;
my/monkey/parser/Parser.php:        $this->peekToken = $this->L->NextToken();
my/monkey/parser/Parser.php:        for (; $this->curToken->Type != TokenType::EOF;) {
my/monkey/parser/Parser.php:            $stmt = $this->parseStatement();
my/monkey/parser/Parser.php:            $this->nextToken();
my/monkey/parser/Parser.php:        switch ($this->curToken->Type) {
my/monkey/parser/Parser.php:                return $this->parseLetStatement();
my/monkey/parser/Parser.php:                return $this->parseReturnStatement();
my/monkey/parser/Parser.php:                return $this->parseExpressionStatement();
my/monkey/parser/Parser.php:            'Token' => $this->curToken,
my/monkey/parser/Parser.php:            'Value' => $this->curToken->Literal,
my/monkey/parser/Parser.php:            'Token' => $this->curToken,
my/monkey/parser/Parser.php:            'Value' => $this->curTokenIs(TokenType::TRUE),
my/monkey/parser/Parser.php:        $this->nextToken();
my/monkey/parser/Parser.php:        $exp = $this->parseExpression(self::LOWEST);
my/monkey/parser/Parser.php:        if (!$this->expectPeek(TokenType::RPAREN)) {
my/monkey/parser/Parser.php:            'Token' => $this->curToken,
my/monkey/parser/Parser.php:        if (!$this->expectPeek(TokenType::LPAREN)) {
my/monkey/parser/Parser.php:        $this->nextToken();
my/monkey/parser/Parser.php:        $expression->Condition = $this->parseExpression(self::LOWEST);
my/monkey/parser/Parser.php:        if (!$this->expectPeek(TokenType::RPAREN)) {
my/monkey/parser/Parser.php:        if (!$this->expectPeek(TokenType::LBRACE)) {
my/monkey/parser/Parser.php:        $expression->Consequence = $this->parseBlockStatement();
my/monkey/parser/Parser.php:        if ($this->peekTokenIs(TokenType::ELSE)) {
my/monkey/parser/Parser.php:            $this->nextToken();
my/monkey/parser/Parser.php:            if (!$this->expectPeek(TokenType::LBRACE)) {
my/monkey/parser/Parser.php:            $expression->Alternative = $this->parseBlockStatement();
my/monkey/parser/Parser.php:            'Token' => $this->curToken,
my/monkey/parser/Parser.php:        if (!$this->expectPeek(TokenType::LPAREN)) {
my/monkey/parser/Parser.php:        $lit->Parameters = $this->parseFunctionParameters();
my/monkey/parser/Parser.php:        if (!$this->expectPeek(TokenType::LBRACE)) {
my/monkey/parser/Parser.php:        $lit->Body = $this->parseBlockStatement();
my/monkey/parser/Parser.php:        if ($this->peekTokenIs(TokenType::RPAREN)) {
my/monkey/parser/Parser.php:            $this->nextToken();
my/monkey/parser/Parser.php:        $this->nextToken();
my/monkey/parser/Parser.php:            'Token' => $this->curToken, 'Value' => $this->curToken->Literal,
my/monkey/parser/Parser.php:        while ($this->peekTokenIs(TokenType::COMMA)) {
my/monkey/parser/Parser.php:            $this->nextToken();
my/monkey/parser/Parser.php:            $this->nextToken();
my/monkey/parser/Parser.php:                'Token' => $this->curToken, 'Value' => $this->curToken->Literal,
my/monkey/parser/Parser.php:        if (!$this->expectPeek(TokenType::RPAREN)) {
my/monkey/parser/Parser.php:            'Token' => $this->curToken,
my/monkey/parser/Parser.php:        $exp->Arguments = $this->parseCallArguments();
my/monkey/parser/Parser.php:        if($this->peekTokenIs(TokenType::RPAREN)){
my/monkey/parser/Parser.php:            $this->nextToken() ;
my/monkey/parser/Parser.php:        $this->nextToken() ;
my/monkey/parser/Parser.php:        $args[] = $this->parseExpression(self::LOWEST ) ;
my/monkey/parser/Parser.php:        while ($this->peekTokenIs(TokenType::COMMA)){
my/monkey/parser/Parser.php:            $this->nextToken() ;
my/monkey/parser/Parser.php:            $this->nextToken() ;
my/monkey/parser/Parser.php:            $args[] = $this->parseExpression(self::LOWEST);
my/monkey/parser/Parser.php:        if(!$this->expectPeek(TokenType::RPAREN)){
my/monkey/parser/Parser.php:            'Token' => $this->curToken,
my/monkey/parser/Parser.php:        $this->nextToken();
my/monkey/parser/Parser.php:        while (!$this->curTokenIs(TokenType::RBRACE)) {
my/monkey/parser/Parser.php:            $stmt = $this->parseStatement();
my/monkey/parser/Parser.php:            $this->nextToken();
my/monkey/parser/Parser.php:        // var_dump($this->curToken->Literal) ;
my/monkey/parser/Parser.php:            'Token' => $this->curToken,
my/monkey/parser/Parser.php:            $value = intval($this->curToken->Literal);
my/monkey/parser/Parser.php:            $msg = sprintf("could not parse %s as integer", $this->curToken->Literal);
my/monkey/parser/Parser.php:            $this->errors[] = $msg;
my/monkey/parser/Parser.php:        $stmt->Token = $this->curToken;
my/monkey/parser/Parser.php:        if (!$this->expectPeek(TokenType::IDENT)) {
my/monkey/parser/Parser.php:        $stmt->Name->Token = $this->curToken;
my/monkey/parser/Parser.php:        $stmt->Name->Value = $this->curToken->Literal;
my/monkey/parser/Parser.php:        if (!$this->expectPeek(TokenType::ASSIGN)) {
my/monkey/parser/Parser.php:        $this->nextToken() ;
my/monkey/parser/Parser.php:        $stmt->Value = $this->parseExpression(self::LOWEST) ;
my/monkey/parser/Parser.php:        for (; !$this->curTokenIs(TokenType::SEMICOLON);) {
my/monkey/parser/Parser.php:            $this->nextToken();
my/monkey/parser/Parser.php:        $stmt->Token = $this->curToken;
my/monkey/parser/Parser.php:        $this->nextToken();
my/monkey/parser/Parser.php:        $stmt->ReturnValue = $this->parseExpression(self::LOWEST) ;
my/monkey/parser/Parser.php:        for (; !$this->curTokenIs(TokenType::SEMICOLON);) {
my/monkey/parser/Parser.php:            $this->nextToken();
my/monkey/parser/Parser.php:            'Token' => $this->curToken,
my/monkey/parser/Parser.php:        $stmt->Expression = $this->parseExpression(static::LOWEST);
my/monkey/parser/Parser.php:        if ($this->peekTokenIs(TokenType::SEMICOLON)) {
my/monkey/parser/Parser.php:            $this->nextToken();
my/monkey/parser/Parser.php:         * $prefix = isset($$this->prefixParseFns[$this->curToken->Type]) ? $this->prefixParseFns[$this->curToken->Type] : false;
my/monkey/parser/Parser.php:        $prefix = $this->prefixParseFns[$this->curToken->Type] ?? false;
my/monkey/parser/Parser.php:            $this->noPrefixParseFnError($this->curToken->Type);
my/monkey/parser/Parser.php:            !$this->peekTokenIs(TokenType::SEMICOLON)
my/monkey/parser/Parser.php:            && $precedence < $this->peekPrecedence()
my/monkey/parser/Parser.php:            $infix = $this->infixParseFns[$this->peekToken->Type] ?? null;
my/monkey/parser/Parser.php:            $this->nextToken();
my/monkey/parser/Parser.php:            'Token' => $this->curToken,
my/monkey/parser/Parser.php:            'Operator' => $this->curToken->Literal,
my/monkey/parser/Parser.php:        $this->nextToken();
my/monkey/parser/Parser.php:        $expression->Right = $this->parseExpression(static::PREFIX);
my/monkey/parser/Parser.php:            'Token' => $this->curToken,
my/monkey/parser/Parser.php:            'Operator' => $this->curToken->Literal,
my/monkey/parser/Parser.php:        $precedence = $this->curPrecedence();
my/monkey/parser/Parser.php:        $this->nextToken();
my/monkey/parser/Parser.php:        $expression->Right = $this->parseExpression($precedence);
my/monkey/parser/Parser.php:        return $this->curToken->Type == $tokenType;
my/monkey/parser/Parser.php:        return $this->peekToken->Type == $tokenType;
my/monkey/parser/Parser.php:        if ($this->peekTokenIs($tokenType)) {
my/monkey/parser/Parser.php:            $this->nextToken();
my/monkey/parser/Parser.php:        $this->peekError($tokenType);
my/monkey/parser/Parser.php:        return $this->errors;
my/monkey/parser/Parser.php:            $tokenType, $this->peekToken->Type);
my/monkey/parser/Parser.php:        $this->errors[] = $msg;
my/monkey/tests/TestCase.php:        $this->destroyApplication();
my/monkey/tests/ast/AstTest.php:        $this->assertEquals($program->String(),"let myVar = anotherVar;",
my/monkey/tests/HelloTest.php:        $this->assertTrue(true,'this should be true' ) ;
my/monkey/tests/parser/ParserTest.php:        $this->assertNotNull($program);
my/monkey/tests/parser/ParserTest.php:        $this->assertEquals(count($program->Statements), 3);
my/monkey/tests/parser/ParserTest.php:            $this->_testLetStatement($stmt, $tt[0]);
my/monkey/tests/parser/ParserTest.php:        $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:        $this->assertNotNull($program);
my/monkey/tests/parser/ParserTest.php:        $this->assertEquals(count($program->Statements), 3);
my/monkey/tests/parser/ParserTest.php:            $this->_testLetStatement($stmt, $tt[0]);
my/monkey/tests/parser/ParserTest.php:            $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:            $this->assertCount(1, $program->Statements
my/monkey/tests/parser/ParserTest.php:            if (!$this->_testLetStatement($stmt, $tt[1])) {
my/monkey/tests/parser/ParserTest.php:            if (!$this->_testLiteralExpression($val, $tt[2])) {
my/monkey/tests/parser/ParserTest.php:        $this->expectOutputString('foo');
my/monkey/tests/parser/ParserTest.php:        // $this->assertEquals(count($errors),0);
my/monkey/tests/parser/ParserTest.php:        // $this->assertEmpty($errors ,sprintf("parser has %d errors", count($errors)));
my/monkey/tests/parser/ParserTest.php:        $this->assertCount(0, $errors, print_r($errors, true));
my/monkey/tests/parser/ParserTest.php:            $this->assertEmpty($error, "parser error: {$error}");
my/monkey/tests/parser/ParserTest.php:        $this->assertEquals($s->TokenLiteral(), 'let');
my/monkey/tests/parser/ParserTest.php:            $this->assertInstanceOf(LetStatement::class, $s);
my/monkey/tests/parser/ParserTest.php:            $this->assertEquals($s->Name->Value, $name);
my/monkey/tests/parser/ParserTest.php:            $this->assertEquals($s->Name->TokenLiteral(), $name);
my/monkey/tests/parser/ParserTest.php:        $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:        $this->assertCount(3, $program->Statements
my/monkey/tests/parser/ParserTest.php:            $this->assertInstanceOf(ReturnStatement::class, $stmt,
my/monkey/tests/parser/ParserTest.php:            $this->assertEquals($stmt->TokenLiteral(), 'return',
my/monkey/tests/parser/ParserTest.php:        $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:        $this->assertCount(1, $program->Statements
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(ExpressionStatement::class, $stmt,
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(Identifier::class, $ident,
my/monkey/tests/parser/ParserTest.php:        $this->assertEquals($ident->Value, 'foobar',
my/monkey/tests/parser/ParserTest.php:        $this->assertEquals($ident->TokenLiteral(), 'foobar',
my/monkey/tests/parser/ParserTest.php:        $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:        $this->assertCount(1, $program->Statements
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(ExpressionStatement::class, $stmt,
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(IntegerLiteral::class, $literal,
my/monkey/tests/parser/ParserTest.php:        $this->assertEquals($literal->Value, '5',
my/monkey/tests/parser/ParserTest.php:        $this->assertEquals($literal->TokenLiteral(), '5',
my/monkey/tests/parser/ParserTest.php:        $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:        $this->assertCount(1, $program->Statements
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(ExpressionStatement::class, $stmt,
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(Boolean::class, $literal,
my/monkey/tests/parser/ParserTest.php:        $this->assertEquals($literal->Value, '5',
my/monkey/tests/parser/ParserTest.php:        $this->assertEquals($literal->TokenLiteral(), '5',
my/monkey/tests/parser/ParserTest.php:            $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:            $this->assertCount(1, $program->Statements
my/monkey/tests/parser/ParserTest.php:            $this->assertInstanceOf(ExpressionStatement::class, $stmt,
my/monkey/tests/parser/ParserTest.php:            $this->assertInstanceOf(PrefixExpression::class, $exp,
my/monkey/tests/parser/ParserTest.php:            $this->assertEquals($exp->Operator, $tt[1],
my/monkey/tests/parser/ParserTest.php:            if (!$this->_testIntegerLiteral($exp->Right, $tt[2])) {
my/monkey/tests/parser/ParserTest.php:            if (!$this->_testLiteralExpression($exp->Right, $tt[2])) {
my/monkey/tests/parser/ParserTest.php:            $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:            $this->assertCount(1, $program->Statements
my/monkey/tests/parser/ParserTest.php:            $this->assertInstanceOf(ExpressionStatement::class, $stmt,
my/monkey/tests/parser/ParserTest.php:            $this->assertInstanceOf(InfixExpression::class, $exp,
my/monkey/tests/parser/ParserTest.php:            if (!$this->_testLiteralExpression($exp->Left, $tt[1])) {
my/monkey/tests/parser/ParserTest.php:            if (!$this->_testLiteralExpression($exp->Right, $tt[3])) {
my/monkey/tests/parser/ParserTest.php:            if (!$this->_testIntegerLiteral($exp->Left, $tt[1])) {
my/monkey/tests/parser/ParserTest.php:            $this->assertEquals($exp->Operator, $tt[2],
my/monkey/tests/parser/ParserTest.php:            if (!$this->_testIntegerLiteral($exp->Right, $tt[3])) {
my/monkey/tests/parser/ParserTest.php:            $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:            $this->assertTrue($actual == $tt[1],
my/monkey/tests/parser/ParserTest.php:        $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:        $this->assertCount(1, $program->Statements
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(ExpressionStatement::class, $stmt,
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(IfExpression::class, $exp,
my/monkey/tests/parser/ParserTest.php:        if (!$this->_testInfixExpression($exp->Condition, "x", '<', 'y')) {
my/monkey/tests/parser/ParserTest.php:            $this->assertTrue(false,
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(ExpressionStatement::class, $consequence,
my/monkey/tests/parser/ParserTest.php:        if (!$this->_testIdentifier($consequence->Expression, 'x')) {
my/monkey/tests/parser/ParserTest.php:        // $this->assertNotEmpty($stack);
my/monkey/tests/parser/ParserTest.php:        $this->assertNotNull($exp->Alternative,
my/monkey/tests/parser/ParserTest.php:        $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:        $this->assertCount(1, $program->Statements
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(ExpressionStatement::class, $stmt,
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(IfExpression::class, $exp,
my/monkey/tests/parser/ParserTest.php:        if (!$this->_testInfixExpression($exp->Condition, "x", '<', 'y')) {
my/monkey/tests/parser/ParserTest.php:            $this->assertTrue(false,
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(ExpressionStatement::class, $consequence,
my/monkey/tests/parser/ParserTest.php:        if (!$this->_testIdentifier($consequence->Expression, 'x')) {
my/monkey/tests/parser/ParserTest.php:        // $this->assertNotEmpty($stack);
my/monkey/tests/parser/ParserTest.php:        $this->assertNotNull($exp->Alternative,
my/monkey/tests/parser/ParserTest.php:        $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:        $this->assertCount(1, $program->Statements
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(ExpressionStatement::class, $stmt,
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(FunctionLiteral::class, $function,
my/monkey/tests/parser/ParserTest.php:        $this->assertCount(2, $function->Parameters,
my/monkey/tests/parser/ParserTest.php:        $this->_testLiteralExpression($function->Parameters[0], 'x');
my/monkey/tests/parser/ParserTest.php:        $this->_testLiteralExpression($function->Parameters[1], 'y');
my/monkey/tests/parser/ParserTest.php:        $this->assertCount(1, $function->Body->Statements,
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(ExpressionStatement::class, $bodyStmt,
my/monkey/tests/parser/ParserTest.php:        $this->_testInfixExpression($bodyStmt->Expression, 'x', '+', 'y');
my/monkey/tests/parser/ParserTest.php:            $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:            $this->assertEquals(count($function->Parameters), count($tt['expectedParams']),
my/monkey/tests/parser/ParserTest.php:                $this->_testLiteralExpression($function->Parameters[$i], $ident);
my/monkey/tests/parser/ParserTest.php:        $this->checkParserErrors($p);
my/monkey/tests/parser/ParserTest.php:        $this->assertCount(1, $program->Statements
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(ExpressionStatement::class, $stmt,
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(CallExpression::class, $exp,
my/monkey/tests/parser/ParserTest.php:        if (!$this->_testIdentifier($exp->Function, 'add')) {
my/monkey/tests/parser/ParserTest.php:        $this->assertCount(3, $exp->Arguments
my/monkey/tests/parser/ParserTest.php:        $this->_testLiteralExpression($exp->Arguments[0], 1);
my/monkey/tests/parser/ParserTest.php:        $this->_testInfixExpression($exp->Arguments[1], 2, '*', 3);
my/monkey/tests/parser/ParserTest.php:        $this->_testInfixExpression($exp->Arguments[2], 4, '+', 5);
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(IntegerLiteral::class, $il,
my/monkey/tests/parser/ParserTest.php:        $this->assertEquals($integ->Value, $value,
my/monkey/tests/parser/ParserTest.php:            $this->assertTrue(false,
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(Identifier::class, $exp,
my/monkey/tests/parser/ParserTest.php:                $this->assertTrue(false,
my/monkey/tests/parser/ParserTest.php:                $this->assertTrue(false,
my/monkey/tests/parser/ParserTest.php:                return $this->_testIntegerLiteral($exp, $excepted);
my/monkey/tests/parser/ParserTest.php:                return $this->_testIdentifier($exp, $excepted);
my/monkey/tests/parser/ParserTest.php:                return $this->_testBooleanLiteral($exp, $excepted);
my/monkey/tests/parser/ParserTest.php:        $this->assertTrue(false,
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(InfixExpression::class, $exp,
my/monkey/tests/parser/ParserTest.php:        if (!$this->_testLiteralExpression($opExp->Left, $left)) {
my/monkey/tests/parser/ParserTest.php:            $this->assertFlase(true,
my/monkey/tests/parser/ParserTest.php:        if (!$this->_testLiteralExpression($opExp->Right, $right)) {
my/monkey/tests/parser/ParserTest.php:        $this->assertInstanceOf(Boolean::class, $exp,
my/monkey/tests/parser/ParserTest.php:            // $this->assertFalse(true,
my/monkey/tests/parser/ParserTest.php:            $this->assertTrue(false,
my/monkey/tests/parser/ParserTest.php:           // $this->assertFlase(true,
my/monkey/tests/parser/ParserTest.php:            $this->assertTrue(false,
my/monkey/tests/lexer/LexerTest.php:            $this->assertEquals($tok->Type, $tt[0]);
my/monkey/tests/lexer/LexerTest.php:            $this->assertEquals($tok->Literal, $tt[1]);
my/monkey/tests/lexer/LexerTest.php:            $this->assertEquals($tok->Type, $tt[0]);
my/monkey/tests/lexer/LexerTest.php:            $this->assertEquals($tok->Literal, $tt[1]);
my/monkey/tests/lexer/LexerTest.php:            $this->assertEquals($tok->Type, $tt[0]);
my/monkey/tests/lexer/LexerTest.php:            $this->assertEquals($tok->Literal, $tt[1]);
my/monkey/lexer/Lexer.php:        if ($this->readPosition >= strlen($this->input)) {
my/monkey/lexer/Lexer.php:            $this->ch = 0;
my/monkey/lexer/Lexer.php:            // die('over：'.$this->ch);
my/monkey/lexer/Lexer.php:            $this->ch = $this->input[$this->readPosition]; // 需要做 ord() ???
my/monkey/lexer/Lexer.php:        $this->position = $this->readPosition;
my/monkey/lexer/Lexer.php:        $this->readPosition += 1;
my/monkey/lexer/Lexer.php:        $this->skipWitespace();
my/monkey/lexer/Lexer.php:        $tok = $this->newToken(static::$oneCharTokens[','],',');
my/monkey/lexer/Lexer.php:        // print_r($this->ch ." -------------------") ;
my/monkey/lexer/Lexer.php:            case '=' === $this->ch:
my/monkey/lexer/Lexer.php:                if ($this->peekChar() == '=') {
my/monkey/lexer/Lexer.php:                    $ch = $this->ch;
my/monkey/lexer/Lexer.php:                    $this->readChar();
my/monkey/lexer/Lexer.php:                    $tok->Literal = $ch . $this->ch;
my/monkey/lexer/Lexer.php:                    $tok = $this->newToken(TokenType::ASSIGN, $this->ch);
my/monkey/lexer/Lexer.php:            case '+' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::PLUS, $this->ch);
my/monkey/lexer/Lexer.php:            case '-' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::MINUS, $this->ch);
my/monkey/lexer/Lexer.php:            case '!' === $this->ch:
my/monkey/lexer/Lexer.php:                if ($this->peekChar() == '=') {
my/monkey/lexer/Lexer.php:                    $ch = $this->ch;
my/monkey/lexer/Lexer.php:                    $this->readChar();
my/monkey/lexer/Lexer.php:                    $tok->Literal = $ch . $this->ch;
my/monkey/lexer/Lexer.php:                    $tok = $this->newToken(TokenType::BANG, $this->ch);
my/monkey/lexer/Lexer.php:            case '/' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::SLASH, $this->ch);
my/monkey/lexer/Lexer.php:            case '*' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::ASTERISK, $this->ch);
my/monkey/lexer/Lexer.php:            case '<' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::LT, $this->ch);
my/monkey/lexer/Lexer.php:            case '>' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::GT, $this->ch);
my/monkey/lexer/Lexer.php:            case ';' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::SEMICOLON, $this->ch);
my/monkey/lexer/Lexer.php:            case ',' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::COMMA, $this->ch);
my/monkey/lexer/Lexer.php:            case '(' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::LPAREN, $this->ch);
my/monkey/lexer/Lexer.php:            case ')' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::RPAREN, $this->ch);
my/monkey/lexer/Lexer.php:            case '{' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::LBRACE, $this->ch);
my/monkey/lexer/Lexer.php:            case '}' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::RBRACE, $this->ch);
my/monkey/lexer/Lexer.php:            case '[' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::LBRAKET, $this->ch);
my/monkey/lexer/Lexer.php:            case ']' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::RBRAKET, $this->ch);
my/monkey/lexer/Lexer.php:            case ':' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::COLON, $this->ch);
my/monkey/lexer/Lexer.php:            case '"' === $this->ch:
my/monkey/lexer/Lexer.php:                $tok->Literal = $this->readString();
my/monkey/lexer/Lexer.php:       case in_array($this->ch, array_keys(static::$oneCharTokens),true) === true:
my/monkey/lexer/Lexer.php:         $tok = $this->newToken(static::$oneCharTokens[$this->ch],$this->ch);
my/monkey/lexer/Lexer.php:            case 0 === $this->ch :
my/monkey/lexer/Lexer.php:                $tok = $this->newToken(TokenType::EOF, "");
my/monkey/lexer/Lexer.php:                if ($this->isLetter($this->ch)) {
my/monkey/lexer/Lexer.php:                    // $tok->Literal = $this->readIdentifier();
my/monkey/lexer/Lexer.php:                    $literal = $this->readIdentifier();
my/monkey/lexer/Lexer.php:                    $tok = new Token(); // $this->newToken(TokenType::LookupIdent($literal),$literal) ;
my/monkey/lexer/Lexer.php:                } elseif ($this->isDigit($this->ch)) {
my/monkey/lexer/Lexer.php:                    $tok->Literal = $this->readNumber();
my/monkey/lexer/Lexer.php:                    $tok = $this->newToken(TokenType::ILLEGAL, $this->ch);
my/monkey/lexer/Lexer.php:        $this->readChar();
my/monkey/lexer/Lexer.php:        // $ch = $this->ch;
my/monkey/lexer/Lexer.php:        while (preg_match($whitspacePattern, $this->ch) == 1) {
my/monkey/lexer/Lexer.php:            $this->readChar();
my/monkey/lexer/Lexer.php:            // $ch = $this->ch ;
my/monkey/lexer/Lexer.php:            $this->readChar() ;
my/monkey/lexer/Lexer.php:        $ch = ord($this->ch);
my/monkey/lexer/Lexer.php:            $this->readChar();
my/monkey/lexer/Lexer.php:        if ($this->readPosition >= strlen($this->input)) {
my/monkey/lexer/Lexer.php:        return $this->input[$this->readPosition];
my/monkey/lexer/Lexer.php:        $position = $this->position + 1;
my/monkey/lexer/Lexer.php:            $this->readChar();
my/monkey/lexer/Lexer.php:            if ($this->ch == '"') {
my/monkey/lexer/Lexer.php:        return substr($this->input, $position, $this->position - $position);
my/monkey/lexer/Lexer.php:        $position = $this->position;
my/monkey/lexer/Lexer.php:        for (; $this->isDigit($this->ch);) {
my/monkey/lexer/Lexer.php:            $this->readChar();
my/monkey/lexer/Lexer.php:            substr($this->input, $position, $this->position - $position);
my/monkey/lexer/Lexer.php:        $position = $this->position;
my/monkey/lexer/Lexer.php:        for (; $this->isLetter($this->ch);) {
my/monkey/lexer/Lexer.php:            $this->readChar();
my/monkey/lexer/Lexer.php:            substr($this->input, $position, $this->position - $position);
my/devtools/common/models/ApiProvider.php:        if(!empty($this->modelName)){
my/devtools/common/models/ApiProvider.php:            return $this->modelName ;
my/devtools/common/models/ApiProvider.php:            return $this->generateClassName($this->tableName) ;
my/devtools/common/models/ApiProvider.php:        if (strpos($this->tableName, '*') !== false) {
my/devtools/common/models/ApiProvider.php:            $pattern = $this->tableName;
my/dci/backend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/dci/backend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/dci/backend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/dci/backend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/dci/backend/roles/TransferSource.php:        $dataModel = $this->owner ;
my/devtools/backend/views/convert/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/devtools/backend/views/convert/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/devtools/backend/views/convert/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/devtools/backend/views/convert/index.php:        in the "<?= $this->context->module->id ?>" module.
my/devtools/backend/views/api/_index.php:            $this->load($params,$formName);
my/devtools/backend/views/api/index.php:<?= $this->render('_form',[
my/devtools/backend/views/api/index.php:    <?= $this->render('_create',[
my/devtools/backend/views/api/index.php:    <?= $this->render('_index',[
my/devtools/backend/views/api/index.php:    <?= $this->render('_batch-insert',[
my/devtools/backend/views/db/form4facker.php:        <h1><?= $this->context->action->uniqueId ?></h1>
my/devtools/backend/views/db/form4facker.php:            This is the view content for action "<?= $this->context->action->id ?>".
my/devtools/backend/views/db/form4facker.php:            The action belongs to the controller "<?= get_class($this->context) ?>"
my/devtools/backend/views/db/form4facker.php:            in the "<?= $this->context->module->id ?>" module.
my/devtools/backend/views/db/index.php:$this->title = 'Users';
my/devtools/backend/views/db/index.php:$this->params['breadcrumbs'][] = $this->title;
my/devtools/backend/views/db/index.php:    <h1><?= Html::encode($this->title) ?></h1>
my/devtools/backend/views/db/index.php:               return $this->render('_list_item',['model' => $model]);
my/devtools/backend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/devtools/backend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/devtools/backend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/devtools/backend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/devtools/backend/controllers/ConvertController.php:        return $this->render('index',[]);
my/devtools/backend/controllers/QuickController.php:        if ($this->db != 'db') {
my/devtools/backend/controllers/QuickController.php:            DynamicActiveRecord::setDbID($this->db);
my/devtools/backend/controllers/QuickController.php:        // echo $this->db ; die(__FILE__);
my/devtools/backend/controllers/DbController.php:        return $this->render('index',[
my/devtools/backend/controllers/DbController.php:        return $this->render('form4facker');
my/devtools/backend/controllers/ApiController.php:        return $this->render('index',[
my/news/backend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/news/backend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/news/backend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/news/backend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/dci/backend/contexts/TransferMoney.php:        $this->source = $source ;
my/dci/backend/contexts/TransferMoney.php:        $this->destination = $destination ;
my/dci/backend/contexts/TransferMoney.php:        $this->amount = $amount ;
my/dci/backend/contexts/TransferMoney.php:        $this->source->transferTo($this->destination,$this->amount) ;
my/news/frontend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/news/frontend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/news/frontend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/news/frontend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/news/frontend/controllers/DefaultController.php:        return $this->render('index');
my/cms/frontend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/cms/frontend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/cms/frontend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/cms/frontend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/cms/frontend/controllers/DefaultController.php:        return $this->render('index');
my/php/common/symfony_components/FinderDomo.php:        $filenames = $this->getFilenames($path);
my/php/common/symfony_components/FinderDomo.php:            $namespaces[] = $this->getFullNamespace($filename) . '\\' . $this->getClassName($filename);
my/monkey/tests/evaluator/EvaluatorTest.php:            $evaluated = $this->_testEval($tt[0]);
my/monkey/tests/evaluator/EvaluatorTest.php:            $this->_testIntegerObject($evaluated, $tt[1]);
my/monkey/tests/evaluator/EvaluatorTest.php:            $evaluated = $this->_testEval($tt[0]);
my/monkey/tests/evaluator/EvaluatorTest.php:            $this->_testBooleanObject($evaluated, $tt[1]);
my/monkey/tests/evaluator/EvaluatorTest.php:            $evaluated = $this->_testEval($tt[0]);
my/monkey/tests/evaluator/EvaluatorTest.php:                $this->_testIntegerObject($evaluated, $integer);
my/monkey/tests/evaluator/EvaluatorTest.php:                $this->_testNullObject($evaluated);
my/monkey/tests/evaluator/EvaluatorTest.php:            $evaluated = $this->_testEval($tt[0]);
my/monkey/tests/evaluator/EvaluatorTest.php:            $this->_testIntegerObject($evaluated, $tt[1]);
my/monkey/tests/evaluator/EvaluatorTest.php:            $this->assertTrue(false,
my/monkey/tests/evaluator/EvaluatorTest.php:            $evaluated = $this->_testEval($tt[0]);
my/monkey/tests/evaluator/EvaluatorTest.php:            $this->_testBooleanObject($evaluated, $tt[1]);
my/monkey/tests/evaluator/EvaluatorTest.php:        $evaluated = $this->_testEval($input);
my/monkey/tests/evaluator/EvaluatorTest.php:        $this->assertInstanceOf(Func::class, $evaluated,
my/monkey/tests/evaluator/EvaluatorTest.php:        $this->assertCount(1, $fn->Parameters
my/monkey/tests/evaluator/EvaluatorTest.php:        $this->assertEquals($fn->Parameters[0]->String(), 'x',
my/monkey/tests/evaluator/EvaluatorTest.php:        $this->assertEquals($fn->Body->String(), $expectedBody,
my/monkey/tests/evaluator/EvaluatorTest.php:            $this->assertTrue(false,
my/monkey/tests/evaluator/EvaluatorTest.php:            $this->assertTrue(false,
my/monkey/tests/evaluator/EvaluatorTest.php:            $this->assertTrue(false,
my/monkey/tests/evaluator/EvaluatorTest.php:            $this->assertTrue(false,
my/monkey/tests/evaluator/EvaluatorTest.php:            $evaluated = $this->_testEval($tt[0]);
my/monkey/tests/evaluator/EvaluatorTest.php:                $this->assertTrue(false,
my/monkey/tests/evaluator/EvaluatorTest.php:            $this->assertEquals($errObj->Message, $tt[1],
my/monkey/tests/evaluator/EvaluatorTest.php:            $this->_testIntegerObject($this->_testEval($tt[0]), $tt[1]);
my/monkey/tests/evaluator/EvaluatorTest.php:            $this->_testIntegerObject($this->_testEval($tt[0]),$tt[1]);
my/monkey/tests/evaluator/EvaluatorTest.php:          $this->_testIntegerObject($this->_testEval($input),4);
my/php/common/features/TraitsDemo.php:            $this->name = 'foo';
my/php/frontend/views/layouts/php.php:<?php $this->beginContent(__DIR__ . '/main.php'); ?>
my/php/frontend/views/layouts/php.php:<?php $this->endContent(); ?>
my/php/frontend/views/layouts/main.php:<?php $this->beginContent(Yii::$app->getLayoutPath() . '/main.php'); ?>
my/php/frontend/views/layouts/main.php:            //            dump($this->context) ;// 也可以用
my/php/frontend/views/layouts/main.php:<?php $this->endContent(); ?>
my/php/frontend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/php/frontend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/php/frontend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/php/frontend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/php/frontend/views/jquery/dform.php:        <h1><?= $this->context->action->uniqueId ?></h1>
my/php/frontend/views/jquery/dform.php:            This is the view content for action "<?= $this->context->action->id ?>".
my/php/frontend/views/jquery/dform.php:            The action belongs to the controller "<?= get_class($this->context) ?>"
my/php/frontend/views/jquery/dform.php:            in the "<?= $this->context->module->id ?>" module.
my/php/frontend/views/jquery/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/php/frontend/views/jquery/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/php/frontend/views/jquery/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/php/frontend/views/jquery/index.php:        in the "<?= $this->context->module->id ?>" module.
my/php/frontend/controllers/GeneratorController.php:        return $this->renderContent($content) ;
my/php/frontend/controllers/JqueryController.php://        return $this->renderContent(__METHOD__);
my/php/frontend/controllers/JqueryController.php:        return $this->render('index');
my/php/frontend/controllers/JqueryController.php://        return $this->renderContent(__METHOD__);
my/php/frontend/controllers/JqueryController.php:        return $this->render('dform');
my/php/frontend/controllers/AnonymousController.php:       return $this->renderContent($content) ;
my/php/frontend/controllers/FfiController.php:        return $this->renderContent($content);
my/php/frontend/controllers/FfiController.php:        return $this->renderContent($content);
my/php/frontend/controllers/ToolkitController.php:        return $this->renderContent($widget);
my/php/frontend/controllers/ToolkitController.php:        return $this->renderContent('result :>'.$str) ;
my/php/frontend/controllers/SymfonyController.php:        return $this->renderContent(
my/php/frontend/controllers/SymfonyController.php:        return $this->renderContent(
my/php/frontend/controllers/SymfonyController.php:            $this->preventHeadersAlreadySent(fn() => FinderDomo::run())
my/php/frontend/controllers/SymfonyController.php://        $this->renderContent(
my/php/frontend/controllers/SymfonyController.php://            $this->preventHeadersAlreadySent(function () {
my/php/frontend/controllers/SymfonyController.php:        $classes = static::searchClasses($this->module->controllerNamespace, $this->module->getControllerPath());
my/php/frontend/controllers/SymfonyController.php:        return $this->preventHeadersAlreadySent(function () use ($classes) {
my/php/frontend/controllers/SymfonyController.php:        return $this->renderContent(
my/php/frontend/controllers/SymfonyController.php:            $this->preventHeadersAlreadySent(function () {
my/php/frontend/controllers/SymfonyController.php:                $iter = new \hanneskod\classtools\Iterator\ClassIterator($finder->in($this->module->getControllerPath()));
my/php/frontend/controllers/StrController.php:        return $this->renderContent($content);
my/php/frontend/controllers/StrController.php:        return $this->renderContent($widget);
my/php/frontend/controllers/StrController.php:        return $this->renderContent($result);
my/php/frontend/controllers/StrController.php:        return $this->renderContent($result);
my/php/frontend/controllers/ErrorsController.php:        return $this->renderContent($content);
my/php/frontend/controllers/ErrorsController.php:        return $this->renderContent($content);
my/php/frontend/controllers/DefaultController.php:        return $this->render('index', [
my/php/frontend/controllers/DefaultController.php:        $this->db = Instance::ensure($this->db, Connection::class);
my/php/frontend/controllers/DefaultController.php:        $generator = $this->getGenerator();
my/php/frontend/controllers/DefaultController.php:         $this->genClassFile();
my/php/frontend/controllers/DefaultController.php:        return $this->renderContent($content);
my/news/backend/controllers/DefaultController.php:        return $this->render('index');
my/user/console/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/user/console/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/user/console/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/user/console/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/php/v8/Autoloader.php:        $this->src_dir = $src_dir ?? realpath(self::DEFAULT_SRC);
my/php/v8/Autoloader.php:        $fn = $this->src_dir . '/' . $fn . '.php';
my/user/console/controllers/DefaultController.php:       $this->stdout(__METHOD__) ;
my/user/frontend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/user/frontend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/user/frontend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/user/frontend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/user/frontend/controllers/DefaultController.php:        return $this->render('index');
my/user/frontend/components/User.php:        if (($user = $this->getIdentity()) !== null)
my/user/frontend/components/User.php:        if (($user = $this->getIdentity()) === null)
my/content/console/controllers/DefaultController.php:        return $this->render('index');
my/content/console/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/content/console/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/content/console/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/content/console/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/content/services/AlbumService.php:          return $this->findModel($id);
my/content/services/AlbumService.php:        $oldModel = $this->findModel($id);
my/content/services/AlbumService.php:        return $oldModel ; // TODO 重新加载下该模型 // return $this->findModel($id) ;
my/content/services/AlbumService.php:        $model = $this->findModel($id);
my/content/api/controllers/AlbumController.php:        $serviceExecutor->setServiceClass( $this->serviceClass ) ;
my/content/api/controllers/AlbumController.php:        return $this->getServiceExecutor()
my/content/api/controllers/AlbumController.php:        return $this->getServiceExecutor()
my/content/api/controllers/AlbumController.php:        return $this->getServiceExecutor()
my/content/api/controllers/AlbumController.php:        return $this->getServiceExecutor()
my/content/api/controllers/DefaultController.php:        return $this->render('index');
my/content/api/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/content/api/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/content/api/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/content/api/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/content/backend/views/article/_form.php:        <?php $this->beginBlock('main'); ?>
my/content/backend/views/article/_form.php:        <?php $this->endBlock(); ?>
my/content/backend/views/article/_form.php:        <?php $this->beginBlock('seo'); ?>
my/content/backend/views/article/_form.php:        <?php $this->endBlock(); ?>
my/content/backend/views/article/_form.php:                        'content' => $this->blocks['main'],
my/content/backend/views/article/_form.php:                        'content' => $this->blocks['seo'],
my/content/backend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/content/backend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/content/backend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/content/backend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/content/backend/views/article/create.php:$this->title = Yii::t('models', 'Article');
my/content/backend/views/article/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('models', 'Articles'), 'url' => ['index']];
my/content/backend/views/article/create.php:$this->params['breadcrumbs'][] = $this->title;
my/content/backend/views/article/create.php:    <?= $this->render('_form', [
my/content/backend/views/article/index.php:$this->title = Yii::t('models', 'Articles');
my/content/backend/views/article/index.php:$this->params['breadcrumbs'][] = $this->title;
my/content/backend/views/article/index.php://             echo $this->render('_search', ['model' =>$searchModel]);
my/content/backend/views/article/update.php:$this->title = Yii::t('models', 'Article');
my/content/backend/views/article/update.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('models', 'Article'), 'url' => ['index']];
my/content/backend/views/article/update.php:$this->params['breadcrumbs'][] = ['label' => (string)$model->title, 'url' => ['view', 'id' => $model->id]];
my/content/backend/views/article/update.php:$this->params['breadcrumbs'][] = 'Edit';
my/content/backend/views/article/update.php:    <?php echo $this->render('_form', [
my/content/backend/controllers/base/ArticleController.php:return $this->render('index', [
my/content/backend/controllers/base/ArticleController.php:return $this->render('view', [
my/content/backend/controllers/base/ArticleController.php:'model' => $this->findModel($id),
my/content/backend/controllers/base/ArticleController.php:return $this->redirect(['view', 'id' => $model->id]);
my/content/backend/controllers/base/ArticleController.php:return $this->render('create', ['model' => $model]);
my/content/backend/controllers/base/ArticleController.php:$model = $this->findModel($id);
my/content/backend/controllers/base/ArticleController.php:return $this->redirect(Url::previous());
my/content/backend/controllers/base/ArticleController.php:return $this->render('update', [
my/content/backend/controllers/base/ArticleController.php:$this->findModel($id)->delete();
my/content/backend/controllers/base/ArticleController.php:return $this->redirect(Url::previous());
my/content/backend/controllers/base/ArticleController.php:return $this->redirect(Url::previous());
my/content/backend/controllers/base/ArticleController.php:return $this->redirect($url);
my/content/backend/controllers/base/ArticleController.php:return $this->redirect(['index']);
my/content/backend/controllers/base/ArticleCategoryController.php:return $this->render('index', [
my/content/backend/controllers/base/ArticleCategoryController.php:return $this->render('view', [
my/content/backend/controllers/base/ArticleCategoryController.php:'model' => $this->findModel($id),
my/content/backend/controllers/base/ArticleCategoryController.php:return $this->redirect(['view', 'id' => $model->id]);
my/content/backend/controllers/base/ArticleCategoryController.php:return $this->render('create', ['model' => $model]);
my/content/backend/controllers/base/ArticleCategoryController.php:$model = $this->findModel($id);
my/content/backend/controllers/base/ArticleCategoryController.php:return $this->redirect(Url::previous());
my/content/backend/controllers/base/ArticleCategoryController.php:return $this->render('update', [
my/content/backend/controllers/base/ArticleCategoryController.php:$this->findModel($id)->delete();
my/content/backend/controllers/base/ArticleCategoryController.php:return $this->redirect(Url::previous());
my/content/backend/controllers/base/ArticleCategoryController.php:return $this->redirect(Url::previous());
my/content/backend/controllers/base/ArticleCategoryController.php:return $this->redirect($url);
my/content/backend/controllers/base/ArticleCategoryController.php:return $this->redirect(['index']);
my/content/backend/controllers/base/PhotoController.php:return $this->render('index', [
my/content/backend/controllers/base/PhotoController.php:return $this->render('view', [
my/content/backend/controllers/base/PhotoController.php:'model' => $this->findModel($id),
my/content/backend/controllers/base/PhotoController.php:return $this->redirect(['view', 'id' => $model->id]);
my/content/backend/controllers/base/PhotoController.php:return $this->render('create', ['model' => $model]);
my/content/backend/controllers/base/PhotoController.php:$model = $this->findModel($id);
my/content/backend/controllers/base/PhotoController.php:return $this->redirect(Url::previous());
my/content/backend/controllers/base/PhotoController.php:return $this->render('update', [
my/content/backend/controllers/base/PhotoController.php:$this->findModel($id)->delete();
my/content/backend/controllers/base/PhotoController.php:return $this->redirect(Url::previous());
my/content/backend/controllers/base/PhotoController.php:return $this->redirect(Url::previous());
my/content/backend/controllers/base/PhotoController.php:return $this->redirect($url);
my/content/backend/controllers/base/PhotoController.php:return $this->redirect(['index']);
my/content/backend/controllers/base/AlbumController.php:return $this->render('index', [
my/content/backend/controllers/base/AlbumController.php:return $this->render('view', [
my/content/backend/controllers/base/AlbumController.php:'model' => $this->findModel($id),
my/content/backend/controllers/base/AlbumController.php:return $this->redirect(['view', 'id' => $model->id]);
my/content/backend/controllers/base/AlbumController.php:return $this->render('create', ['model' => $model]);
my/content/backend/controllers/base/AlbumController.php:$model = $this->findModel($id);
my/content/backend/controllers/base/AlbumController.php:return $this->redirect(Url::previous());
my/content/backend/controllers/base/AlbumController.php:return $this->render('update', [
my/content/backend/controllers/base/AlbumController.php:$this->findModel($id)->delete();
my/content/backend/controllers/base/AlbumController.php:return $this->redirect(Url::previous());
my/content/backend/controllers/base/AlbumController.php:return $this->redirect(Url::previous());
my/content/backend/controllers/base/AlbumController.php:return $this->redirect($url);
my/content/backend/controllers/base/AlbumController.php:return $this->redirect(['index']);
my/content/backend/views/article/view.php:$this->title = Yii::t('models', 'Article');
my/content/backend/views/article/view.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('models', 'Articles'), 'url' => ['index']];
my/content/backend/views/article/view.php:$this->params['breadcrumbs'][] = ['label' => (string)$model->title, 'url' => ['view', 'id' => $model->id]];
my/content/backend/views/article/view.php:$this->params['breadcrumbs'][] = 'View';
my/content/backend/views/article/view.php:    <?php $this->beginBlock('my\content\common\models\Article'); ?>
my/content/backend/views/article/view.php:    <?php $this->endBlock(); ?>
my/content/backend/views/article/view.php:    'content' => $this->blocks['my\content\common\models\Article'],
my/content/backend/views/article-category/_form.php:        <?php $this->beginBlock('main'); ?>
my/content/backend/views/article-category/_form.php:        <?php $this->endBlock(); ?>
my/content/backend/views/article-category/_form.php:                        'content' => $this->blocks['main'],
my/content/backend/views/photo/update.php:$this->title = Yii::t('models', 'Photo');
my/content/backend/views/photo/update.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('models', 'Photo'), 'url' => ['index']];
my/content/backend/views/photo/update.php:$this->params['breadcrumbs'][] = ['label' => (string)$model->title, 'url' => ['view', 'id' => $model->id]];
my/content/backend/views/photo/update.php:$this->params['breadcrumbs'][] = 'Edit';
my/content/backend/views/photo/update.php:    <?php echo $this->render('_form', [
my/content/backend/views/photo/index-blueimp.php:$this->title = Yii::t('models', 'Photos');
my/content/backend/views/photo/index-blueimp.php:$this->params['breadcrumbs'][] = $this->title;
my/content/backend/views/photo/index-blueimp.php:            echo $this->render('_search', ['model' =>$searchModel]);
my/content/backend/views/photo/_form.php:        <?php $this->beginBlock('main'); ?>
my/content/backend/views/photo/_form.php:        <?php $this->endBlock(); ?>
my/content/backend/views/photo/_form.php:                        'content' => $this->blocks['main'],
my/content/backend/views/photo/selection/_form.php:        <?php $this->beginBlock('main'); ?>
my/content/backend/views/photo/selection/_form.php:        <?php $this->endBlock(); ?>
my/content/backend/views/photo/selection/_form.php:                        'content' => $this->blocks['main'],
my/content/backend/views/photo/selection/index.php:$this->title = Yii::t('models', 'Photos');
my/content/backend/views/photo/selection/index.php:$this->params['breadcrumbs'][] = $this->title;
my/content/backend/views/photo/selection/index.php:    echo $this->render('_search', ['model' => $searchModel]);
my/content/backend/views/photo/_form.v0.php:        <?php $this->beginBlock('main'); ?>
my/content/backend/views/photo/_form.v0.php:        <?php $this->endBlock(); ?>
my/content/backend/views/photo/_form.v0.php:                        'content' => $this->blocks['main'],
my/content/backend/views/photo/create.php:$this->title = Yii::t('models', 'Photo');
my/content/backend/views/photo/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('models', 'Photos'), 'url' => ['index']];
my/content/backend/views/photo/create.php:$this->params['breadcrumbs'][] = $this->title;
my/content/backend/views/photo/create.php:    <?= $this->render('_form', [
my/content/backend/views/photo/index-featherlight.php:$this->title = Yii::t('models', 'Photos');
my/content/backend/views/photo/index-featherlight.php:$this->params['breadcrumbs'][] = $this->title;
my/content/backend/views/photo/index-featherlight.php:            echo $this->render('_search', ['model' =>$searchModel]);
my/content/backend/views/photo/index.php:$this->title = Yii::t('models', 'Photos');
my/content/backend/views/photo/index.php:$this->params['breadcrumbs'][] = $this->title;
my/content/backend/views/photo/index.php:    echo $this->render('_search', ['model' => $searchModel]);
my/content/backend/views/photo/index-photoswipe.php:$this->title = Yii::t('models', 'Photos');
my/content/backend/views/photo/index-photoswipe.php:$this->params['breadcrumbs'][] = $this->title;
my/content/backend/views/photo/index-photoswipe.php:            echo $this->render('_search', ['model' =>$searchModel]);
my/content/backend/views/article-category/view.php:$this->title = Yii::t('models', 'Article Category');
my/content/backend/views/article-category/view.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('models', 'Article Categories'), 'url' => ['index']];
my/content/backend/views/article-category/view.php:$this->params['breadcrumbs'][] = ['label' => (string)$model->name, 'url' => ['view', 'id' => $model->id]];
my/content/backend/views/article-category/view.php:$this->params['breadcrumbs'][] = 'View';
my/content/backend/views/article-category/view.php:    <?php $this->beginBlock('my\content\common\models\ArticleCategory'); ?>
my/content/backend/views/article-category/view.php:    <?php $this->endBlock(); ?>
my/content/backend/views/article-category/view.php:    'content' => $this->blocks['my\content\common\models\ArticleCategory'],
my/content/backend/views/article-category/create.php:$this->title = Yii::t('models', 'Article Category');
my/content/backend/views/article-category/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('models', 'Article Categories'), 'url' => ['index']];
my/content/backend/views/article-category/create.php:$this->params['breadcrumbs'][] = $this->title;
my/content/backend/views/article-category/create.php:    <?= $this->render('_form', [
my/content/backend/views/article-category/index.php:$this->title = Yii::t('models', 'Article Categories');
my/content/backend/views/article-category/index.php:$this->params['breadcrumbs'][] = $this->title;
my/content/backend/views/article-category/index.php://             echo $this->render('_search', ['model' =>$searchModel]);
my/content/backend/views/album/_form.php:        <?php $this->beginBlock('main'); ?>
my/content/backend/views/album/_form.php:        <?php $this->endBlock(); ?>
my/content/backend/views/album/_form.php:    'content' => $this->blocks['main'],
my/content/backend/views/album/view.php:$this->title = Yii::t('models', 'Album');
my/content/backend/views/album/view.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('models', 'Albums'), 'url' => ['index']];
my/content/backend/views/album/view.php:$this->params['breadcrumbs'][] = ['label' => (string)$model->name, 'url' => ['view', 'id' => $model->id]];
my/content/backend/views/album/view.php:$this->params['breadcrumbs'][] = 'View';
my/content/backend/views/album/view.php:    <?php $this->beginBlock('my\content\common\models\Album'); ?>
my/content/backend/views/album/view.php:    <?php $this->endBlock(); ?>
my/content/backend/views/album/view.php:    'content' => $this->blocks['my\content\common\models\Album'],
my/content/backend/views/album/create.php:$this->title = Yii::t('models', 'Album');
my/content/backend/views/album/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('models', 'Albums'), 'url' => ['index']];
my/content/backend/views/album/create.php:$this->params['breadcrumbs'][] = $this->title;
my/content/backend/views/album/create.php:    <?= $this->render('_form', [
my/content/backend/views/album/index.php:$this->title = Yii::t('models', 'Albums');
my/content/backend/views/album/index.php:$this->params['breadcrumbs'][] = $this->title;
my/content/backend/views/album/index.php:            echo $this->render('_search', ['model' =>$searchModel]);
my/content/backend/views/album/update.php:$this->title = Yii::t('models', 'Album');
my/content/backend/views/album/update.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('models', 'Album'), 'url' => ['index']];
my/content/backend/views/album/update.php:$this->params['breadcrumbs'][] = ['label' => (string)$model->name, 'url' => ['view', 'id' => $model->id]];
my/content/backend/views/album/update.php:$this->params['breadcrumbs'][] = 'Edit';
my/content/backend/views/album/update.php:    <?php echo $this->render('_form', [
my/content/backend/controllers/PhotoController.php:        return $this->render('index', [
my/content/backend/controllers/PhotoController.php:        return $this->renderAjax('selection/index', [
my/content/backend/controllers/PhotoController.php:                 return $this->redirect(['view', 'id' => $model->id]);
my/content/backend/controllers/PhotoController.php:                        return $this->redirect(['view', 'id' => $model->id]);
my/content/backend/controllers/PhotoController.php:        return $this->render('create', ['model' => $model]);
my/content/backend/controllers/PhotoController.php:            $model = $this->findModel($id) ;
my/content/backend/controllers/AlbumController.php:        return $this->asJson(
my/content/backend/controllers/DefaultController.php:        return $this->render('index');
my/content/backend/controllers/DefaultController.php:            return $this->asJson([
my/content/backend/controllers/DefaultController.php:                      //  return $this->redirect(['view', 'id' => $model->id]);
my/content/backend/controllers/DefaultController.php:                        return $this->asJson([
my/content/backend/controllers/DefaultController.php:                    return $this->asJson([
my/content/backend/controllers/DefaultController.php:            return $this->asJson([
my/content/backend/controllers/DefaultController.php:        return $this->asJson(
my/content/frontend/controllers/DefaultController.php:        return $this->render('index');
my/content/frontend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/content/frontend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/content/frontend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/content/frontend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/content/common/models/Album.php:        return $this->hasMany(\my\content\common\models\base\Photo::className(),[
my/content/common/models/Album.php:        if(empty($this->cover_uri)){
my/content/common/models/Album.php:        $imgUrl = $uploadStorage->getPublicUrl($this->cover_uri);
my/content/common/models/Photo.php:        if($this->getIsNewRecord()){
my/content/common/models/Photo.php:                'skipOnEmpty' => !$this->getIsNewRecord()
my/content/common/models/Photo.php:            if(!empty($this->uri)){
my/content/common/models/Photo.php:                $this->hash = md5($this->uri);
my/content/common/models/Photo.php:            if($this->isAttributeChanged('uri')){
my/content/common/models/Photo.php:                $this->hash = md5($this->uri);
my/content/common/models/Photo.php:            $album = $this->album ;
my/content/common/models/Photo.php:                $album->cover_uri = $this->uri ;
my/content/common/models/Photo.php:        return $this->hasOne(Album::className(),[
my/content/common/models/Photo.php:        $imgUrl = $uploadStorage->getPublicUrl($this->uri);
my/content/common/models/ArticleSearch.php:$this->load($params);
my/content/common/models/ArticleSearch.php:if (!$this->validate()) {
my/content/common/models/ArticleSearch.php:            'id' => $this->id,
my/content/common/models/ArticleSearch.php:            'cate_id' => $this->cate_id,
my/content/common/models/ArticleSearch.php:            'display_order' => $this->display_order,
my/content/common/models/ArticleSearch.php:            'view_count' => $this->view_count,
my/content/common/models/ArticleSearch.php:            'status' => $this->status,
my/content/common/models/ArticleSearch.php:            'created_at' => $this->created_at,
my/content/common/models/ArticleSearch.php:            'updated_at' => $this->updated_at,
my/content/common/models/ArticleSearch.php:            'created_by' => $this->created_by,
my/content/common/models/ArticleSearch.php:            'updated_by' => $this->updated_by,
my/content/common/models/ArticleSearch.php:        $query->andFilterWhere(['like', 'title', $this->title])
my/content/common/models/ArticleSearch.php://            ->andFilterWhere(['like', 'title_alias', $this->title_alias])
my/content/common/models/ArticleSearch.php:            ->andFilterWhere(['like', 'intro', $this->intro])
my/content/common/models/ArticleSearch.php:            ->andFilterWhere(['like', 'content', $this->content])
my/content/common/models/ArticleSearch.php:            ->andFilterWhere(['like', 'rep_thumb', $this->rep_thumb]);
my/content/common/models/PhotoSearch.php:$this->load($params);
my/content/common/models/PhotoSearch.php:if (!$this->validate()) {
my/content/common/models/PhotoSearch.php:            'id' => $this->id,
my/content/common/models/PhotoSearch.php:            'owner_id' => $this->owner_id,
my/content/common/models/PhotoSearch.php:            'album_id' => $this->album_id,
my/content/common/models/PhotoSearch.php:            'created_at' => $this->created_at,
my/content/common/models/PhotoSearch.php:            'updated_at' => $this->updated_at,
my/content/common/models/PhotoSearch.php:            'created_by' => $this->created_by,
my/content/common/models/PhotoSearch.php:            'updated_by' => $this->updated_by,
my/content/common/models/PhotoSearch.php:        $query->andFilterWhere(['like', 'title', $this->title])
my/content/common/models/PhotoSearch.php:            ->andFilterWhere(['like', 'desc', $this->desc])
my/content/common/models/PhotoSearch.php:            ->andFilterWhere(['like', 'uri', $this->uri])
my/content/common/models/PhotoSearch.php:            ->andFilterWhere(['like', 'ext', $this->ext])
my/content/common/models/PhotoSearch.php:            ->andFilterWhere(['like', 'size', $this->size])
my/content/common/models/PhotoSearch.php:            ->andFilterWhere(['like', 'hash', $this->hash]);
my/content/common/models/AlbumSearch.php:$this->load($params);
my/content/common/models/AlbumSearch.php:if (!$this->validate()) {
my/content/common/models/AlbumSearch.php:            'id' => $this->id,
my/content/common/models/AlbumSearch.php:            'owner_id' => $this->owner_id,
my/content/common/models/AlbumSearch.php:            'status' => $this->status,
my/content/common/models/AlbumSearch.php:            'created_at' => $this->created_at,
my/content/common/models/AlbumSearch.php:            'updated_at' => $this->updated_at,
my/content/common/models/AlbumSearch.php:            'created_by' => $this->created_by,
my/content/common/models/AlbumSearch.php:            'updated_by' => $this->updated_by,
my/content/common/models/AlbumSearch.php:        $query->andFilterWhere(['like', 'name', $this->name])
my/content/common/models/AlbumSearch.php:            ->andFilterWhere(['like', 'desc', $this->desc])
my/content/common/models/AlbumSearch.php:            ->andFilterWhere(['like', 'keywords', $this->keywords])
my/content/common/models/AlbumSearch.php:            ->andFilterWhere(['like', 'cover_uri', $this->cover_uri]);
my/content/common/models/ArticleCategorySearch.php:$this->load($params);
my/content/common/models/ArticleCategorySearch.php:if (!$this->validate()) {
my/content/common/models/ArticleCategorySearch.php:            'id' => $this->id,
my/content/common/models/ArticleCategorySearch.php:            'parent_id' => $this->parent_id,
my/content/common/models/ArticleCategorySearch.php:            'display_order' => $this->display_order,
my/content/common/models/ArticleCategorySearch.php:            'mbr_count' => $this->mbr_count,
my/content/common/models/ArticleCategorySearch.php:            'page_size' => $this->page_size,
my/content/common/models/ArticleCategorySearch.php:            'status' => $this->status,
my/content/common/models/ArticleCategorySearch.php:            'created_at' => $this->created_at,
my/content/common/models/ArticleCategorySearch.php:            'updated_at' => $this->updated_at,
my/content/common/models/ArticleCategorySearch.php:            'created_by' => $this->created_by,
my/content/common/models/ArticleCategorySearch.php:            'updated_by' => $this->updated_by,
my/content/common/models/ArticleCategorySearch.php:        $query->andFilterWhere(['like', 'name', $this->name])
my/content/common/models/ArticleCategorySearch.php:            ->andFilterWhere(['like', 'redirect_url', $this->redirect_url]);
my/content/READEME.md:            'interactive' => $this->interactive,
my/content/migrations/m180921_072741_create_table_content_article.php:        if ($this->db->driverName === 'mysql') {
my/content/migrations/m180921_072741_create_table_content_article.php:        $tableName = $this->tableName ;
my/content/migrations/m180921_072741_create_table_content_article.php:        $this->createTable($tableName, [
my/content/migrations/m180921_072741_create_table_content_article.php:            'id' => $this->primaryKey()->unsigned(),
my/content/migrations/m180921_072741_create_table_content_article.php:            'cate_id' => $this->integer()->notNull()->comment('分类id'),
my/content/migrations/m180921_072741_create_table_content_article.php:            'title' => $this->string()->notNull()->comment('标题'),
my/content/migrations/m180921_072741_create_table_content_article.php:           // 'title_alias' => $this->char()->notNull()->comment('标题别名'),
my/content/migrations/m180921_072741_create_table_content_article.php:            'intro' => $this->text()->comment('简单描述 tease'),
my/content/migrations/m180921_072741_create_table_content_article.php:            'content' => $this->text()->notNull()->comment('内容'),
my/content/migrations/m180921_072741_create_table_content_article.php:            'rep_thumb' => $this->string()->notNull()->defaultValue('')->comment('代表性小图片'),
my/content/migrations/m180921_072741_create_table_content_article.php:            'display_order' => $this->tinyInteger()->unsigned()->notNull()->defaultValue('0')->comment('排序'),
my/content/migrations/m180921_072741_create_table_content_article.php:            'view_count' => $this->integer()->unsigned()->notNull()->defaultValue('0')->comment('查看次数'),
my/content/migrations/m180921_072741_create_table_content_article.php:            'status' => $this->tinyInteger()->notNull()->defaultValue('1')->comment('状态'),
my/content/migrations/m180921_072741_create_table_content_article.php:            // 'creator_id' => $this->integer()->notNull()->defaultValue('0')->comment('创建者id  一般是管理员的id'),
my/content/migrations/m180921_072741_create_table_content_article.php:            'created_at' => $this->integer()->unsigned()->comment('创建时间'),
my/content/migrations/m180921_072741_create_table_content_article.php:            'updated_at' => $this->integer()->unsigned()->comment('更新时间'),
my/content/migrations/m180921_072741_create_table_content_article.php:            'created_by' => $this->integer()->unsigned()->comment('创建者id'),
my/content/migrations/m180921_072741_create_table_content_article.php:            'updated_by' => $this->integer()->unsigned()->comment('更新者id'),
my/content/migrations/m180921_072741_create_table_content_article.php://            'seo_title' => $this->string()->notNull()->defaultValue('')->comment('SEO标题'),
my/content/migrations/m180921_072741_create_table_content_article.php://            'seo_keywords' => $this->string()->notNull()->defaultValue('')->comment('SEO KEYWORDS'),
my/content/migrations/m180921_072741_create_table_content_article.php://            'seo_description' => $this->text()->comment('SEO DESCRIPTION'),
my/content/migrations/m180921_072741_create_table_content_article.php:        $this->createIndex('cTime', $tableName, 'created_at');
my/content/migrations/m180921_072741_create_table_content_article.php:        $this->createIndex('uid', $tableName, 'created_by');
my/content/migrations/m180921_072741_create_table_content_article.php:        $this->createIndex('mTime', $tableName, 'updated_at');
my/content/migrations/m180921_072741_create_table_content_article.php:        $this->createIndex('ordering', $tableName, 'display_order');
my/content/migrations/m180921_072741_create_table_content_article.php:        $this->dropTable($this->tableName);
my/admin/backend/controllers/DefaultController.php:        return $this->render('index');
my/admin/backend/views/default/index.php:$controllers = \dmstr\helpers\Metadata::getModuleControllers($this->context->module->id);
my/admin/backend/views/default/index.php:<?= $this->render(
my/admin/common/models/Admin.php:        if ($this->getIsNewRecord()) {
my/admin/common/models/Admin.php:        return $this->id;
my/admin/common/models/Admin.php:        return $this->group_id;
my/admin/common/models/Admin.php:        return $this->authKey;
my/admin/common/models/Admin.php:        return $this->authKey === $authKey;
my/admin/common/models/Admin.php:        return $this->password === UserHelper::encrypting($password . $this->salt);
my/admin/common/models/Admin.php:                $this->is_del = empty($this->is_del) ? 0 : $this->is_del;
my/admin/common/models/Admin.php:                $this->salt = UserHelper::genSalt();
my/admin/common/models/Admin.php:                $this->password = UserHelper::encrypting($this->password . $this->salt);
my/admin/common/models/Admin.php:                $this->password = UserHelper::encrypting($this->password . $this->salt);
my/admin/common/models/Admin.php:            if ($this->name == 'admin') {
my/admin/common/models/Admin.php:        return $this->hasOne(AdminGroup::className(), ['id' => 'group_id']);
my/content/migrations/m180918_075908_create_table_content_album.php:        // $this->down() ;
my/content/migrations/m180918_075908_create_table_content_album.php:        if ($this->db->driverName === 'mysql') {
my/content/migrations/m180918_075908_create_table_content_album.php:        $this->createTable('content_album', [
my/content/migrations/m180918_075908_create_table_content_album.php:            'id' => $this->primaryKey(),
my/content/migrations/m180918_075908_create_table_content_album.php:            'owner_id' => $this->integer()->comment('所有者的id'), //'所附属的实体的id'
my/content/migrations/m180918_075908_create_table_content_album.php:            'name' => $this->string()->notNull()->comment('相册名称'),
my/content/migrations/m180918_075908_create_table_content_album.php:            'desc' => $this->string()->defaultValue('')->comment('相册描述'),
my/content/migrations/m180918_075908_create_table_content_album.php:            'keywords' => $this->string()->defaultValue('')->comment('相册关键字'),
my/content/migrations/m180918_075908_create_table_content_album.php:            'cover_uri' => $this->string()->comment('封面图片'),
my/content/migrations/m180918_075908_create_table_content_album.php:            // 'mbr_count' => $this->integer()->defaultValue('0')->comment('成员数量'),
my/content/migrations/m180918_075908_create_table_content_album.php:            // 'obj_count' => $this->integer()->defaultValue('0')->comment('成员数量'),
my/content/migrations/m180918_075908_create_table_content_album.php:            //'last_obj_id' => $this->integer()->comment('最后一个成员的id'), //'最后一个成员对象的id'
my/content/migrations/m180918_075908_create_table_content_album.php:            // 'views' => $this->integer()->notNull()->defaultValue('0')->comment('点击量'),
my/content/migrations/m180918_075908_create_table_content_album.php:            'status' => $this->tinyInteger(1)->unsigned()->notNull()->defaultValue('1')->comment('状态'),
my/content/migrations/m180918_075908_create_table_content_album.php:            // 'is_hot' => $this->tinyInteger()->notNull()->defaultValue('0')->comment('是否最热'),
my/content/migrations/m180918_075908_create_table_content_album.php:            'created_at' => $this->integer()->unsigned()->comment('创建时间'),
my/content/migrations/m180918_075908_create_table_content_album.php:            'updated_at' => $this->integer()->unsigned()->comment('更新时间'),
my/content/migrations/m180918_075908_create_table_content_album.php:            'created_by' => $this->integer()->unsigned()->comment('创建者id'),
my/content/migrations/m180918_075908_create_table_content_album.php:            'updated_by' => $this->integer()->unsigned()->comment('更新者id'),
my/content/migrations/m180918_075908_create_table_content_album.php:            // 'privacy' => $this->tinyInteger()->comment('是否私有'),
my/content/migrations/m180918_075908_create_table_content_album.php:            // 'privacy_data' => $this->text()->comment('访问策略数据'),
my/content/migrations/m180918_075908_create_table_content_album.php:        $this->createIndex('cTime', 'content_album', 'created_at');
my/content/migrations/m180918_075908_create_table_content_album.php:        $this->createIndex('uid', 'content_album', 'owner_id');
my/content/migrations/m180918_075908_create_table_content_album.php:        $this->createIndex('mTime', 'content_album', 'updated_at');
my/content/migrations/m180918_075908_create_table_content_album.php:        $this->dropTable('content_album');
my/content/migrations/m180921_072906_create_table_content_article_category.php:        if ($this->db->driverName === 'mysql') {
my/content/migrations/m180921_072906_create_table_content_article_category.php:        $tableName = $this->tableName ;
my/content/migrations/m180921_072906_create_table_content_article_category.php:        $this->createTable($tableName , [
my/content/migrations/m180921_072906_create_table_content_article_category.php:            'id' => $this->primaryKey()->unsigned(),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            // 'position_code' => $this->string()->comment('位置码id site_page_position.ref_code'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            'parent_id' => $this->integer()->unsigned()->notNull()->defaultValue('0')->comment('上级分类'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            'name' => $this->string()->notNull()->comment('名称'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            // 'ref_alias' => $this->string()->notNull()->defaultValue('')->comment('程序识别名称'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            // 'thumb_uri' => $this->string()->defaultValue('')->comment('缩略图'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            'display_order' => $this->tinyInteger()->unsigned()->notNull()->defaultValue('0')->comment('显示顺序'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            'mbr_count' => $this->integer()->unsigned()->notNull()->defaultValue('0')->comment('孩子数量'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            'page_size' => $this->tinyInteger()->unsigned()->notNull()->defaultValue('10')->comment('每页显示数量'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            'status' => $this->tinyInteger()->notNull()->defaultValue('1')->comment('状态 启用 关闭等'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            'redirect_url' => $this->string()->notNull()->defaultValue('')->comment('跳转地址'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            // 'display_type' => $this->string()->notNull()->defaultValue('list')->comment('显示方式'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            //  'create_time' => $this->integer()->unsigned()->notNull()->defaultValue('0')->comment('录入时间'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            // 'position' => $this->integer()->unsigned()->defaultValue(0)->comment('页面编码位置'), // 比如 左上 右下 左一 ...
my/content/migrations/m180921_072906_create_table_content_article_category.php:            'created_at' => $this->integer()->unsigned()->comment('创建时间'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            'updated_at' => $this->integer()->unsigned()->comment('更新时间'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            'created_by' => $this->integer()->unsigned()->comment('创建者id'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:            'updated_by' => $this->integer()->unsigned()->comment('更新者id'),
my/content/migrations/m180921_072906_create_table_content_article_category.php://            'seo_keywords' => $this->string()->notNull()->defaultValue('')->comment('seo关键字'),
my/content/migrations/m180921_072906_create_table_content_article_category.php://            'seo_title' => $this->string()->notNull()->defaultValue('')->comment('seo标题'),
my/content/migrations/m180921_072906_create_table_content_article_category.php://            'seo_description' => $this->text()->comment('seo描述'),
my/content/migrations/m180921_072906_create_table_content_article_category.php:        $this->createIndex('cTime', $tableName, 'created_at');
my/content/migrations/m180921_072906_create_table_content_article_category.php:        $this->createIndex('uid', $tableName, 'created_by');
my/content/migrations/m180921_072906_create_table_content_article_category.php:        $this->createIndex('mTime', $tableName, 'updated_at');
my/content/migrations/m180921_072906_create_table_content_article_category.php:        $this->createIndex('ordering', $tableName, 'display_order');
my/content/migrations/m180921_072906_create_table_content_article_category.php:        $this->dropTable($this->tableName);
my/content/migrations/m180918_085154_create_table_content_photo.php:        if ($this->db->driverName === 'mysql') {
my/content/migrations/m180918_085154_create_table_content_photo.php:        $this->createTable('content_photo', [
my/content/migrations/m180918_085154_create_table_content_photo.php:            'id' => $this->primaryKey()->unsigned(),
my/content/migrations/m180918_085154_create_table_content_photo.php:            'owner_id' => $this->integer()->comment('所有者的id'),
my/content/migrations/m180918_085154_create_table_content_photo.php:            'album_id' => $this->integer()->defaultValue('0')->comment('相册id'),
my/content/migrations/m180918_085154_create_table_content_photo.php:            // 'use_for' => $this->string(),
my/content/migrations/m180918_085154_create_table_content_photo.php:            'title' => $this->string()->defaultValue('')->comment('图片标题'),
my/content/migrations/m180918_085154_create_table_content_photo.php:            'desc' => $this->text()->comment('图片描述'),
my/content/migrations/m180918_085154_create_table_content_photo.php:            'uri' => $this->string()->notNull()->comment('original uploaded image'),
my/content/migrations/m180918_085154_create_table_content_photo.php:            'ext' => $this->string()->notNull()->defaultValue('')->comment('图片扩展名'),
my/content/migrations/m180918_085154_create_table_content_photo.php:            'size' => $this->string()->defaultValue('')->comment('图片大小'),
my/content/migrations/m180918_085154_create_table_content_photo.php:           // 'tags' => $this->string()->notNull()->defaultValue(''),
my/content/migrations/m180918_085154_create_table_content_photo.php:           // 'is_featured' => $this->tinyInteger()->notNull()->defaultValue('0'),
my/content/migrations/m180918_085154_create_table_content_photo.php:           // 'status' => $this->string()->notNull()->defaultValue('pending'),
my/content/migrations/m180918_085154_create_table_content_photo.php:            'hash' => $this->string(32)->notNull()->defaultValue('')->comment('图片哈希'),
my/content/migrations/m180918_085154_create_table_content_photo.php:            'position' => $this->integer()->unsigned()->defaultValue(0)->comment('顺序'),
my/content/migrations/m180918_085154_create_table_content_photo.php:            'created_at' => $this->integer()->unsigned()->comment('创建时间'),
my/content/migrations/m180918_085154_create_table_content_photo.php:            'updated_at' => $this->integer()->unsigned()->comment('更新时间'),
my/content/migrations/m180918_085154_create_table_content_photo.php:            'created_by' => $this->integer()->unsigned()->comment('创建者id'),
my/content/migrations/m180918_085154_create_table_content_photo.php:            'updated_by' => $this->integer()->unsigned()->comment('更新者id'),
my/content/migrations/m180918_085154_create_table_content_photo.php:        $this->createIndex('Hash', 'content_photo', 'hash', true);
my/content/migrations/m180918_085154_create_table_content_photo.php:        $this->createIndex('cTime', 'content_photo', 'created_at');
my/content/migrations/m180918_085154_create_table_content_photo.php:        $this->createIndex('uid', 'content_photo', 'owner_id');
my/content/migrations/m180918_085154_create_table_content_photo.php:        $this->createIndex('mTime', 'content_photo', 'updated_at');
my/content/migrations/m180918_085154_create_table_content_photo.php:        $this->createIndex('updater', 'content_photo', 'updated_by');
my/content/migrations/m180918_085154_create_table_content_photo.php:        $this->createIndex('author', 'content_photo', 'created_by');
my/content/migrations/m180918_085154_create_table_content_photo.php:        $this->dropTable('content_photo');
my/admin/migrations/m160122_003753_admin_user_create.php:        $this->createTable($this->table,[
my/admin/migrations/m160122_003753_admin_user_create.php:           'id'=>$this->primaryKey(),
my/admin/migrations/m160122_003753_admin_user_create.php:            'name'=>$this->string(60)->unique()->notNull(),
my/admin/migrations/m160122_003753_admin_user_create.php:            'email'=>$this->string(255),
my/admin/migrations/m160122_003753_admin_user_create.php:            'password'=>$this->string(64) ,// md5
my/admin/migrations/m160122_003753_admin_user_create.php:            'salt'=>$this->string(255),
my/admin/migrations/m160122_003753_admin_user_create.php:            'last_ip'=>$this->string(64),
my/admin/migrations/m160122_003753_admin_user_create.php:            'last_time'=>$this->integer(),
my/admin/migrations/m160122_003753_admin_user_create.php:            'created_at'=>$this->integer(),
my/admin/migrations/m160122_003753_admin_user_create.php:        $this->dropTable($this->table) ;
my/langstudy/backend/views/default/index.php:$controllers = \dmstr\helpers\Metadata::getModuleControllers($this->context->module->id);
my/langstudy/backend/views/default/index.php:<?= $this->render(
my/langstudy/backend/controllers/DefaultController.php:        return $this->render('index');
my/apidoc/views/layouts/main.php:$this->params['page-css-files'] = [
my/apidoc/views/layouts/main.php:$this->beginContent('@app/themes/bootstrap/views/layouts/main.php');
my/apidoc/views/layouts/main.php:<?php $this->endContent() ?>
my/apidoc/controllers/CategoryController.php:            if ($module->getUniqueId() === $this->module->getUniqueId()) {
my/apidoc/controllers/CategoryController.php:                $this->collectApiFilesOfSubModule($module, $serviceDirs, $apiDirName);
my/apidoc/controllers/CategoryController.php:                $this->findFiles($serviceDir, [
my/apidoc/controllers/CategoryController.php:        return $this->render('index', [
my/apidoc/controllers/CategoryController.php:            // 递归  这里用了个技巧 没有写死方法 ： $this->collectApiFilesOfSubModule($subModule,$serviceDirs,$apiDirName) ;
my/apidoc/controllers/CategoryController.php:            $this->{$myFunctionName}($subModule, $serviceDirs, $apiDirName);
my/apidoc/controllers/CategoryController.php:        return $this->render('view', [
my/apidoc/controllers/DefaultController.php:        return $this->render('index');
my/apidoc/views/category/view.php:<?= $this->render('_api-item',['method'=>$apiItem['method'],'categoryName'=>$apiItem['categoryName']]) ?>
my/apidoc/Module.php:        if(is_callable($this->apiShortDescriptionTransformer)){
my/apidoc/Module.php:            $result =  call_user_func($this->apiShortDescriptionTransformer,$result);
my/apidoc/models/ExtParamDoc.php:        $this->name = $reflector->getName();
my/apidoc/models/ExtParamDoc.php:        $this->typeHint = $reflector->getType();
my/apidoc/models/ExtParamDoc.php:        $this->isOptional = $reflector->getDefault() !== null;
my/apidoc/models/ExtParamDoc.php:            $this->defaultValue = PrettyPrinter::getRepresentationOfValue($reflector->getNode()->default);
my/apidoc/models/ExtParamDoc.php:        $this->isPassedByReference = $reflector->isByRef();
my/langstudy/migrations/m160203_020739_lang_type_operator_init.php:        $this->createTable($this->table,
my/langstudy/migrations/m160203_020739_lang_type_operator_init.php:               'id'=>$this->primaryKey(),
my/langstudy/migrations/m160203_020739_lang_type_operator_init.php:                'type_id'=>$this->integer(),
my/langstudy/migrations/m160203_020739_lang_type_operator_init.php:                'name'=>$this->string(80),
my/langstudy/migrations/m160203_020739_lang_type_operator_init.php:                'example'=>$this->string(1024),
my/langstudy/migrations/m160203_020739_lang_type_operator_init.php:        $this->dropTable($this->table);
my/langstudy/migrations/m160203_015637_type_init.php:        $this->createTable(
my/langstudy/migrations/m160203_015637_type_init.php:          $this->table,
my/langstudy/migrations/m160203_015637_type_init.php:                'id'=>$this->primaryKey(),
my/langstudy/migrations/m160203_015637_type_init.php:                'lang_id'=>$this->integer()->notNull(),
my/langstudy/migrations/m160203_015637_type_init.php:                'name'=>$this->string(120)->notNull(),
my/langstudy/migrations/m160203_015637_type_init.php:                'memory_usage_info'=>$this->string(512),
my/langstudy/migrations/m160203_015637_type_init.php:                'related_modules'=>$this->string(512), // 相关模块
my/langstudy/migrations/m160203_015637_type_init.php:        $this->dropTable($this->table);
my/recipe/backend/controllers/MeilisearchController.php:        return $this->renderContent($result) ;
my/recipe/backend/controllers/MeilisearchController.php://        return $this->render('index');
my/recipe/backend/controllers/DefaultController.php:        return $this->render('index');
my/langstudy/migrations/m160203_020156_lang_init.php:        $this->createTable($this->table,[
my/langstudy/migrations/m160203_020156_lang_init.php:           'id'=>$this->primaryKey(),
my/langstudy/migrations/m160203_020156_lang_init.php:            'name'=>$this->string(80),
my/langstudy/migrations/m160203_020156_lang_init.php:            'description'=>$this->text(),
my/langstudy/migrations/m160203_020156_lang_init.php:            'paradigm'=>$this->string(20), // enum: OOP | Functional
my/langstudy/migrations/m160203_020156_lang_init.php:            'created_at'=>$this->integer()->defaultValue(0),
my/langstudy/migrations/m160203_020156_lang_init.php:            'updated_at'=>$this->integer()->defaultValue(0),
my/langstudy/migrations/m160203_020156_lang_init.php:        $this->dropTable($this->table) ;
my/recipe/backend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/recipe/backend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/recipe/backend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/recipe/backend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/langstudy/migrations/m160203_022414_lang_type_casting_init.php:        $this->createTable(
my/langstudy/migrations/m160203_022414_lang_type_casting_init.php:            $this->table,
my/langstudy/migrations/m160203_022414_lang_type_casting_init.php:                'id'=>$this->primaryKey(),
my/langstudy/migrations/m160203_022414_lang_type_casting_init.php:                'from_type_id'=>$this->integer(),
my/langstudy/migrations/m160203_022414_lang_type_casting_init.php:                'to_type_id'=>$this->integer(),
my/langstudy/migrations/m160203_022414_lang_type_casting_init.php:                'example'=>$this->text(),
my/langstudy/migrations/m160203_022414_lang_type_casting_init.php:        $this->dropTable($this->table);
my/test/console/controllers/ThriftController.php:        // $this->stdout(__METHOD__) ;
my/test/console/controllers/XsController.php:        $this->stdout(__METHOD__);
my/test/console/controllers/XsController.php:                $this->stdout('the row num is ' . $i);
my/test/console/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/test/console/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/test/console/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/test/console/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/test/console/controllers/PhpController.php:        $this->stdout($m2 - $m1) ;
my/test/console/controllers/PhpController.php:        $this->stdout($m2 - $m1) ;
my/test/console/controllers/EsController.php:        $this->stdout(__METHOD__);
my/test/console/controllers/EsController.php:                            return strip_tags($this->body);
my/test/console/controllers/EsController.php:                            return date('U', strtotime($this->date_create));
my/test/console/controllers/EsController.php:                            return ucfirst($this->author->name);
my/test/console/controllers/EsController.php:                $this->seedForTable($tableSchema->name) ;
my/test/console/controllers/EsController.php:                $this->stderr("seed table {$tableSchema->name} to ElasticSearch failed! !") ;
my/test/console/controllers/EsController.php:                            return strip_tags($this->body);
my/test/console/controllers/EsController.php:                            return date('U', strtotime($this->date_create));
my/test/console/controllers/EsController.php:                            return ucfirst($this->author->name);
my/test/console/controllers/EsController.php:        $this->stdout("seed for table {$tableName} \n ");
my/test/console/controllers/EsController.php:                            return strip_tags($this->body);
my/test/console/controllers/EsController.php:                            return date('U', strtotime($this->date_create));
my/test/console/controllers/EsController.php:                            return ucfirst($this->author->name);
my/test/console/controllers/EsController.php:                $this->stdout("success seed for table {$tableName} ") ;
my/test/console/controllers/EsController.php:        $this->stdout("end seed for table {$tableName} \n ") ;
my/test/console/controllers/EsController.php:        $this->stdout("------------------*************----------------------------------- \n ") ;
my/test/console/controllers/EnvController.php:        $this->stdout(print_r($osEnvPathArr,true)) ;
my/test/thrift/gen-php/HelloService.php:    $this->input_ = $input;
my/test/thrift/gen-php/HelloService.php:    $this->output_ = $output ? $output : $input;
my/test/thrift/gen-php/HelloService.php:    $this->send_say_hello();
my/test/thrift/gen-php/HelloService.php:    return $this->recv_say_hello();
my/test/thrift/gen-php/HelloService.php:    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
my/test/thrift/gen-php/HelloService.php:      thrift_protocol_write_binary($this->output_, 'say_hello', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
my/test/thrift/gen-php/HelloService.php:      $this->output_->writeMessageBegin('say_hello', TMessageType::CALL, $this->seqid_);
my/test/thrift/gen-php/HelloService.php:      $args->write($this->output_);
my/test/thrift/gen-php/HelloService.php:      $this->output_->writeMessageEnd();
my/test/thrift/gen-php/HelloService.php:      $this->output_->getTransport()->flush();
my/test/thrift/gen-php/HelloService.php:    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
my/test/thrift/gen-php/HelloService.php:    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\HelloService_say_hello_result', $this->input_->isStrictRead());
my/test/thrift/gen-php/HelloService.php:      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
my/test/thrift/gen-php/HelloService.php:        $x->read($this->input_);
my/test/thrift/gen-php/HelloService.php:        $this->input_->readMessageEnd();
my/test/thrift/gen-php/HelloService.php:      $result->read($this->input_);
my/test/thrift/gen-php/HelloService.php:      $this->input_->readMessageEnd();
my/test/thrift/gen-php/HelloService.php:    $this->send_say_foreign_hello($language);
my/test/thrift/gen-php/HelloService.php:    return $this->recv_say_foreign_hello();
my/test/thrift/gen-php/HelloService.php:    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
my/test/thrift/gen-php/HelloService.php:      thrift_protocol_write_binary($this->output_, 'say_foreign_hello', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
my/test/thrift/gen-php/HelloService.php:      $this->output_->writeMessageBegin('say_foreign_hello', TMessageType::CALL, $this->seqid_);
my/test/thrift/gen-php/HelloService.php:      $args->write($this->output_);
my/test/thrift/gen-php/HelloService.php:      $this->output_->writeMessageEnd();
my/test/thrift/gen-php/HelloService.php:      $this->output_->getTransport()->flush();
my/test/thrift/gen-php/HelloService.php:    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
my/test/thrift/gen-php/HelloService.php:    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\HelloService_say_foreign_hello_result', $this->input_->isStrictRead());
my/test/thrift/gen-php/HelloService.php:      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
my/test/thrift/gen-php/HelloService.php:        $x->read($this->input_);
my/test/thrift/gen-php/HelloService.php:        $this->input_->readMessageEnd();
my/test/thrift/gen-php/HelloService.php:      $result->read($this->input_);
my/test/thrift/gen-php/HelloService.php:      $this->input_->readMessageEnd();
my/test/thrift/gen-php/HelloService.php:    $this->send_say_hello_repeat($times);
my/test/thrift/gen-php/HelloService.php:    return $this->recv_say_hello_repeat();
my/test/thrift/gen-php/HelloService.php:    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
my/test/thrift/gen-php/HelloService.php:      thrift_protocol_write_binary($this->output_, 'say_hello_repeat', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
my/test/thrift/gen-php/HelloService.php:      $this->output_->writeMessageBegin('say_hello_repeat', TMessageType::CALL, $this->seqid_);
my/test/thrift/gen-php/HelloService.php:      $args->write($this->output_);
my/test/thrift/gen-php/HelloService.php:      $this->output_->writeMessageEnd();
my/test/thrift/gen-php/HelloService.php:      $this->output_->getTransport()->flush();
my/test/thrift/gen-php/HelloService.php:    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
my/test/thrift/gen-php/HelloService.php:    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\HelloService_say_hello_repeat_result', $this->input_->isStrictRead());
my/test/thrift/gen-php/HelloService.php:      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
my/test/thrift/gen-php/HelloService.php:        $x->read($this->input_);
my/test/thrift/gen-php/HelloService.php:        $this->input_->readMessageEnd();
my/test/thrift/gen-php/HelloService.php:      $result->read($this->input_);
my/test/thrift/gen-php/HelloService.php:      $this->input_->readMessageEnd();
my/test/thrift/gen-php/HelloService.php:        $this->success = $vals['success'];
my/test/thrift/gen-php/HelloService.php:            $xfer += $input->readString($this->success);
my/test/thrift/gen-php/HelloService.php:    if ($this->success !== null) {
my/test/thrift/gen-php/HelloService.php:      $xfer += $output->writeString($this->success);
my/test/thrift/gen-php/HelloService.php:        $this->language = $vals['language'];
my/test/thrift/gen-php/HelloService.php:            $xfer += $input->readI32($this->language);
my/test/thrift/gen-php/HelloService.php:    if ($this->language !== null) {
my/test/thrift/gen-php/HelloService.php:      $xfer += $output->writeI32($this->language);
my/test/thrift/gen-php/HelloService.php:        $this->success = $vals['success'];
my/test/thrift/gen-php/HelloService.php:            $xfer += $input->readString($this->success);
my/test/thrift/gen-php/HelloService.php:    if ($this->success !== null) {
my/test/thrift/gen-php/HelloService.php:      $xfer += $output->writeString($this->success);
my/test/thrift/gen-php/HelloService.php:        $this->times = $vals['times'];
my/test/thrift/gen-php/HelloService.php:            $xfer += $input->readI32($this->times);
my/test/thrift/gen-php/HelloService.php:    if ($this->times !== null) {
my/test/thrift/gen-php/HelloService.php:      $xfer += $output->writeI32($this->times);
my/test/thrift/gen-php/HelloService.php:        $this->success = $vals['success'];
my/test/thrift/gen-php/HelloService.php:            $this->success = array();
my/test/thrift/gen-php/HelloService.php:              $this->success []= $elem5;
my/test/thrift/gen-php/HelloService.php:    if ($this->success !== null) {
my/test/thrift/gen-php/HelloService.php:      if (!is_array($this->success)) {
my/test/thrift/gen-php/HelloService.php:        $output->writeListBegin(TType::STRING, count($this->success));
my/test/thrift/gen-php/HelloService.php:          foreach ($this->success as $iter6)
my/test/thrift/gen-php/HelloService.php:    $this->handler_ = $handler;
my/test/thrift/gen-php/HelloService.php:    $this->$methodname($rseqid, $input, $output);
my/test/thrift/gen-php/HelloService.php:    $result->success = $this->handler_->say_hello();
my/test/thrift/gen-php/HelloService.php:    $result->success = $this->handler_->say_foreign_hello($args->language);
my/test/thrift/gen-php/HelloService.php:    $result->success = $this->handler_->say_hello_repeat($args->times);
my/test/queue/HelloWorldJob.php:        // file_put_contents($this->file, file_get_contents($this->url));
my/test/queue/HelloWorldJob.php:        echo " hello {$this->to}";
my/js/frontend/controllers/Es6Controller.php:        return $this->render('index');
my/js/frontend/views/default/prism-demo.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/js/frontend/views/default/prism-demo.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/js/frontend/views/default/prism-demo.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/js/frontend/views/default/prism-demo.php:        in the "<?= $this->context->module->id ?>" module.
my/js/frontend/views/default/wang-editor.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/js/frontend/views/default/wang-editor.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/js/frontend/views/default/wang-editor.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/js/frontend/views/default/wang-editor.php:        in the "<?= $this->context->module->id ?>" module.
my/js/frontend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/js/frontend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/js/frontend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/js/frontend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/test/manual/closure.bind.php:        $this->methods[$methodName] = Closure::bind($methodCallable, $this, get_class());
my/test/manual/closure.bind.php:        if (isset($this->methods[$methodName])) {
my/test/manual/closure.bind.php:            return call_user_func_array($this->methods[$methodName], $args);
my/test/manual/closure.bind.php:        echo "\n my name is {$this->name}";
my/test/common/models/UserSearch.php:        $this->load($params);
my/test/common/models/UserSearch.php:        if (!$this->validate()) {
my/test/common/models/UserSearch.php:            'id' => $this->id,
my/test/common/models/UserSearch.php:            'superuser' => $this->superuser,
my/test/common/models/UserSearch.php:            'status' => $this->status,
my/test/common/models/UserSearch.php:            'create_at' => $this->create_at,
my/test/common/models/UserSearch.php:            'lastvisit_at' => $this->lastvisit_at,
my/test/common/models/UserSearch.php:        $query->andFilterWhere(['like', 'username', $this->username])
my/test/common/models/UserSearch.php:            ->andFilterWhere(['like', 'password', $this->password])
my/test/common/models/UserSearch.php:            ->andFilterWhere(['like', 'icon_uri', $this->icon_uri])
my/test/common/models/UserSearch.php:            ->andFilterWhere(['like', 'email', $this->email])
my/test/common/models/UserSearch.php:            ->andFilterWhere(['like', 'activkey', $this->activkey]);
my/js/frontend/controllers/DefaultController.php:        return $this->render('index');
my/js/frontend/controllers/DefaultController.php:        return $this->render('wang-editor') ;
my/js/frontend/controllers/DefaultController.php:        return $this->render('prism-demo') ;
my/test/common/models/base/User.php:        return $this->hasOne(\my\test\common\models\UserProfile::className(), ['user_id' => 'id']);
my/test/common/models/base/Token.php:        return $this->hasOne(\my\test\common\models\User::className(), ['id' => 'user_id']);
my/org/api/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/org/api/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/org/api/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/org/api/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/test/common/models/search/UserDatum.php:$this->load($params);
my/test/common/models/search/UserDatum.php:if (!$this->validate()) {
my/test/common/models/search/UserDatum.php:            'user_id' => $this->user_id,
my/test/common/models/search/UserDatum.php:        $query->andFilterWhere(['like', 'attr', $this->attr])
my/test/common/models/search/UserDatum.php:            ->andFilterWhere(['like', 'val', $this->val]);
my/test/common/models/MsgSearch.php:        $this->load($params);
my/test/common/models/MsgSearch.php:        if (!$this->validate()) {
my/test/common/models/MsgSearch.php:            'id' => $this->id,
my/test/common/models/MsgSearch.php:            'uid' => $this->uid,
my/test/common/models/MsgSearch.php:            'snd_type' => $this->snd_type,
my/test/common/models/MsgSearch.php:            'snd_status' => $this->snd_status,
my/test/common/models/MsgSearch.php:            'priority' => $this->priority,
my/test/common/models/MsgSearch.php:            'to_id' => $this->to_id,
my/test/common/models/MsgSearch.php:            'msg_pid' => $this->msg_pid,
my/test/common/models/MsgSearch.php:            'create_time' => $this->create_time,
my/test/common/models/MsgSearch.php:            'sent_time' => $this->sent_time,
my/test/common/models/MsgSearch.php:            'delete_time' => $this->delete_time,
my/test/common/models/MsgSearch.php:        $query->andFilterWhere(['like', 'type', $this->type])
my/test/common/models/MsgSearch.php:            ->andFilterWhere(['like', 'data', $this->data]);
my/test/common/models/UploadForm.php:        if ($this->validate()) {
my/test/common/models/UploadForm.php:            $this->imageFile->saveAs('uploads/' . $this->imageFile->baseName . '.' . $this->imageFile->extension);
my/org/api/controllers/DefaultController.php:        return $this->render('index');
my/test/backend/controllers/ProcessController.php:        return $this->renderContent(implode("",$str)) ;
my/test/backend/views/user/_search.php:            'headerTitle'=>'<i class="glyphicon glyphicon-search"></i> '.Html::encode($this->title),
my/test/backend/views/user/batch-update.php:$this->title = 'batch update User';
my/test/backend/views/user/batch-update.php:$this->params['breadcrumbs'][] = ['label' => 'Users', 'url' => ['index']];
my/test/backend/views/user/batch-update.php:$this->params['breadcrumbs'][] = $this->title;
my/test/backend/views/user/create.php:$this->title = 'Create User';
my/test/backend/views/user/create.php:$this->params['breadcrumbs'][] = ['label' => 'Users', 'url' => ['index']];
my/test/backend/views/user/create.php:$this->params['breadcrumbs'][] = $this->title;
my/test/backend/views/user/create.php:       'headerTitle'=>'<i class="glyphicon glyphicon-plus"></i> '.Html::encode($this->title),
my/test/backend/views/user/create.php:    <h1><?= Html::encode($this->title) ?></h1>
my/test/backend/views/user/create.php:    <?= $this->render('_form', [
my/test/backend/views/user/index.php:$this->title = 'Users';
my/test/backend/views/user/index.php:$this->params['breadcrumbs'][] = $this->title;
my/test/backend/views/user/index.php:    <h1><?= Html::encode($this->title) ?></h1>
my/test/backend/views/user/index.php:    <?php  echo $this->render('_search', ['model' => $searchModel]); ?>
my/test/backend/views/user/update.php:$this->title = 'Update User: ' . ' ' . $model->id;
my/test/backend/views/user/update.php:$this->params['breadcrumbs'][] = ['label' => 'Users', 'url' => ['index']];
my/test/backend/views/user/update.php:$this->params['breadcrumbs'][] = ['label' => $model->id, 'url' => ['view', 'id' => $model->id]];
my/test/backend/views/user/update.php:$this->params['breadcrumbs'][] = 'Update';
my/test/backend/views/user/update.php:         'headerTitle'=>'<i class="glyphicon glyphicon-edit"></i> '.Html::encode($this->title),
my/test/backend/views/user/update.php:    <h1><?= Html::encode($this->title) ?></h1>
my/test/backend/views/user/update.php:    <?= $this->render('_form', [
my/test/backend/controllers/base/UserDatumController.php:return $this->render('index', [
my/test/backend/controllers/base/UserDatumController.php:return $this->render('view', [
my/test/backend/controllers/base/UserDatumController.php:'model' => $this->findModel($user_id, $attr),
my/test/backend/controllers/base/UserDatumController.php:return $this->redirect(Url::previous());
my/test/backend/controllers/base/UserDatumController.php:return $this->render('create', ['model' => $model]);
my/test/backend/controllers/base/UserDatumController.php:$model = $this->findModel($user_id, $attr);
my/test/backend/controllers/base/UserDatumController.php:return $this->redirect(Url::previous());
my/test/backend/controllers/base/UserDatumController.php:return $this->render('update', [
my/test/backend/controllers/base/UserDatumController.php:$this->findModel($user_id, $attr)->delete();
my/test/backend/controllers/base/UserDatumController.php:return $this->redirect(Url::previous());
my/test/backend/controllers/base/UserDatumController.php:return $this->redirect(Url::previous());
my/test/backend/controllers/base/UserDatumController.php:return $this->redirect($url);
my/test/backend/controllers/base/UserDatumController.php:return $this->redirect(['index']);
my/test/backend/controllers/base/TokenController.php:return $this->render('index', [
my/test/backend/controllers/base/TokenController.php:return $this->render('view', [
my/test/backend/controllers/base/TokenController.php:'model' => $this->findModel($user_id, $code, $type),
my/test/backend/controllers/base/TokenController.php:return $this->redirect(Url::previous());
my/test/backend/controllers/base/TokenController.php:return $this->render('create', ['model' => $model]);
my/test/backend/controllers/base/TokenController.php:$model = $this->findModel($user_id, $code, $type);
my/test/backend/controllers/base/TokenController.php:return $this->redirect(Url::previous());
my/test/backend/controllers/base/TokenController.php:return $this->render('update', [
my/test/backend/controllers/base/TokenController.php:$this->findModel($user_id, $code, $type)->delete();
my/test/backend/controllers/base/TokenController.php:return $this->redirect(Url::previous());
my/test/backend/controllers/base/TokenController.php:return $this->redirect(Url::previous());
my/test/backend/controllers/base/TokenController.php:return $this->redirect($url);
my/test/backend/controllers/base/TokenController.php:return $this->redirect(['index']);
my/test/backend/views/user/view.php:$this->title = $model->id;
my/test/backend/views/user/view.php:$this->params['breadcrumbs'][] = ['label' => 'Users', 'url' => ['index']];
my/test/backend/views/user/view.php:$this->params['breadcrumbs'][] = $this->title;
my/test/backend/views/user/view.php:                'headerTitle'=>'<i class="glyphicon glyphicon-eye-open"></i> '.Html::encode($this->title),
my/test/backend/views/user/view.php:    <h1><?= Html::encode($this->title) ?></h1>
my/test/backend/controllers/SqlController.php:        return $this->render('index',[
my/test/backend/controllers/MsgController.php:        return $this->render('index', [
my/test/backend/controllers/MsgController.php:        return $this->render('view', [
my/test/backend/controllers/MsgController.php:            'model' => $this->findModel($id),
my/test/backend/controllers/MsgController.php:            return $this->redirect(['view', 'id' => $model->id]);
my/test/backend/controllers/MsgController.php:            return $this->render('create', [
my/test/backend/controllers/MsgController.php:        $model = $this->findModel($id);
my/test/backend/controllers/MsgController.php:            return $this->redirect(['view', 'id' => $model->id]);
my/test/backend/controllers/MsgController.php:            return $this->render('update', [
my/test/backend/controllers/MsgController.php:        $this->findModel($id)->delete();
my/test/backend/controllers/MsgController.php:        return $this->redirect(['index']);
my/test/backend/controllers/MsgController.php:        $items = $this->getItemsToUpdate();
my/test/backend/controllers/MsgController.php:              return $this->redirect(['index']); // redirect to your next desired page
my/test/backend/controllers/MsgController.php:            return $this->redirect(['index']); // redirect to your next desired page
my/test/backend/controllers/MsgController.php:            return $this->render('batch-update', [
my/test/backend/controllers/CasbinController.php:            return $this->renderContent('OK');
my/test/backend/views/sql/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/test/backend/views/sql/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/test/backend/views/sql/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/test/backend/views/sql/index.php:        in the "<?= $this->context->module->id ?>" module.
my/test/backend/controllers/DefaultController.php:        return $this->render('index');
my/test/backend/controllers/UserController.php:        return $this->render('index', [
my/test/backend/controllers/UserController.php:        return $this->render('view', [
my/test/backend/controllers/UserController.php:            'model' => $this->findModel($id),
my/test/backend/controllers/UserController.php:            return $this->redirect(['view', 'id' => $model->id]);
my/test/backend/controllers/UserController.php:            return $this->render('create', [
my/test/backend/controllers/UserController.php:        $model = $this->findModel($id);
my/test/backend/controllers/UserController.php:            return $this->redirect(['view', 'id' => $model->id]);
my/test/backend/controllers/UserController.php:            return $this->render('update', [
my/test/backend/controllers/UserController.php:        $this->findModel($id)->delete();
my/test/backend/controllers/UserController.php:        return $this->redirect(['index']);
my/test/backend/controllers/UserController.php:        $items = $this->getItemsToUpdate();
my/test/backend/controllers/UserController.php:              return $this->redirect(['index']); // redirect to your next desired page
my/test/backend/controllers/UserController.php:            return $this->redirect(['index']); // redirect to your next desired page
my/test/backend/controllers/UserController.php:            return $this->render('batch-update', [
my/test/backend/views/user-datum/_form.php:        <?php $this->beginBlock('main'); ?>
my/test/backend/views/user-datum/_form.php:        <?php $this->endBlock(); ?>
my/test/backend/views/user-datum/_form.php:    'content' => $this->blocks['main'],
my/test/backend/views/user-datum/view.php:$this->title = $model->getAliasModel() . $model->user_id;
my/test/backend/views/user-datum/view.php:$this->params['breadcrumbs'][] = ['label' => $model->getAliasModel(true), 'url' => ['index']];
my/test/backend/views/user-datum/view.php:$this->params['breadcrumbs'][] = ['label' => (string)$model->user_id, 'url' => ['view', 'user_id' => $model->user_id, 'attr' => $model->attr]];
my/test/backend/views/user-datum/view.php:$this->params['breadcrumbs'][] = Yii::t('app', 'View');
my/test/backend/views/user-datum/view.php:    <?php $this->beginBlock('my\test\common\models\UserDatum'); ?>
my/test/backend/views/user-datum/view.php:    <?php $this->endBlock(); ?>
my/test/backend/views/user-datum/view.php:    'content' => $this->blocks['my\test\common\models\UserDatum'],
my/test/backend/views/user-datum/create.php:$this->title = Yii::t('app', 'Create');
my/test/backend/views/user-datum/create.php:$this->params['breadcrumbs'][] = ['label' => $model->getAliasModel(true), 'url' => ['index']];
my/test/backend/views/user-datum/create.php:$this->params['breadcrumbs'][] = $this->title;
my/test/backend/views/user-datum/create.php:    <?= $this->render('_form', [
my/test/backend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/test/backend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/test/backend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/test/backend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/test/thrift/gen-php/Calculator.php:    $this->input_ = $input;
my/test/thrift/gen-php/Calculator.php:    $this->output_ = $output ? $output : $input;
my/test/thrift/gen-php/Calculator.php:    $this->send_calc($op);
my/test/thrift/gen-php/Calculator.php:    return $this->recv_calc();
my/test/thrift/gen-php/Calculator.php:    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
my/test/thrift/gen-php/Calculator.php:      thrift_protocol_write_binary($this->output_, 'calc', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
my/test/thrift/gen-php/Calculator.php:      $this->output_->writeMessageBegin('calc', TMessageType::CALL, $this->seqid_);
my/test/thrift/gen-php/Calculator.php:      $args->write($this->output_);
my/test/thrift/gen-php/Calculator.php:      $this->output_->writeMessageEnd();
my/test/thrift/gen-php/Calculator.php:      $this->output_->getTransport()->flush();
my/test/thrift/gen-php/Calculator.php:    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
my/test/thrift/gen-php/Calculator.php:    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\Calculator_calc_result', $this->input_->isStrictRead());
my/test/thrift/gen-php/Calculator.php:      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
my/test/thrift/gen-php/Calculator.php:        $x->read($this->input_);
my/test/thrift/gen-php/Calculator.php:        $this->input_->readMessageEnd();
my/test/thrift/gen-php/Calculator.php:      $result->read($this->input_);
my/test/thrift/gen-php/Calculator.php:      $this->input_->readMessageEnd();
my/test/thrift/gen-php/Calculator.php:    $this->send_mult($A, $B);
my/test/thrift/gen-php/Calculator.php:    return $this->recv_mult();
my/test/thrift/gen-php/Calculator.php:    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
my/test/thrift/gen-php/Calculator.php:      thrift_protocol_write_binary($this->output_, 'mult', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
my/test/thrift/gen-php/Calculator.php:      $this->output_->writeMessageBegin('mult', TMessageType::CALL, $this->seqid_);
my/test/thrift/gen-php/Calculator.php:      $args->write($this->output_);
my/test/thrift/gen-php/Calculator.php:      $this->output_->writeMessageEnd();
my/test/thrift/gen-php/Calculator.php:      $this->output_->getTransport()->flush();
my/test/thrift/gen-php/Calculator.php:    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
my/test/thrift/gen-php/Calculator.php:    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\Calculator_mult_result', $this->input_->isStrictRead());
my/test/thrift/gen-php/Calculator.php:      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
my/test/thrift/gen-php/Calculator.php:        $x->read($this->input_);
my/test/thrift/gen-php/Calculator.php:        $this->input_->readMessageEnd();
my/test/thrift/gen-php/Calculator.php:      $result->read($this->input_);
my/test/thrift/gen-php/Calculator.php:      $this->input_->readMessageEnd();
my/test/thrift/gen-php/Calculator.php:    $this->send_transpose($A);
my/test/thrift/gen-php/Calculator.php:    return $this->recv_transpose();
my/test/thrift/gen-php/Calculator.php:    $bin_accel = ($this->output_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_write_binary');
my/test/thrift/gen-php/Calculator.php:      thrift_protocol_write_binary($this->output_, 'transpose', TMessageType::CALL, $args, $this->seqid_, $this->output_->isStrictWrite());
my/test/thrift/gen-php/Calculator.php:      $this->output_->writeMessageBegin('transpose', TMessageType::CALL, $this->seqid_);
my/test/thrift/gen-php/Calculator.php:      $args->write($this->output_);
my/test/thrift/gen-php/Calculator.php:      $this->output_->writeMessageEnd();
my/test/thrift/gen-php/Calculator.php:      $this->output_->getTransport()->flush();
my/test/thrift/gen-php/Calculator.php:    $bin_accel = ($this->input_ instanceof TBinaryProtocolAccelerated) && function_exists('thrift_protocol_read_binary');
my/test/thrift/gen-php/Calculator.php:    if ($bin_accel) $result = thrift_protocol_read_binary($this->input_, '\Calculator_transpose_result', $this->input_->isStrictRead());
my/test/thrift/gen-php/Calculator.php:      $this->input_->readMessageBegin($fname, $mtype, $rseqid);
my/test/thrift/gen-php/Calculator.php:        $x->read($this->input_);
my/test/thrift/gen-php/Calculator.php:        $this->input_->readMessageEnd();
my/test/thrift/gen-php/Calculator.php:      $result->read($this->input_);
my/test/thrift/gen-php/Calculator.php:      $this->input_->readMessageEnd();
my/test/thrift/gen-php/Calculator.php:        $this->op = $vals['op'];
my/test/thrift/gen-php/Calculator.php:            $this->op = new \ArithmeticOperation();
my/test/thrift/gen-php/Calculator.php:            $xfer += $this->op->read($input);
my/test/thrift/gen-php/Calculator.php:    if ($this->op !== null) {
my/test/thrift/gen-php/Calculator.php:      if (!is_object($this->op)) {
my/test/thrift/gen-php/Calculator.php:      $xfer += $this->op->write($output);
my/test/thrift/gen-php/Calculator.php:        $this->success = $vals['success'];
my/test/thrift/gen-php/Calculator.php:        $this->ae = $vals['ae'];
my/test/thrift/gen-php/Calculator.php:            $xfer += $input->readDouble($this->success);
my/test/thrift/gen-php/Calculator.php:            $this->ae = new \ArithmeticException();
my/test/thrift/gen-php/Calculator.php:            $xfer += $this->ae->read($input);
my/test/thrift/gen-php/Calculator.php:    if ($this->success !== null) {
my/test/thrift/gen-php/Calculator.php:      $xfer += $output->writeDouble($this->success);
my/test/thrift/gen-php/Calculator.php:    if ($this->ae !== null) {
my/test/thrift/gen-php/Calculator.php:      $xfer += $this->ae->write($output);
my/test/thrift/gen-php/Calculator.php:        $this->A = $vals['A'];
my/test/thrift/gen-php/Calculator.php:        $this->B = $vals['B'];
my/test/thrift/gen-php/Calculator.php:            $this->A = new \Matrix();
my/test/thrift/gen-php/Calculator.php:            $xfer += $this->A->read($input);
my/test/thrift/gen-php/Calculator.php:            $this->B = new \Matrix();
my/test/thrift/gen-php/Calculator.php:            $xfer += $this->B->read($input);
my/test/thrift/gen-php/Calculator.php:    if ($this->A !== null) {
my/test/thrift/gen-php/Calculator.php:      if (!is_object($this->A)) {
my/test/thrift/gen-php/Calculator.php:      $xfer += $this->A->write($output);
my/test/thrift/gen-php/Calculator.php:    if ($this->B !== null) {
my/test/thrift/gen-php/Calculator.php:      if (!is_object($this->B)) {
my/test/thrift/gen-php/Calculator.php:      $xfer += $this->B->write($output);
my/test/thrift/gen-php/Calculator.php:        $this->success = $vals['success'];
my/test/thrift/gen-php/Calculator.php:        $this->me = $vals['me'];
my/test/thrift/gen-php/Calculator.php:            $this->success = new \Matrix();
my/test/thrift/gen-php/Calculator.php:            $xfer += $this->success->read($input);
my/test/thrift/gen-php/Calculator.php:            $this->me = new \MatrixException();
my/test/thrift/gen-php/Calculator.php:            $xfer += $this->me->read($input);
my/test/thrift/gen-php/Calculator.php:    if ($this->success !== null) {
my/test/thrift/gen-php/Calculator.php:      if (!is_object($this->success)) {
my/test/thrift/gen-php/Calculator.php:      $xfer += $this->success->write($output);
my/test/thrift/gen-php/Calculator.php:    if ($this->me !== null) {
my/test/thrift/gen-php/Calculator.php:      $xfer += $this->me->write($output);
my/test/thrift/gen-php/Calculator.php:        $this->A = $vals['A'];
my/test/thrift/gen-php/Calculator.php:            $this->A = new \Matrix();
my/test/thrift/gen-php/Calculator.php:            $xfer += $this->A->read($input);
my/test/thrift/gen-php/Calculator.php:    if ($this->A !== null) {
my/test/thrift/gen-php/Calculator.php:      if (!is_object($this->A)) {
my/test/thrift/gen-php/Calculator.php:      $xfer += $this->A->write($output);
my/test/thrift/gen-php/Calculator.php:        $this->success = $vals['success'];
my/test/thrift/gen-php/Calculator.php:        $this->me = $vals['me'];
my/test/thrift/gen-php/Calculator.php:            $this->success = new \Matrix();
my/test/thrift/gen-php/Calculator.php:            $xfer += $this->success->read($input);
my/test/thrift/gen-php/Calculator.php:            $this->me = new \MatrixException();
my/test/thrift/gen-php/Calculator.php:            $xfer += $this->me->read($input);
my/test/thrift/gen-php/Calculator.php:    if ($this->success !== null) {
my/test/thrift/gen-php/Calculator.php:      if (!is_object($this->success)) {
my/test/thrift/gen-php/Calculator.php:      $xfer += $this->success->write($output);
my/test/thrift/gen-php/Calculator.php:    if ($this->me !== null) {
my/test/thrift/gen-php/Calculator.php:      $xfer += $this->me->write($output);
my/test/backend/views/user-datum/index.php:$this->title = $searchModel->getAliasModel(true);
my/test/backend/views/user-datum/index.php:$this->params['breadcrumbs'][] = $this->title;
my/test/backend/views/user-datum/index.php:    <?php //             echo $this->render('_search', ['model' =>$searchModel]);
my/test/backend/views/user-datum/update.php:$this->title = $model->getAliasModel() . $model->user_id . ', ' . Yii::t('app', 'Edit');
my/test/backend/views/user-datum/update.php:$this->params['breadcrumbs'][] = ['label' => $model->getAliasModel(true), 'url' => ['index']];
my/test/backend/views/user-datum/update.php:$this->params['breadcrumbs'][] = ['label' => (string)$model->user_id, 'url' => ['view', 'user_id' => $model->user_id, 'attr' => $model->attr]];
my/test/backend/views/user-datum/update.php:$this->params['breadcrumbs'][] = Yii::t('app', 'Edit');
my/test/backend/views/user-datum/update.php:    <?php echo $this->render('_form', [
my/test/backend/views/msg/batch-update.php:$this->title = 'batch update Msg';
my/test/backend/views/msg/batch-update.php:$this->params['breadcrumbs'][] = ['label' => 'Msgs', 'url' => ['index']];
my/test/backend/views/msg/batch-update.php:$this->params['breadcrumbs'][] = $this->title;
my/test/backend/views/msg/view.php:$this->title = $model->id;
my/test/backend/views/msg/view.php:$this->params['breadcrumbs'][] = ['label' => 'Msgs', 'url' => ['index']];
my/test/backend/views/msg/view.php:$this->params['breadcrumbs'][] = $this->title;
my/test/backend/views/msg/view.php:                'headerTitle'=>'<i class="glyphicon glyphicon-eye-open"></i> '.Html::encode($this->title),
my/test/backend/views/msg/view.php:    <h1><?= Html::encode($this->title) ?></h1>
my/test/frontend/views/marquee/limarquee.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/test/frontend/controllers/LibController.php:                    $this->classes[$class->name] = $class;
my/test/frontend/controllers/LibController.php:                    $this->interfaces[$interface->name] = $interface;
my/test/frontend/controllers/LibController.php:                    $this->traits[$trait->name] = $trait;
my/test/frontend/controllers/WebController.php:        return $this->render('web-sql');
my/test/frontend/controllers/WebController.php:        return $this->render('indexed-db');
my/test/frontend/views/marquee/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/test/backend/views/token/_form.php:        <?php $this->beginBlock('main'); ?>
my/test/backend/views/token/_form.php:        <?php $this->endBlock(); ?>
my/test/backend/views/token/_form.php:    'content' => $this->blocks['main'],
my/test/backend/views/token/create.php:$this->title = Yii::t('app', 'Create');
my/test/backend/views/token/create.php:$this->params['breadcrumbs'][] = ['label' => $model->getAliasModel(true), 'url' => ['index']];
my/test/backend/views/token/create.php:$this->params['breadcrumbs'][] = $this->title;
my/test/backend/views/token/create.php:    <?= $this->render('_form', [
my/test/backend/views/token/index.php:$this->title = $searchModel->getAliasModel(true);
my/test/backend/views/token/index.php:$this->params['breadcrumbs'][] = $this->title;
my/test/backend/views/token/index.php:    <?php //             echo $this->render('_search', ['model' =>$searchModel]);
my/test/backend/views/token/update.php:$this->title = $model->getAliasModel() . $model->user_id . ', ' . Yii::t('app', 'Edit');
my/test/backend/views/token/update.php:$this->params['breadcrumbs'][] = ['label' => $model->getAliasModel(true), 'url' => ['index']];
my/test/backend/views/token/update.php:$this->params['breadcrumbs'][] = ['label' => (string)$model->user_id, 'url' => ['view', 'user_id' => $model->user_id, 'code' => $model->code, 'type' => $model->type]];
my/test/backend/views/token/update.php:$this->params['breadcrumbs'][] = Yii::t('app', 'Edit');
my/test/backend/views/token/update.php:    <?php echo $this->render('_form', [
my/test/frontend/controllers/Oauth2Controller.php:        return $this->render('index') ;
my/test/frontend/controllers/UploadController.php:        return $this->render('index', [
my/test/frontend/controllers/QueueController.php:        $pheanstalk = $this->getPheanstalk() ;
my/test/frontend/controllers/QueueController.php:        $pheanstalk = $this->getPheanstalk() ;
my/test/frontend/controllers/ZipController.php:            return $this->renderContent('error: '.$e->getMessage()) ;
my/test/frontend/controllers/ZipController.php:        return $this->renderContent('ok') ;
my/test/frontend/controllers/MarqueeController.php:        return $this->render('index',[
my/test/frontend/controllers/MarqueeController.php:        return $this->render('limarquee',[
my/test/frontend/controllers/WidgetController.php:        return $this->render('to-markdown');
my/test/frontend/controllers/RamlController.php:        $modulePath = $this->module->getBasePath() ;
my/test/frontend/controllers/RamlController.php:        return $this->renderContent($title) ;
my/test/frontend/controllers/ExcelController.php:        $this->renderContent($content) ;
my/test/frontend/controllers/ExcelController.php:        return $this->renderContent($content) ;
my/test/frontend/controllers/ExcelController.php:            return $this->render('import', [
my/test/frontend/controllers/ExcelController.php:                return $this->renderContent(implode('</br>', $results));
my/test/frontend/controllers/ExcelController.php:        return $this->render('import', ['model' => $model,]);
my/test/frontend/controllers/ExcelController.php:        return $this->render('uploads', [
my/test/frontend/controllers/ExcelController.php:        // $this->down() ;
my/test/frontend/controllers/ExcelController.php:        if ($this->db->driverName === 'mysql') {
my/test/frontend/controllers/ExcelController.php:        $this->createTable($this->tableName, [
my/test/frontend/controllers/ExcelController.php:            'id' => $this->primaryKey(),
my/test/frontend/controllers/ExcelController.php:            'name' => $this->string()->notNull(),//->comment('附件名称'),
my/test/frontend/controllers/ExcelController.php:            'desc' => $this->string()->defaultValue(''),//->comment('描述'),
my/test/frontend/controllers/ExcelController.php:            'keywords' => $this->string()->defaultValue(''),//->comment('关键字'),
my/test/frontend/controllers/ExcelController.php:            'path' => $this->string(),//->comment('存储路径'),
my/test/frontend/controllers/ExcelController.php:            'created_at' => $this->integer()->unsigned(),//->comment('创建时间'),
my/test/frontend/controllers/ExcelController.php:            'updated_at' => $this->integer()->unsigned(),//->comment('更新时间'),
my/test/frontend/controllers/ExcelController.php:            'created_by' => $this->integer()->unsigned(),//->comment('创建者id'),
my/test/frontend/controllers/ExcelController.php:            'updated_by' => $this->integer()->unsigned(),//->comment('更新者id'),
my/test/frontend/controllers/ExcelController.php:        $this->dropTable($this->tableName);
my/test/frontend/controllers/DefaultController.php:        return $this->render('index');
my/test/frontend/controllers/DefaultController.php:        $this->mysqli = $mysqli ;
my/test/frontend/controllers/DefaultController.php:        return call_user_func_array([$this->mysqli,$name],$arguments) ;
my/test/backend/views/token/view.php:$this->title = $model->getAliasModel() . $model->user_id;
my/test/backend/views/token/view.php:$this->params['breadcrumbs'][] = ['label' => $model->getAliasModel(true), 'url' => ['index']];
my/test/backend/views/token/view.php:$this->params['breadcrumbs'][] = ['label' => (string)$model->user_id, 'url' => ['view', 'user_id' => $model->user_id, 'code' => $model->code, 'type' => $model->type]];
my/test/backend/views/token/view.php:$this->params['breadcrumbs'][] = Yii::t('app', 'View');
my/test/backend/views/token/view.php:    <?php $this->beginBlock('my\test\common\models\Token'); ?>
my/test/backend/views/token/view.php:    <?php $this->endBlock(); ?>
my/test/backend/views/token/view.php:    'content' => $this->blocks['my\test\common\models\Token'],
my/test/frontend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/test/frontend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/test/frontend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/test/frontend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
my/test/frontend/views/oauth2/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/test/frontend/views/oauth2/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/test/frontend/views/oauth2/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/test/frontend/views/oauth2/index.php:        in the "<?= $this->context->module->id ?>" module.
my/test/frontend/views/excel/import.php:$this->title = 'import';
my/test/frontend/views/excel/import.php:$this->params['breadcrumbs'][] = $this->title;
my/test/frontend/views/excel/import.php:    <h1><?= Html::encode($this->title) ?></h1>
my/test/backend/views/msg/create.php:$this->title = 'Create Msg';
my/test/backend/views/msg/create.php:$this->params['breadcrumbs'][] = ['label' => 'Msgs', 'url' => ['index']];
my/test/backend/views/msg/create.php:$this->params['breadcrumbs'][] = $this->title;
my/test/backend/views/msg/create.php:       'headerTitle'=>'<i class="glyphicon glyphicon-plus"></i> '.Html::encode($this->title),
my/test/backend/views/msg/create.php:    <h1><?= Html::encode($this->title) ?></h1>
my/test/backend/views/msg/create.php:    <?= $this->render('_form', [
my/test/frontend/controllers/IframeController.php:        return $this->render('index') ;
my/test/frontend/controllers/IframeController.php:        return $this->render('content') ;
my/test/frontend/views/iframe/content.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/test/frontend/views/iframe/content.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/test/frontend/views/iframe/content.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/test/frontend/views/iframe/content.php:        in the "<?= $this->context->module->id ?>" module.
my/test/backend/views/msg/index.php:$this->title = 'Msgs';
my/test/backend/views/msg/index.php:$this->params['breadcrumbs'][] = $this->title;
my/test/backend/views/msg/index.php:    <h1><?= Html::encode($this->title) ?></h1>
my/test/backend/views/msg/index.php:    <?php // echo $this->render('_search', ['model' => $searchModel]); ?>
my/test/backend/views/msg/update.php:$this->title = 'Update Msg: ' . ' ' . $model->id;
my/test/backend/views/msg/update.php:$this->params['breadcrumbs'][] = ['label' => 'Msgs', 'url' => ['index']];
my/test/backend/views/msg/update.php:$this->params['breadcrumbs'][] = ['label' => $model->id, 'url' => ['view', 'id' => $model->id]];
my/test/backend/views/msg/update.php:$this->params['breadcrumbs'][] = 'Update';
my/test/backend/views/msg/update.php:         'headerTitle'=>'<i class="glyphicon glyphicon-edit"></i> '.Html::encode($this->title),
my/test/backend/views/msg/update.php:    <h1><?= Html::encode($this->title) ?></h1>
my/test/backend/views/msg/update.php:    <?= $this->render('_form', [
my/test/backend/views/msg/_search.php:            'headerTitle'=>'<i class="glyphicon glyphicon-search"></i> '.Html::encode($this->title),
my/org/migrations/m181220_071422_org_init.php:        if ($this->db->driverName === 'mysql') {
my/org/migrations/m181220_071422_org_init.php:        $this->createTable($this->tableName, [
my/org/migrations/m181220_071422_org_init.php:            'id' => $this->primaryKey()->unsigned(),
my/org/migrations/m181220_071422_org_init.php:            'name' => $this->string()->notNull()->comment('部门名称'),
my/org/migrations/m181220_071422_org_init.php:            'description' => $this->string()->notNull()->comment('部门描述'),
my/org/migrations/m181220_071422_org_init.php:            'status' => $this->tinyInteger()->notNull()
my/org/migrations/m181220_071422_org_init.php:            'created_at' => $this->integer()->unsigned()->comment('创建时间'),
my/org/migrations/m181220_071422_org_init.php:            'updated_at' => $this->integer()->unsigned()->comment('更新时间'),
my/org/migrations/m181220_071422_org_init.php:            'created_by' => $this->integer()->unsigned()->comment('创建者id'),
my/org/migrations/m181220_071422_org_init.php:            'updated_by' => $this->integer()->unsigned()->comment('更新者id'),
my/org/migrations/m181220_071422_org_init.php:        $this->createIndex('cTime', $this->tableName, 'created_at');
my/org/migrations/m181220_071422_org_init.php:        $this->createIndex('mTime', $this->tableName, 'updated_at');
my/org/migrations/m181220_071422_org_init.php:        $this->createIndex('updater', $this->tableName, 'updated_by');
my/org/migrations/m181220_071422_org_init.php:        $this->createIndex('author', $this->tableName, 'created_by');
my/org/migrations/m181220_071422_org_init.php:        $this->dropTable($this->tableName);
my/test/common/models/search/Token.php:$this->load($params);
my/test/common/models/search/Token.php:if (!$this->validate()) {
my/test/common/models/search/Token.php:            'user_id' => $this->user_id,
my/test/common/models/search/Token.php:            'created_at' => $this->created_at,
my/test/common/models/search/Token.php:            'type' => $this->type,
my/test/common/models/search/Token.php:        $query->andFilterWhere(['like', 'code', $this->code]);
my/org/backend/controllers/DefaultController.php:        return $this->render('index');
my/org/migrations/m181220_063124_dept_init.php:        if ($this->db->driverName === 'mysql') {
my/org/migrations/m181220_063124_dept_init.php:        $this->createTable($this->tableName, [
my/org/migrations/m181220_063124_dept_init.php:            'id' => $this->primaryKey()->unsigned(),
my/org/migrations/m181220_063124_dept_init.php:            'parent_id' => $this->integer()->unsigned()
my/org/migrations/m181220_063124_dept_init.php:            'name' => $this->string()->notNull()->comment('部门名称'),
my/org/migrations/m181220_063124_dept_init.php:            'description' => $this->string()->notNull()->comment('部门描述'),
my/org/migrations/m181220_063124_dept_init.php:            // 'thumb_uri' => $this->string()->defaultValue('')->comment('缩略图'),
my/org/migrations/m181220_063124_dept_init.php:            'display_order' => $this->tinyInteger()->unsigned()
my/org/migrations/m181220_063124_dept_init.php:            'status' => $this->tinyInteger()->notNull()
my/org/migrations/m181220_063124_dept_init.php:            'created_at' => $this->integer()->unsigned()->comment('创建时间'),
my/org/migrations/m181220_063124_dept_init.php:            'updated_at' => $this->integer()->unsigned()->comment('更新时间'),
my/org/migrations/m181220_063124_dept_init.php:            'created_by' => $this->integer()->unsigned()->comment('创建者id'),
my/org/migrations/m181220_063124_dept_init.php:            'updated_by' => $this->integer()->unsigned()->comment('更新者id'),
my/org/migrations/m181220_063124_dept_init.php:        $this->createIndex('cTime', $this->tableName, 'created_at');
my/org/migrations/m181220_063124_dept_init.php:        $this->createIndex('mTime', $this->tableName, 'updated_at');
my/org/migrations/m181220_063124_dept_init.php:        $this->createIndex('updater', $this->tableName, 'updated_by');
my/org/migrations/m181220_063124_dept_init.php:        $this->createIndex('author', $this->tableName, 'created_by');
my/org/migrations/m181220_063124_dept_init.php:        $this->dropTable($this->tableName);
api/themes/bootstrap/views/site/about.php:$this->title = 'About';
api/themes/bootstrap/views/site/about.php:$this->params['breadcrumbs'][] = $this->title;
api/themes/bootstrap/views/site/about.php:    <h1><?= Html::encode($this->title) ?></h1>
api/themes/bootstrap/views/site/resetPassword.php:$this->title = 'Reset password';
api/themes/bootstrap/views/site/resetPassword.php:$this->params['breadcrumbs'][] = $this->title;
api/themes/bootstrap/views/site/resetPassword.php:    <h1><?= Html::encode($this->title) ?></h1>
api/themes/bootstrap/views/site/signup.php:$this->title = 'Signup';
api/themes/bootstrap/views/site/signup.php:$this->params['breadcrumbs'][] = $this->title;
api/themes/bootstrap/views/site/signup.php:    <h1><?= Html::encode($this->title) ?></h1>
api/themes/bootstrap/views/site/requestPasswordResetToken.php:$this->title = 'Request password reset';
api/themes/bootstrap/views/site/requestPasswordResetToken.php:$this->params['breadcrumbs'][] = $this->title;
api/themes/bootstrap/views/site/requestPasswordResetToken.php:    <h1><?= Html::encode($this->title) ?></h1>
api/themes/bootstrap/views/site/error.php:$this->title = $name;
api/themes/bootstrap/views/site/error.php:    <h1><?= Html::encode($this->title) ?></h1>
api/themes/bootstrap/views/site/contact.php:$this->title = 'Contact';
api/themes/bootstrap/views/site/contact.php:$this->params['breadcrumbs'][] = $this->title;
api/themes/bootstrap/views/site/contact.php:    <h1><?= Html::encode($this->title) ?></h1>
api/themes/bootstrap/views/site/index.php:$this->title = 'My Yii Application';
api/themes/bootstrap/views/site/login.php:$this->title = 'Login';
api/themes/bootstrap/views/site/login.php:$this->params['breadcrumbs'][] = $this->title;
api/themes/bootstrap/views/site/login.php:    <h1><?= Html::encode($this->title) ?></h1>
api/controllers/HelloController.php:        $actionId = $this->action->getUniqueId();
api/controllers/HelloController.php:        return $this->getServiceExecutor()
api/themes/bootstrap/views/layouts/main.php:<?php $this->beginPage() ?>
api/themes/bootstrap/views/layouts/main.php:    <title><?= Html::encode($this->title) ?></title>
api/themes/bootstrap/views/layouts/main.php:    <?php $this->head() ?>
api/themes/bootstrap/views/layouts/main.php:    <?php $this->beginBody() ?>
api/themes/bootstrap/views/layouts/main.php:            'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],
api/themes/bootstrap/views/layouts/main.php:    <?php $this->endBody() ?>
api/themes/bootstrap/views/layouts/main.php:<?php $this->endPage() ?>
my/org/backend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
my/org/backend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
my/org/backend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
my/org/backend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
api/base/Application.php:            $this->getResponse()->on(Response::EVENT_BEFORE_SEND,function ($event) {
api/base/Serializer.php:        $this->response->setStatusCode(422, 'Data Validation Failed.');
api/modules/v1/controllers/RpcController.php:                   'tokenParam'=>$this->accessTokenParam,
api/modules/v1/controllers/RpcController.php:                   'actions' => $this->verbs(),
api/modules/v1/controllers/RpcController.php:        $this->enableCsrfValidation = false;
api/modules/v1/controllers/RpcController.php:            $this->accessTokenParam = 'store-access-token';
my/content/backend/views/photo/view.php:$this->title = Yii::t('models', 'Photo');
my/content/backend/views/photo/view.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('models', 'Photos'), 'url' => ['index']];
my/content/backend/views/photo/view.php:$this->params['breadcrumbs'][] = ['label' => (string)$model->title, 'url' => ['view', 'id' => $model->id]];
my/content/backend/views/photo/view.php:$this->params['breadcrumbs'][] = 'View';
my/content/backend/views/photo/view.php:    <?php $this->beginBlock('my\content\common\models\Photo'); ?>
my/content/backend/views/photo/view.php:    <?php $this->endBlock(); ?>
my/content/backend/views/photo/view.php:    'content' => $this->blocks['my\content\common\models\Photo'],
common/widgets/PrismAsset.php:        return $this->cdnBaseUrl.'@'.$this->version ;
common/widgets/PrismAsset.php:        foreach ($this->js as $i => $js) {
common/widgets/PrismAsset.php:                //     $js = ArrayHelper::merge($this->jsOptions, $js);
common/widgets/PrismAsset.php:                //     array_unshift($js, $converter->convert($file, $this->basePath));
common/widgets/PrismAsset.php:                //     $this->js[$i] = $js;
common/widgets/PrismAsset.php:                // $this->js[$i] = $converter->convert($js, $this->basePath);
common/widgets/PrismAsset.php:                $this->js[$i] = 
common/widgets/PrismAsset.php:                $this->getCDNUrl().'/'.$js;
common/widgets/PrismAsset.php:        foreach ($this->css as $i => $css) {
common/widgets/PrismAsset.php:                //     $css = ArrayHelper::merge($this->cssOptions, $css);
common/widgets/PrismAsset.php:                //     array_unshift($css, $converter->convert($file, $this->basePath));
common/widgets/PrismAsset.php:                //     $this->css[$i] = $css;
common/widgets/PrismAsset.php:                // $this->css[$i] = $converter->convert($css, $this->basePath);
common/widgets/PrismAsset.php:                $this->css[$i] = 
common/widgets/PrismAsset.php:                $this->getCDNUrl().'/'.$css;
common/widgets/PrismAsset.php:        $this->handleAssetFiles();
storage/EvaThumber/src/EvaThumber/Imagine/Gd/Image/Effects.php:        if (false === imagefilter($this->resource, IMG_FILTER_CONTRAST, $contrast)) {
storage/EvaThumber/src/EvaThumber/Imagine/Gd/Image/Effects.php:        if (false === imagefilter($this->resource, IMG_FILTER_BRIGHTNESS, $brightness)) {
storage/EvaThumber/src/EvaThumber/Imagine/Gd/Image/Effects.php:        if (false === imagefilter($this->resource, IMG_FILTER_PIXELATE, $blockSize, $advanced)) {
storage/EvaThumber/src/EvaThumber/Imagine/Gd/Image/Effects.php:        if (false === imagefilter($this->resource, IMG_FILTER_EMBOSS)) {
storage/EvaThumber/src/EvaThumber/Imagine/Gd/Image/Effects.php:        if (false === imagefilter($this->resource, IMG_FILTER_EDGEDETECT)) {
storage/EvaThumber/src/EvaThumber/Imagine/Gd/Image/Effects.php:        if (false === imagefilter($this->resource, IMG_FILTER_GAUSSIAN_BLUR)) {
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->crop = $crop;
storage/EvaThumber/src/EvaThumber/Parameters.php:        if($this->crop){
storage/EvaThumber/src/EvaThumber/Parameters.php:            return $this->crop;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->crop = $this->argDefaults['crop'];
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->border = $border;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->border;
storage/EvaThumber/src/EvaThumber/Parameters.php:            $this->dummy = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->dummy = $dummy;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->dummy;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->filter;
storage/EvaThumber/src/EvaThumber/Parameters.php:            $this->filter = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->filter = $filter;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->gravity;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->gravity = $gravity;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->layer;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->layer = $layer;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->percent = $percent;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->percent;
storage/EvaThumber/src/EvaThumber/Parameters.php:        if($this->quality){
storage/EvaThumber/src/EvaThumber/Parameters.php:            return $this->quality;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->quality = $this->argDefaults['quality'];
storage/EvaThumber/src/EvaThumber/Parameters.php:        $extension = $this->getExtension();
storage/EvaThumber/src/EvaThumber/Parameters.php:            $this->quality = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->quality = (int) $quality;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->width;
storage/EvaThumber/src/EvaThumber/Parameters.php:        if(!$this->config->allow_stretch){
storage/EvaThumber/src/EvaThumber/Parameters.php:            $maxWidth = $this->argDefaults['width'];
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->width = $width;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->height;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->height = (int) $height;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->x;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->x = (int) $x;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->y;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->y = (int) $y;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->rotate;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->rotate = $rotate % 360;
storage/EvaThumber/src/EvaThumber/Parameters.php:        if(!$this->extension){
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->extension;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->extension = strtolower($extension);
storage/EvaThumber/src/EvaThumber/Parameters.php:        if(!$this->filename){
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->filename;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->filename = $filename;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->config = $config;
storage/EvaThumber/src/EvaThumber/Parameters.php:        return $this->config;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->imageWidth = $imageWidth;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->imageHeight = $imageHeight;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->normalize();
storage/EvaThumber/src/EvaThumber/Parameters.php:                $this->$method($value);
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->normalize();
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->setExtension($fileExt);
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->setFilename($fileNameMain);
storage/EvaThumber/src/EvaThumber/Parameters.php:        $argMapping = $this->argMapping;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->fromArray($params);
storage/EvaThumber/src/EvaThumber/Parameters.php:            'filter' => $this->getFilter(),
storage/EvaThumber/src/EvaThumber/Parameters.php:            'width' => $this->getWidth(),
storage/EvaThumber/src/EvaThumber/Parameters.php:            'height' => $this->getHeight(),
storage/EvaThumber/src/EvaThumber/Parameters.php:            'percent' => $this->getPercent(),
storage/EvaThumber/src/EvaThumber/Parameters.php:            'dummy' => $this->getDummy(),
storage/EvaThumber/src/EvaThumber/Parameters.php:            'border' => $this->getBorder(),
storage/EvaThumber/src/EvaThumber/Parameters.php:            'layer' => $this->getLayer(),
storage/EvaThumber/src/EvaThumber/Parameters.php:            'quality' => $this->getQuality(), 
storage/EvaThumber/src/EvaThumber/Parameters.php:            'crop' => $this->getCrop(),
storage/EvaThumber/src/EvaThumber/Parameters.php:            'x' => $this->getX(),
storage/EvaThumber/src/EvaThumber/Parameters.php:            'y' => $this->getY(),
storage/EvaThumber/src/EvaThumber/Parameters.php:            'rotate' => $this->getRotate(),
storage/EvaThumber/src/EvaThumber/Parameters.php:            'gravity' => $this->getGravity(), 
storage/EvaThumber/src/EvaThumber/Parameters.php:            'extension' => $this->getExtension(),
storage/EvaThumber/src/EvaThumber/Parameters.php:            'filename' => $this->getFilename(),
storage/EvaThumber/src/EvaThumber/Parameters.php:        $params = $this->toArray();
storage/EvaThumber/src/EvaThumber/Parameters.php:        $mapping = array_flip($this->argMapping);
storage/EvaThumber/src/EvaThumber/Parameters.php:        $defaults = $this->argDefaults;
storage/EvaThumber/src/EvaThumber/Parameters.php:            if(isset($this->$operate)){
storage/EvaThumber/src/EvaThumber/Parameters.php:                $this->$operate = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:            $this->fromString($imageName);
storage/EvaThumber/src/EvaThumber/Parameters.php:            $this->fromArray($imageName);
storage/EvaThumber/src/EvaThumber/Parameters.php:        $defaults = $this->argDefaults;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $config = $this->getConfig();
storage/EvaThumber/src/EvaThumber/Parameters.php:            $imageWidth = $this->imageWidth;
storage/EvaThumber/src/EvaThumber/Parameters.php:            $imageHeight = $this->imageHeight;
storage/EvaThumber/src/EvaThumber/Parameters.php:            $width = $this->width;
storage/EvaThumber/src/EvaThumber/Parameters.php:            $height = $this->height;
storage/EvaThumber/src/EvaThumber/Parameters.php:                $this->width = $width = $width > $maxWidth ? $maxWidth : $width;
storage/EvaThumber/src/EvaThumber/Parameters.php:                $this->height = $height = $height > $maxHeight ? $maxHeight : $height;
storage/EvaThumber/src/EvaThumber/Parameters.php:                    $this->width = $width = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:                    $this->height = $height = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:        if(!$this->crop || $this->crop == 'fill'){
storage/EvaThumber/src/EvaThumber/Parameters.php:            $this->x = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:            $this->y = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:        if($this->crop == 'fill' & (!$this->width || !$this->height)){
storage/EvaThumber/src/EvaThumber/Parameters.php:        if(is_numeric($this->crop)){
storage/EvaThumber/src/EvaThumber/Parameters.php:            if($this->x === null || $this->y === null){
storage/EvaThumber/src/EvaThumber/Parameters.php:                $this->x = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:                $this->y = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:        if('fill' === $this->crop){
storage/EvaThumber/src/EvaThumber/Parameters.php:            $this->x = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:            $this->y = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:            if($this->gravity && is_numeric($this->gravity)){
storage/EvaThumber/src/EvaThumber/Parameters.php:                $this->gravity = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:        if($this->percent){
storage/EvaThumber/src/EvaThumber/Parameters.php:            $this->width = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:            $this->height = null;
storage/EvaThumber/src/EvaThumber/Parameters.php:        $this->argDefaults = $defaults;
storage/EvaThumber/src/EvaThumber/Thumber.php:        if($this->cacher){
storage/EvaThumber/src/EvaThumber/Thumber.php:            return $this->cacher;
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->cacher = new Cacher();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $this->cacher = $cacher;
storage/EvaThumber/src/EvaThumber/Thumber.php:        if($this->thumber){
storage/EvaThumber/src/EvaThumber/Thumber.php:            return $this->thumber;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $thumber = $this->createThumber($adapter);
storage/EvaThumber/src/EvaThumber/Thumber.php:            $this->image = $thumber->open($sourcefile);
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->thumber = $thumber;
storage/EvaThumber/src/EvaThumber/Thumber.php:        if($this->faker) {
storage/EvaThumber/src/EvaThumber/Thumber.php:            return $this->faker;
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->faker = new Faker($dummyName);
storage/EvaThumber/src/EvaThumber/Thumber.php:        $this->thumber = $thumber;
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->image;
storage/EvaThumber/src/EvaThumber/Thumber.php:       $className = get_class($this->image);
storage/EvaThumber/src/EvaThumber/Thumber.php:       return 'EvaThumber\\' . $className($this->image);
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->url;
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->imageOptions;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $this->config = $config;
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->config;
storage/EvaThumber/src/EvaThumber/Thumber.php:        if($this->filesystem){
storage/EvaThumber/src/EvaThumber/Thumber.php:            return $this->filesystem;
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->filesystem = new Filesystem();
storage/EvaThumber/src/EvaThumber/Thumber.php:        if($this->sourcefile){
storage/EvaThumber/src/EvaThumber/Thumber.php:            return $this->sourcefile;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $fileRootPath = $this->config->source_path;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $filePath = $this->url->getImagePath();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $fileName = $this->url->getImageName();
storage/EvaThumber/src/EvaThumber/Thumber.php:            $systemEncoding =  $this->config->system_file_encoding;
storage/EvaThumber/src/EvaThumber/Thumber.php:                $sourcefile = iconv('UTF-8', $this->config->system_file_encoding, $sourcefile);
storage/EvaThumber/src/EvaThumber/Thumber.php:            $sourcefile =  Feature\ZipReader::getStreamPath(urldecode($filePath . '/' . $fileName), $fileRootPath, $this->config->zip_file_encoding);
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->sourcefile = $sourcefile;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $this->sourcefile = $sourcefile;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $sourcefile = $this->getSourcefile();
storage/EvaThumber/src/EvaThumber/Thumber.php:                $this->setSourcefile($sourcefile);
storage/EvaThumber/src/EvaThumber/Thumber.php:                $this->setSourcefile($sourcefile);
storage/EvaThumber/src/EvaThumber/Thumber.php:        if($this->params){
storage/EvaThumber/src/EvaThumber/Thumber.php:            return $this->params;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $params->setConfig($this->config);
storage/EvaThumber/src/EvaThumber/Thumber.php:        $params->fromString($this->url->getUrlImageName());
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->params = $params;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $this->params = $params;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $config = $this->getConfig();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $this->getUrl()->setUrlImageName($imageName);
storage/EvaThumber/src/EvaThumber/Thumber.php:        $newUrl = $this->getUrl()->toString();
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->saveImage($path);
storage/EvaThumber/src/EvaThumber/Thumber.php:        $config = $this->getConfig();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $extension = $this->getParameters()->getExtension();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $this->process();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $image = $this->getImage();
storage/EvaThumber/src/EvaThumber/Thumber.php:            $this->saveImage();
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->showImage($extension);
storage/EvaThumber/src/EvaThumber/Thumber.php:        $this->url  = new Url($url, $config);
storage/EvaThumber/src/EvaThumber/Thumber.php:        $this->config = $this->url->getConfig();
storage/EvaThumber/src/EvaThumber/Thumber.php:        if($this->optimizedImage){
storage/EvaThumber/src/EvaThumber/Thumber.php:            unlink($this->optimizedImage);
storage/EvaThumber/src/EvaThumber/Thumber.php:            $config = $this->getConfig();
storage/EvaThumber/src/EvaThumber/Thumber.php:            $imagePath = '/' . $this->getUrl()->getUrlKey() . $this->getUrl()->getImagePath();
storage/EvaThumber/src/EvaThumber/Thumber.php:            $cachePath = $cacheRoot . $imagePath . '/' . $this->getUrl()->getUrlImageName();
storage/EvaThumber/src/EvaThumber/Thumber.php:            $this->getFilesystem()->prepareDirectoryStructure($cachePath, $pathLevel);
storage/EvaThumber/src/EvaThumber/Thumber.php:        if(true === $this->optimized){
storage/EvaThumber/src/EvaThumber/Thumber.php:            return $this->saveOptimizedImage($path);
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->saveNormalImage($path);
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->getImage()->save($path, $this->getImageOptions());
storage/EvaThumber/src/EvaThumber/Thumber.php:        copy($this->optimizedImage, $path);
storage/EvaThumber/src/EvaThumber/Thumber.php:        if(true === $this->optimized){
storage/EvaThumber/src/EvaThumber/Thumber.php:            return $this->showOptimizedImage($extension);
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->showNormalImage($extension);
storage/EvaThumber/src/EvaThumber/Thumber.php:        return $this->getImage()->show($extension, $this->getImageOptions());
storage/EvaThumber/src/EvaThumber/Thumber.php:        $handle = fopen ($this->optimizedImage, "r");
storage/EvaThumber/src/EvaThumber/Thumber.php:        unlink($this->optimizedImage);
storage/EvaThumber/src/EvaThumber/Thumber.php:        if(true === $this->processed){
storage/EvaThumber/src/EvaThumber/Thumber.php:        $config = $this->getConfig();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $params = $this->getParameters();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $url = $this->getUrl();
storage/EvaThumber/src/EvaThumber/Thumber.php:            return $this->redirect($newImageName);
storage/EvaThumber/src/EvaThumber/Thumber.php:        if($this->sourcefileExsit()){
storage/EvaThumber/src/EvaThumber/Thumber.php:                    "Request file not find in %s", $this->getSourcefile()
storage/EvaThumber/src/EvaThumber/Thumber.php:            $faker = $this->getFaker($dummy);
storage/EvaThumber/src/EvaThumber/Thumber.php:            $sourcefile = $this->getSourcefile();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $thumber = $this->getThumber($sourcefile);
storage/EvaThumber/src/EvaThumber/Thumber.php:        $params->setImageSize($this->getImage()->getSize()->getWidth(), $this->getImage()->getSize()->getHeight());
storage/EvaThumber/src/EvaThumber/Thumber.php:            return $this->redirect($newImageName);
storage/EvaThumber/src/EvaThumber/Thumber.php:        $this->processed = true;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $adapter = $adapter ? $adapter : strtolower($this->config->adapter);
storage/EvaThumber/src/EvaThumber/Thumber.php:        $thumberClass = get_class($this->getThumber());
storage/EvaThumber/src/EvaThumber/Thumber.php:        $params = $this->getParameters();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $image = $this->getImage();
storage/EvaThumber/src/EvaThumber/Thumber.php:            $feature = new Feature\FaceDetect($this->config->face_detect->bin, $this->config->face_detect->cascade);
storage/EvaThumber/src/EvaThumber/Thumber.php:            $faceData = $feature->filterDump($this->getImage());
storage/EvaThumber/src/EvaThumber/Thumber.php:            if($this->config->face_detect->draw_border){
storage/EvaThumber/src/EvaThumber/Thumber.php:                $this->image = $image->crop(new Imagine\Image\Point($newX, $newY), new Imagine\Image\Box($width, $height));
storage/EvaThumber/src/EvaThumber/Thumber.php:        $this->image = $image->crop(new Imagine\Image\Point($x, $y), new Imagine\Image\Box($crop, $gravity));
storage/EvaThumber/src/EvaThumber/Thumber.php:        $params = $this->getParameters();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $percent = $this->params->getPercent();
storage/EvaThumber/src/EvaThumber/Thumber.php:            $this->resizeByPercent();
storage/EvaThumber/src/EvaThumber/Thumber.php:            $this->resizeBySize();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $params = $this->getParameters();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $maxWidth = $this->config->max_width;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $maxHeight = $this->config->max_height;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $image = $this->getImage();
storage/EvaThumber/src/EvaThumber/Thumber.php:            $allowStretch = $this->config->allow_stretch;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $this->image = $image->thumbnail($size, $mode);
storage/EvaThumber/src/EvaThumber/Thumber.php:        $params = $this->getParameters();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $percent = $this->params->getPercent();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $image = $this->getImage();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $this->image = $image->thumbnail($box, $mode);
storage/EvaThumber/src/EvaThumber/Thumber.php:        $rotate = $this->getParameters()->getRotate();
storage/EvaThumber/src/EvaThumber/Thumber.php:            $image = $this->getImage();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $filter = $this->getParameters()->getFilter();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $image = $this->getImage();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $effects = $this->getImage()->effects('EvaThumber\\' . get_class($image) . '\\Effects');
storage/EvaThumber/src/EvaThumber/Thumber.php:        $quality = $this->getParameters()->getQuality();
storage/EvaThumber/src/EvaThumber/Thumber.php:            $this->imageOptions['quality'] = $quality;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $config = $this->config->watermark;
storage/EvaThumber/src/EvaThumber/Thumber.php:            $waterLayer = $this->createThumber()->open($config->layer_file);
storage/EvaThumber/src/EvaThumber/Thumber.php:                $waterLayer = $this->createThumber()->open($layerFile);
storage/EvaThumber/src/EvaThumber/Thumber.php:                $font = $this->createFont($config->font_file, $config->font_size, new Imagine\Image\Color($config->font_color));
storage/EvaThumber/src/EvaThumber/Thumber.php:        $image = $this->getImage();
storage/EvaThumber/src/EvaThumber/Thumber.php:            $this->getImage()->draw()->text($text, $font, $point);
storage/EvaThumber/src/EvaThumber/Thumber.php:            $this->image = $this->getImage()->paste($waterLayer, $point);
storage/EvaThumber/src/EvaThumber/Thumber.php:        $blendingFile = $this->config->blending_layer;
storage/EvaThumber/src/EvaThumber/Thumber.php:        $blendingEffect = $this->getParameters()->getLayer();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $image = $this->getImage();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $layer = $this->createThumber()->open($blendingFile);
storage/EvaThumber/src/EvaThumber/Thumber.php:        $extension = $this->getParameters()->getExtension();
storage/EvaThumber/src/EvaThumber/Thumber.php:        $config = $this->getConfig();
storage/EvaThumber/src/EvaThumber/Thumber.php:            $this->optimizedImage = $feature->filterDump($this->getImage());
storage/EvaThumber/src/EvaThumber/Thumber.php:            if($this->optimizedImage){
storage/EvaThumber/src/EvaThumber/Thumber.php:                $this->optimized = true;
storage/EvaThumber/src/EvaThumber/Feature/FaceDetect.php:        return $this->cascade;
storage/EvaThumber/src/EvaThumber/Feature/FaceDetect.php:        $this->cascade = $cascade;
storage/EvaThumber/src/EvaThumber/Feature/FaceDetect.php:        $this->facedetectBin = $facedetectBin;
storage/EvaThumber/src/EvaThumber/Feature/FaceDetect.php:        $this->cascade = $cascade;
storage/EvaThumber/src/EvaThumber/Feature/FaceDetect.php:        $pb = $this->createProcessBuilder(array('' . $this->facedetectBin));
storage/EvaThumber/src/EvaThumber/Feature/FaceDetect.php:        $pb->add($this->cascade);
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:        $this->pngoutBin = $pngoutBin;
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:        $this->color = $color;
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:        $this->filter = $filter;
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:        $this->strategy = $strategy;
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:        $this->blockSplitThreshold = $blockSplitThreshold;
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:        $pb = $this->createProcessBuilder(array($this->pngoutBin));
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:        if (null !== $this->color) {
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:            $pb->add('-c'.$this->color);
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:        if (null !== $this->filter) {
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:            $pb->add('-f'.$this->filter);
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:        if (null !== $this->strategy) {
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:            $pb->add('-s'.$this->strategy);
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:        if (null !== $this->blockSplitThreshold) {
storage/EvaThumber/src/EvaThumber/Feature/Pngout.php:            $pb->add('-b'.$this->blockSplitThreshold);
storage/EvaThumber/src/EvaThumber/Feature/AbstractProcess.php:        $this->timeout = $timeout;
storage/EvaThumber/src/EvaThumber/Feature/AbstractProcess.php:        if (null !== $this->timeout) {
storage/EvaThumber/src/EvaThumber/Feature/AbstractProcess.php:            $pb->setTimeout($this->timeout);
storage/EvaThumber/src/EvaThumber/Faker.php:        if($this->cacher){
storage/EvaThumber/src/EvaThumber/Faker.php:            return $this->cacher;
storage/EvaThumber/src/EvaThumber/Faker.php:        return $this->cacher = new Cacher();
storage/EvaThumber/src/EvaThumber/Faker.php:        $this->cacher = $cacher;
storage/EvaThumber/src/EvaThumber/Faker.php:        if($this->httpRequest){
storage/EvaThumber/src/EvaThumber/Faker.php:            return $this->httpRequest;
storage/EvaThumber/src/EvaThumber/Faker.php:        return $this->httpRequest = new Requests();
storage/EvaThumber/src/EvaThumber/Faker.php:        $this->httpRequest = $httpRequest;
storage/EvaThumber/src/EvaThumber/Faker.php:        return $this->sourceSite;
storage/EvaThumber/src/EvaThumber/Faker.php:        $this->sourceSite = $sourceSite;
storage/EvaThumber/src/EvaThumber/Faker.php:        $sourceSite = $this->getSourceSite();
storage/EvaThumber/src/EvaThumber/Faker.php:        $sourceSite = $this->getSourceSite();
storage/EvaThumber/src/EvaThumber/Faker.php:        $json = $this->getRss();
storage/EvaThumber/src/EvaThumber/Faker.php:        return $this->process();
storage/EvaThumber/src/EvaThumber/Faker.php:            $this->setSourceSite($sourceSite);
storage/EvaThumber/src/EvaThumber/Url.php:            'urlString' => $this->urlString,
storage/EvaThumber/src/EvaThumber/Url.php:            'urlPath' => $this->getUrlPath(),
storage/EvaThumber/src/EvaThumber/Url.php:            'scheme' => $this->getScheme(),
storage/EvaThumber/src/EvaThumber/Url.php:            'host' => $this->getHost(),
storage/EvaThumber/src/EvaThumber/Url.php:            'query' => $this->getQuery(),
storage/EvaThumber/src/EvaThumber/Url.php:            'urlScriptName' => $this->getUrlScriptName(), //from $_SERVER
storage/EvaThumber/src/EvaThumber/Url.php:            'urlRewritePath' => $this->getUrlRewritePath(),
storage/EvaThumber/src/EvaThumber/Url.php:            'urlPrefix' => $this->getUrlPrefix(),
storage/EvaThumber/src/EvaThumber/Url.php:            'urlKey' => $this->getUrlKey(),
storage/EvaThumber/src/EvaThumber/Url.php:            'urlImagePath' => $this->getUrlImagePath(),
storage/EvaThumber/src/EvaThumber/Url.php:            'urlImageName' => $this->getUrlImageName(),
storage/EvaThumber/src/EvaThumber/Url.php:            'urlRewriteEnabled' => $this->getUrlRewriteEnabled(),
storage/EvaThumber/src/EvaThumber/Url.php:            'imagePath' => $this->getImagePath(),
storage/EvaThumber/src/EvaThumber/Url.php:            'imageName' => $this->getImageName(),
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->scheme;
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->host;
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->port;
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->query;
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->urlString;
storage/EvaThumber/src/EvaThumber/Url.php:        if ($this->urlRewriteEnabled !== null) {
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->urlRewriteEnabled;
storage/EvaThumber/src/EvaThumber/Url.php:        $urlPath = $this->getUrlPath();
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->urlRewriteEnabled = true;
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->urlRewriteEnabled = false;
storage/EvaThumber/src/EvaThumber/Url.php:        if ($this->urlPath) {
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->urlPath;
storage/EvaThumber/src/EvaThumber/Url.php:        if (!$this->urlString) {
storage/EvaThumber/src/EvaThumber/Url.php:        $url = $this->urlString;
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->urlPath = isset($url['path']) ? $url['path'] : '';
storage/EvaThumber/src/EvaThumber/Url.php:        $urlImagePath = $this->getUrlImagePath();
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->urlPrefix = array_shift($urlImagePathArray);
storage/EvaThumber/src/EvaThumber/Url.php:        $urlImagePath = $this->getUrlImagePath();
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->urlKey = $urlImagePathArray[1];
storage/EvaThumber/src/EvaThumber/Url.php:        $this->urlScriptName = (string)$urlScriptName;
storage/EvaThumber/src/EvaThumber/Url.php:        if ($this->urlScriptName) {
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->urlScriptName;
storage/EvaThumber/src/EvaThumber/Url.php:                return $this->urlScriptName = '';
storage/EvaThumber/src/EvaThumber/Url.php:                if ($scriptNameFront && $this->urlString && false === strpos($this->urlString, $scriptNameFront)) {
storage/EvaThumber/src/EvaThumber/Url.php:                    return $this->urlScriptName = '';
storage/EvaThumber/src/EvaThumber/Url.php:                return $this->urlScriptName = $scriptName;
storage/EvaThumber/src/EvaThumber/Url.php:                return $this->urlScriptName = implode('/', $scriptName);
storage/EvaThumber/src/EvaThumber/Url.php:        if ($this->urlImagePath) {
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->urlImagePath;
storage/EvaThumber/src/EvaThumber/Url.php:        $urlPath = $this->getUrlPath();
storage/EvaThumber/src/EvaThumber/Url.php:        $urlScriptName = $this->getUrlScriptName();
storage/EvaThumber/src/EvaThumber/Url.php:            $urlRewriteEnabled = $this->getUrlRewriteEnabled();
storage/EvaThumber/src/EvaThumber/Url.php:                return $this->urlImagePath = str_replace($this->getUrlRewritePath(), '', $urlPath);
storage/EvaThumber/src/EvaThumber/Url.php:                return $this->urlImagePath = str_replace($urlScriptName, '', $urlPath);
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->urlImagePath = $urlPath;
storage/EvaThumber/src/EvaThumber/Url.php:        if ($this->urlImageName) {
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->urlImageName;
storage/EvaThumber/src/EvaThumber/Url.php:        $urlImagePath = $this->getUrlImagePath();
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->urlImageName = '';
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->urlImageName = '';
storage/EvaThumber/src/EvaThumber/Url.php:        if (is_object($this->config) && isset($this->config->class_separator) && strpos(
storage/EvaThumber/src/EvaThumber/Url.php:                $this->config->class_separator
storage/EvaThumber/src/EvaThumber/Url.php:            list($urlImageName, $className) = explode($this->config->class_separator, $urlImageName);
storage/EvaThumber/src/EvaThumber/Url.php:            if (!isset($this->config->classes->$className)) {
storage/EvaThumber/src/EvaThumber/Url.php:            $urlImageName = implode('.', $_urlNameArr) . ',' . $this->config->classes->$className . '.' . $fileExt;
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->urlImageName = $urlImageName;
storage/EvaThumber/src/EvaThumber/Url.php:        $this->urlImageName = $imageName;
storage/EvaThumber/src/EvaThumber/Url.php:        $urlImagePath = $this->getUrlImagePath();
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->imagePath = '/' . implode('/', $urlImagePathArray);
storage/EvaThumber/src/EvaThumber/Url.php:        $urlImageName = $this->getUrlImageName();
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->imageName = '';
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->imageName = '';
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->imageName = '';
storage/EvaThumber/src/EvaThumber/Url.php:        if (is_object($this->config) && isset($this->config->class_separator) && strpos(
storage/EvaThumber/src/EvaThumber/Url.php:                $this->config->class_separator
storage/EvaThumber/src/EvaThumber/Url.php:            $fileExt = substr($fileExt, 0, strpos($fileExt, $this->config->class_separator));
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->imageName = $fileNameMain . '.' . $fileExt;
storage/EvaThumber/src/EvaThumber/Url.php:        $scriptName = $this->getUrlScriptName();
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->urlRewritePath = '';
storage/EvaThumber/src/EvaThumber/Url.php:        if (false === $this->getUrlRewriteEnabled()) {
storage/EvaThumber/src/EvaThumber/Url.php:            return $this->urlRewritePath = $scriptName;
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->urlRewritePath = implode('/', $rewitePathArray);
storage/EvaThumber/src/EvaThumber/Url.php:        $host = $this->getHost();
storage/EvaThumber/src/EvaThumber/Url.php:        if (!$this->getUrlPrefix()) {
storage/EvaThumber/src/EvaThumber/Url.php:        if (!$this->getUrlKey()) {
storage/EvaThumber/src/EvaThumber/Url.php:        if (!$this->getImageName()) {
storage/EvaThumber/src/EvaThumber/Url.php:        $host = $this->getHost();
storage/EvaThumber/src/EvaThumber/Url.php:        $port = $this->getPort() ? ':' . $this->getPort() : '';
storage/EvaThumber/src/EvaThumber/Url.php:        $path = $this->getUrlRewritePath();
storage/EvaThumber/src/EvaThumber/Url.php:        if ($prefix = $this->getUrlPrefix()) {
storage/EvaThumber/src/EvaThumber/Url.php:        if ($urlKey = $this->getUrlKey()) {
storage/EvaThumber/src/EvaThumber/Url.php:        if ($imagePath = $this->getImagePath()) {
storage/EvaThumber/src/EvaThumber/Url.php:        if ($imageName = $this->getUrlImageName()) {
storage/EvaThumber/src/EvaThumber/Url.php:        $url = $this->getScheme() . '://' . $host . $port . $path;
storage/EvaThumber/src/EvaThumber/Url.php:        $url .= $this->getQuery() ? '?' . $this->getQuery() : '';
storage/EvaThumber/src/EvaThumber/Url.php:        return $this->config;
storage/EvaThumber/src/EvaThumber/Url.php:        $this->config = $config;
storage/EvaThumber/src/EvaThumber/Url.php:        $urlString = $url ? $url : $this->getCurrentUrl();
storage/EvaThumber/src/EvaThumber/Url.php:        $this->urlString = $urlString;
storage/EvaThumber/src/EvaThumber/Url.php:            $this->scheme = isset($url['scheme']) ? $url['scheme'] : null;
storage/EvaThumber/src/EvaThumber/Url.php:            $this->host = isset($url['host']) ? $url['host'] : null;
storage/EvaThumber/src/EvaThumber/Url.php:            $this->port = isset($url['port']) ? $url['port'] : '';
storage/EvaThumber/src/EvaThumber/Url.php:            $this->query = isset($url['query']) ? $url['query'] : null;
storage/EvaThumber/src/EvaThumber/Url.php:            $this->urlPath = isset($url['path']) ? $url['path'] : null;
storage/EvaThumber/src/EvaThumber/Url.php:        $configKey = $this->getUrlKey();
storage/EvaThumber/src/EvaThumber/Url.php:                $this->config = $config->thumbers->$configKey;
storage/EvaThumber/src/EvaThumber/Url.php:                $this->config = $defaultConfig->merge($config->thumbers->$configKey);
storage/EvaThumber/src/EvaThumber/Config/Config.php:        $this->allowModifications = (bool) $allowModifications;
storage/EvaThumber/src/EvaThumber/Config/Config.php:                $this->data[$key] = new static($value, $this->allowModifications);
storage/EvaThumber/src/EvaThumber/Config/Config.php:                $this->data[$key] = $value;
storage/EvaThumber/src/EvaThumber/Config/Config.php:            $this->count++;
storage/EvaThumber/src/EvaThumber/Config/Config.php:        if (array_key_exists($name, $this->data)) {
storage/EvaThumber/src/EvaThumber/Config/Config.php:            return $this->data[$name];
storage/EvaThumber/src/EvaThumber/Config/Config.php:        return $this->get($name);
storage/EvaThumber/src/EvaThumber/Config/Config.php:        if ($this->allowModifications) {
storage/EvaThumber/src/EvaThumber/Config/Config.php:                $this->data[] = $value;
storage/EvaThumber/src/EvaThumber/Config/Config.php:                $this->data[$name] = $value;
storage/EvaThumber/src/EvaThumber/Config/Config.php:            $this->count++;
storage/EvaThumber/src/EvaThumber/Config/Config.php:        foreach ($this->data as $key => $value) {
storage/EvaThumber/src/EvaThumber/Config/Config.php:        $this->data = $array;
storage/EvaThumber/src/EvaThumber/Config/Config.php:        $data  = $this->data;
storage/EvaThumber/src/EvaThumber/Config/Config.php:        return isset($this->data[$name]);
storage/EvaThumber/src/EvaThumber/Config/Config.php:        if (!$this->allowModifications) {
storage/EvaThumber/src/EvaThumber/Config/Config.php:        } elseif (isset($this->data[$name])) {
storage/EvaThumber/src/EvaThumber/Config/Config.php:            unset($this->data[$name]);
storage/EvaThumber/src/EvaThumber/Config/Config.php:            $this->count--;
storage/EvaThumber/src/EvaThumber/Config/Config.php:            $this->skipNextIteration = true;
storage/EvaThumber/src/EvaThumber/Config/Config.php:        return $this->count;
storage/EvaThumber/src/EvaThumber/Config/Config.php:        $this->skipNextIteration = false;
storage/EvaThumber/src/EvaThumber/Config/Config.php:        return current($this->data);
storage/EvaThumber/src/EvaThumber/Config/Config.php:        return key($this->data);
storage/EvaThumber/src/EvaThumber/Config/Config.php:        if ($this->skipNextIteration) {
storage/EvaThumber/src/EvaThumber/Config/Config.php:            $this->skipNextIteration = false;
storage/EvaThumber/src/EvaThumber/Config/Config.php:        next($this->data);
storage/EvaThumber/src/EvaThumber/Config/Config.php:        $this->skipNextIteration = false;
storage/EvaThumber/src/EvaThumber/Config/Config.php:        reset($this->data);
storage/EvaThumber/src/EvaThumber/Config/Config.php:        return ($this->key() !== null);
storage/EvaThumber/src/EvaThumber/Config/Config.php:        return $this->__isset($offset);
storage/EvaThumber/src/EvaThumber/Config/Config.php:        return $this->__get($offset);
storage/EvaThumber/src/EvaThumber/Config/Config.php:        $this->__set($offset, $value);
storage/EvaThumber/src/EvaThumber/Config/Config.php:        $this->__unset($offset);
storage/EvaThumber/src/EvaThumber/Config/Config.php:            if (array_key_exists($key, $this->data)) {
storage/EvaThumber/src/EvaThumber/Config/Config.php:                    $this->data[] = $value;
storage/EvaThumber/src/EvaThumber/Config/Config.php:                } elseif ($value instanceof self && $this->data[$key] instanceof self) {
storage/EvaThumber/src/EvaThumber/Config/Config.php:                    $this->data[$key]->merge($value);
storage/EvaThumber/src/EvaThumber/Config/Config.php:                        $this->data[$key] = new static($value->toArray(), $this->allowModifications);
storage/EvaThumber/src/EvaThumber/Config/Config.php:                        $this->data[$key] = $value;
storage/EvaThumber/src/EvaThumber/Config/Config.php:                    $this->data[$key] = new static($value->toArray(), $this->allowModifications);
storage/EvaThumber/src/EvaThumber/Config/Config.php:                    $this->data[$key] = $value;
storage/EvaThumber/src/EvaThumber/Config/Config.php:                $this->count++;
storage/EvaThumber/src/EvaThumber/Config/Config.php:        $this->allowModifications = false;
storage/EvaThumber/src/EvaThumber/Config/Config.php:        foreach ($this->data as $value) {
storage/EvaThumber/src/EvaThumber/Config/Config.php:        return !$this->allowModifications;
storage/EvaThumber/src/EvaThumber/Config/StandardConfig.php:                $this->{$setter}($value);
storage/EvaThumber/src/EvaThumber/Config/StandardConfig.php:                $this->setOption($key, $value);
storage/EvaThumber/src/EvaThumber/Config/StandardConfig.php:        return $this->options;
storage/EvaThumber/src/EvaThumber/Config/StandardConfig.php:        $this->options[$option] = $value;
storage/EvaThumber/src/EvaThumber/Config/StandardConfig.php:        if (array_key_exists($option, $this->options)) {
storage/EvaThumber/src/EvaThumber/Config/StandardConfig.php:            return $this->options[$option];
storage/EvaThumber/src/EvaThumber/Config/StandardConfig.php:        return array_key_exists($option, $this->options);
storage/EvaThumber/src/EvaThumber/Config/StandardConfig.php:        $this->optionString = $optionString;
storage/EvaThumber/src/EvaThumber/Config/StandardConfig.php:        return $this->optionString;
storage/EvaThumber/src/EvaThumber/Config/StandardConfig.php:        return $this->options;
storage/EvaThumber/src/EvaThumber/Config/StandardConfig.php:            return $this->setOption($key, $value);
storage/EvaThumber/src/EvaThumber/Config/StandardConfig.php:            return $this->getOption($key);
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('http://localhost/abc.php', $url->getCurrentUrl());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('https://abc:8080/', $url->getCurrentUrl());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('http://localhost/EvaThumber/?foo=bar&aaa=bbb', $url->getUrlString());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('http', $url->getScheme());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('localhost', $url->getHost());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('foo=bar&aaa=bbb', $url->getQuery());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlString());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getScheme());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getHost());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getQuery());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('/EvaThumber/index.php', $url->getUrlScriptName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('/EvaThumber/index.php', $url->getUrlScriptName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('/index.php', $url->getUrlScriptName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlScriptName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlScriptName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('foo', $url->getUrlScriptName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals(false, $url->getUrlRewriteEnabled());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals(true, $url->getUrlRewriteEnabled());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals(true, $url->getUrlRewriteEnabled());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('/EvaThumber/index.php', $url->getUrlRewritePath());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('/EvaThumber', $url->getUrlRewritePath());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlRewritePath());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlRewritePath());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('/thumb/d/demo.jpg', $url->getUrlImagePath());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('/EvaThumber/thumb/d/demo.jpg', $url->getUrlImagePath());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('thumb', $url->getUrlPrefix());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('thumb', $url->getUrlPrefix());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlPrefix());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlPrefix());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('thumb', $url->getUrlPrefix());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('index.php', $url->getUrlPrefix());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('d', $url->getUrlKey());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('d', $url->getUrlKey());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlKey());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlKey());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlKey());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlKey());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('d', $url->getUrlKey());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('d', $url->getUrlKey());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getImagePath());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('/foo', $url->getImagePath());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('/foo/bar', $url->getImagePath());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getImagePath());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('/foo', $url->getImagePath());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('demo,w_100.jpg', $url->getUrlImageName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlImageName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlImageName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getUrlImageName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('demo.jpg', $url->getImageName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->getImageName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('demo.jpg', $url->getImageName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('demo.jpg', $url->getImageName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('demo....jpg', $url->getImageName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('demo.jpg', $url->getImageName());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->toString());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('', $url->toString());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('http://localhost/thumb/d/foo/bar/demo,w_200.jpg', $url->toString());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('http://localhost', $url->toString());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals('http://localhost/thumb/d/foo/bar/demo,w_200.jpg', $url->toString());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals(false, $url->isValid());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals(false, $url->isValid());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals(false, $url->isValid());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals(false, $url->isValid());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals(false, $url->isValid());
storage/EvaThumber/tests/EvaThumberTest/UrlTest.php:        $this->assertEquals(true, $url->isValid());
storage/EvaThumber/src/EvaThumber/Filesystem.php:        $this->mkdir(dirname($targetFile));
storage/EvaThumber/src/EvaThumber/Filesystem.php:        foreach ($this->toIterator($dirs) as $dir) {
storage/EvaThumber/src/EvaThumber/Filesystem.php:        foreach ($this->toIterator($files) as $file) {
storage/EvaThumber/src/EvaThumber/Filesystem.php:        foreach ($this->toIterator($files) as $file) {
storage/EvaThumber/src/EvaThumber/Filesystem.php:        $files = iterator_to_array($this->toIterator($files));
storage/EvaThumber/src/EvaThumber/Filesystem.php:                $this->remove(new \FilesystemIterator($file));
storage/EvaThumber/src/EvaThumber/Filesystem.php:        foreach ($this->toIterator($files) as $file) {
storage/EvaThumber/src/EvaThumber/Filesystem.php:                $this->chmod(new \FilesystemIterator($file), $mode, $umask, true);
storage/EvaThumber/src/EvaThumber/Filesystem.php:        foreach ($this->toIterator($files) as $file) {
storage/EvaThumber/src/EvaThumber/Filesystem.php:                $this->chown(new \FilesystemIterator($file), $user, true);
storage/EvaThumber/src/EvaThumber/Filesystem.php:        foreach ($this->toIterator($files) as $file) {
storage/EvaThumber/src/EvaThumber/Filesystem.php:                $this->chgrp(new \FilesystemIterator($file), $group, true);
storage/EvaThumber/src/EvaThumber/Filesystem.php:            $this->mirror($originDir, $targetDir);
storage/EvaThumber/src/EvaThumber/Filesystem.php:        $this->mkdir(dirname($targetDir));
storage/EvaThumber/src/EvaThumber/Filesystem.php:                $this->remove($targetDir);
storage/EvaThumber/src/EvaThumber/Filesystem.php:        if ($this->exists($targetDir) && isset($options['delete']) && $options['delete']) {
storage/EvaThumber/src/EvaThumber/Filesystem.php:                if (!$this->exists($origin)) {
storage/EvaThumber/src/EvaThumber/Filesystem.php:                    $this->remove($file);
storage/EvaThumber/src/EvaThumber/Filesystem.php:                    $this->copy($file, $target, isset($options['override']) ? $options['override'] : false);
storage/EvaThumber/src/EvaThumber/Filesystem.php:                    $this->mkdir($target);
storage/EvaThumber/src/EvaThumber/Filesystem.php:                    $this->symlink($file, $target);
storage/EvaThumber/src/EvaThumber/Filesystem.php:                    $this->mkdir($target);
storage/EvaThumber/src/EvaThumber/Filesystem.php:                    $this->copy($file, $target, isset($options['override']) ? $options['override'] : false);
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(100, $params->getWidth());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(200, $params->getWidth());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(100, $params->getHeight());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(200, $params->getHeight());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(100, $params->getRotate());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(200, $params->getRotate());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(1, $params->getRotate());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('filename', $params->getFilename());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('fill', $params->getCrop());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(100, $params->getWidth());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(200, $params->getHeight());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(90, $params->getRotate());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(80, $params->getQuality());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('picasa', $params->getDummy());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('gray', $params->getFilter());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('jpg', $params->getExtension());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('filename', $params->getFilename());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(100, $params->getCrop());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(50, $params->getGravity());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(0, $params->getX());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(1, $params->getY());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(70, $params->getPercent());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('jpg', $params->getExtension());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(200, $params->getWidth());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(100, $params->getHeight());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(200, $params->getWidth());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(100, $params->getHeight());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(100, $params->getWidth());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(50, $params->getHeight());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(200, $params->getWidth());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals(100, $params->getHeight());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('abc.png', $params->toString());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('abc.png', $params->toString());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('filename.jpg', $params->toString());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('filename.jpg', $params->toString());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('filename.jpg', $params->toString());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('filename,h_49,w_99.jpg', $params->toString());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('filename,w_100.jpg', $params->toString());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('filename,h_100.jpg', $params->toString());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('filename,c_fill,h_50,w_100.jpg', $params->toString());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('filename.jpg', $params->toString());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('filename.jpg', $params->toString());
storage/EvaThumber/tests/EvaThumberTest/ParametersTest.php:        $this->assertEquals('filename,c_100,x_10,y_100.jpg', $params->toString());
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->all = array(
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->numericData = array(
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->menuData1 = array(
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->toCombineA = array(
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->toCombineB = array(
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->leadingdot = array('.test' => 'dot-test');
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->invalidkey = array(' ' => 'test', ''=>'test2');
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->all, false);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('all', $config->hostname);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('live', $config->db->name);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('multi', $config->one->two->three);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertNull($config->nonexistent); // property doesn't exist
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->all, false);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertFalse(isset($config->notarealkey));
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue(isset($config->hostname)); // top level
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue(isset($config->db->name)); // one level down
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->all, true);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('thisname', $config->name);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('anothername', $config->name);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('multi', $config->one->two->three);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('anothername', $config->one->two->three);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('yet', $config->does->not->exist);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->setExpectedException('EvaThumber\Exception\RuntimeException', 'Config is read only');
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->all);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->setExpectedException('EvaThumber\Exception\RuntimeException', 'Config is read only');
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->all);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $data = new Config($this->numericData);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('test', $data->{1});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals(34, $data->{0});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $data = new Config($this->menuData1);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals(3, count($data->button));
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $data = new Config($this->toCombineB);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:            new Config($this->toCombineA)
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals(count($data->toArray()), $data->count());
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->all);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertContains('key = name, value = thisname', $var);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertContains('key = host, value = 127.0.0.1', $var);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->menuData1);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertContains('key = L1, value = button1-1', $var);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->all);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertContains('Array', $contents);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertContains('[hostname] => all', $contents);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertContains('[user] => username', $contents);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->setExpectedException('EvaThumber\Exception\RuntimeException', 'Config is read only');
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->all);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertSame(array(), $form_config->controls->visible->attribs->toArray());
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue(count($config) === count($configArray));
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:                $this->assertTrue($value === false);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:                $this->assertTrue($value === 'someValue');
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue($count === 4);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->leadingdot);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertContains('dot-test', $array['.test']);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->invalidkey);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertContains('test', $array[' ']);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertContains('test', $array['']);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->all);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue($value === 'default');
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue($config->notThere === null);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->all, false);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue(isset($config->hostname)); // top level
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->setExpectedException('EvaThumber\Exception\InvalidArgumentException', 'is read only');
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->all, true);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue(isset($config->hostname));
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue(isset($config->db->name));
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertFalse(isset($config->hostname));
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertFalse(isset($config->db->name));
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $configA = new Config($this->toCombineA);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $configB = new Config($this->toCombineB);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals(3, $configA->foo);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals(2, $configA->bar);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('bar', $configA->text);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertInstanceOf('\EvaThumber\Config\Config', $configA->numerical);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('first', $configA->numerical->{0});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('second', $configA->numerical->{1});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertInstanceOf('\EvaThumber\Config\Config', $configA->numerical->{2});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('third', $configA->numerical->{2}->{0});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals(null, $configA->numerical->{2}->{1});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('fourth', $configA->numerical->{3});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('fifth', $configA->numerical->{4});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertInstanceOf('\EvaThumber\Config\Config', $configA->numerical->{5});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('sixth', $configA->numerical->{5}->{0});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals(null, $configA->numerical->{5}->{1});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertInstanceOf('\EvaThumber\Config\Config', $configA->misaligned);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('foo', $configA->misaligned->{2});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('bar', $configA->misaligned->{3});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('baz', $configA->misaligned->{4});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals(null, $configA->misaligned->{0});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertInstanceOf('\EvaThumber\Config\Config', $configA->mixed);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('bar', $configA->mixed->foo);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertSame(false, $configA->mixed->{0});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertSame(null, $configA->mixed->{1});
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertSame(null, $configA->replaceAssoc);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertSame(true, $configA->replaceNumerical);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->all, true);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('thisname', $config['name']);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('anothername', $config['name']);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('multi', $config['one']['two']['three']);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue(isset($config['hostname']));
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue(isset($config['db']['name']));
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertFalse(isset($config['hostname']));
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertFalse(isset($config['db']['name']));
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->numericData, true);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals($bacon, $config[2]);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals($poem, $config[3]->toArray());
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals($config->toArray(), $configData);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertInstanceOf('stdClass', $config->a);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertInstanceOf('stdClass', $config->b->c);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertInstanceOf('stdClass', $config->b->d);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->setExpectedException('EvaThumber\Exception\RuntimeException', 'Config is read only');
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals(count($config), 3);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals(count($config), 2);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('override', $newConfig->key->nested, '$newConfig is not overridden');
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('parent', $parent->key->nested, '$parent has been overridden');
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('no', $config2->key2);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('no', $config2->key->nested);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('first', $keyList[0]);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('second', $keyList[1]);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('third', $keyList[2]);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('first', $keyList[0]);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('second', $keyList[1]);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('third', $keyList[2]);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('first', $keyList[0]);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('second', $keyList[1]);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals('third', $keyList[2]);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $config = new Config($this->all, true);
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue($config->isReadOnly());
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue($config->one->isReadOnly(), 'First level children are writable');
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertTrue($config->one->two->isReadOnly(), 'Second level children are writable');
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals(1, $config->current());
storage/EvaThumber/tests/EvaThumberTest/Config/ConfigTest.php:        $this->assertEquals(1, $config->current());
common/widgets/ExportMenu.php:        $this->_provider = clone($this->dataProvider);
common/widgets/ExportMenu.php:        if(! $this->enablePagination){
common/widgets/ExportMenu.php:            $this->_provider->pagination = $this->enablePagination;
common/widgets/ExportMenu.php:        if ($this->initProvider) {
common/widgets/ExportMenu.php:            $this->_provider->prepare(true);
common/widgets/ExportMenu.php:        $this->styleOptions = ArrayHelper::merge($this->_defaultStyleOptions, $this->styleOptions);
common/widgets/ExportMenu.php:        $this->filterModel = null;
common/widgets/ExportMenu.php:        $this->setDefaultExportConfig();
common/widgets/ExportMenu.php:        $this->exportConfig = ArrayHelper::merge($this->_defaultExportConfig, $this->exportConfig);
common/widgets/ExportMenu.php:        if (empty($this->filename)) {
common/widgets/ExportMenu.php:            $this->filename = Yii::t('kvexport', 'grid-export');
common/widgets/ExportMenu.php:        $target = $this->target == self::TARGET_POPUP ? 'kvExportFullDialog' : $this->target;
common/widgets/ExportMenu.php:        $id = ArrayHelper::getValue($this->exportFormOptions, 'id', $this->options['id'] . '-form');
common/widgets/ExportMenu.php:        Html::addCssClass($this->exportFormOptions, 'kv-export-full-form');
common/widgets/ExportMenu.php:        $this->exportFormOptions += [
common/widgets/CodeViewer.php:        $this->registerClientScript();
common/widgets/CodeViewer.php:        return $this->render('code-viewer', [
common/widgets/CodeViewer.php:            'code' => $this->code,
common/widgets/CodeViewer.php:        $view = $this->view;
common/widgets/CodeViewer.php:        // $options = empty($this->clientOptions) ? '' : Json::encode($this->clientOptions);
common/widgets/CodeViewer.php:        //  jQuery('{$this->targetItemSelector}').shoping({$options});
common/widgets/ViewInfo.php:        $view = $this->getView();
common/widgets/ViewInfo.php:        $this->on(static::EVENT_AFTER_RUN,function(WidgetEvent $event)use($widget){
common/widgets/ViewInfo.php:        return  'viewinfo'.md5(__CLASS__).$this->getId() ;
common/widgets/ViewInfo.php:        // echo count($this->controllerViewFiles) ;
common/widgets/ViewInfo.php:        // return 'hi' .join(',', $this->controllerViewFiles) ;
common/widgets/ViewInfo.php:        $id = $this->getDomId() ;
common/behaviors/DateTimeCastBehavior.php:        $mapping = array_flip($this->attributesMapping);
common/behaviors/DateTimeCastBehavior.php:        foreach ($this->attributesMapping as $logicAttr => $physicalAttr) {
common/behaviors/DateTimeCastBehavior.php:        foreach ($this->attributesMapping as $uiAttribute => $modelAttribute) {
common/behaviors/DateTimeCastBehavior.php:            $this->_attributes[$uiAttribute] = null;
common/behaviors/DateTimeCastBehavior.php:        return array_key_exists($name, $this->_attributes); // 如果存在 Null 也算哦 注意跟底下两个的区别
common/behaviors/DateTimeCastBehavior.php:        // return isset($this->_attributes[$name]) || in_array($name, $this->attributes(), true);
common/behaviors/DateTimeCastBehavior.php:        return isset($this->_attributes[$name]) ? $this->_attributes[$name] : null;
common/behaviors/DateTimeCastBehavior.php:        if ($this->hasAttribute($name)) {
common/behaviors/DateTimeCastBehavior.php:            $this->_attributes[$name] = $value;
common/behaviors/DateTimeCastBehavior.php:        return parent::canGetProperty($name, $checkVars) || $this->hasAttribute($name);;
common/behaviors/DateTimeCastBehavior.php:        return parent::canSetProperty($name, $checkVars) || $this->hasAttribute($name);;
common/behaviors/DateTimeCastBehavior.php:        foreach ($this->_attributes as $attr => $val) {
common/behaviors/DateTimeCastBehavior.php:            $ownerAttr = $this->attributesMapping[$attr];
common/behaviors/DateTimeCastBehavior.php:                // $date = date_create_from_format('Y-m-d',$this->uiStartedAt) ;
common/behaviors/DateTimeCastBehavior.php:                    $this->owner->{$ownerAttr} = $date->getTimestamp();;
common/behaviors/DateTimeCastBehavior.php:                $this->owner->{$ownerAttr}  = 0 ;
common/behaviors/DateTimeCastBehavior.php:        foreach ($this->_attributes as $attr => $val) {
common/behaviors/DateTimeCastBehavior.php:            $ownerAttr = $this->attributesMapping[$attr];
common/behaviors/DateTimeCastBehavior.php:            $ownerAttrVal = $this->owner->{$ownerAttr};
common/behaviors/DateTimeCastBehavior.php:                $this->{$attr} = date('Y-m-d', $ownerAttrVal);
common/behaviors/DateTimeCastBehavior.php:                $this->{$attr} = '';  // FIXME 通过空串 需要对应到db中的null  :  $this->started_at = new DbExpression('null');
common/behaviors/DateTimeCastBehavior.php:        if ($this->hasAttribute($name)) {
common/behaviors/DateTimeCastBehavior.php:            return $this->_attributes[$name];
common/behaviors/DateTimeCastBehavior.php:        if ($this->hasAttribute($name)) {
common/behaviors/DateTimeCastBehavior.php:            $this->_attributes[$name] = $value;
common/behaviors/DateTimeCastBehavior.php:        if ($this->hasAttribute($name)) {
common/behaviors/DateTimeCastBehavior.php:            return isset($this->_attributes[$name]);
common/behaviors/DateTimeCastBehavior.php:        if ($this->hasAttribute($name)) {
common/behaviors/DateTimeCastBehavior.php:            unset($this->_attributes[$name]);
common/behaviors/UploadBehavior1.php:        if ($this->attribute === null) {
common/behaviors/UploadBehavior1.php:        if ($this->path === null) {
common/behaviors/UploadBehavior1.php:        if ($this->url === null) {
common/behaviors/UploadBehavior1.php:        $model = $this->owner;
common/behaviors/UploadBehavior1.php:        if (in_array($model->scenario, $this->scenarios)) {
common/behaviors/UploadBehavior1.php:            if($this->multiple === true){
common/behaviors/UploadBehavior1.php:                if (($files = $model->getAttribute($this->attribute)) && is_array($files)  ) {
common/behaviors/UploadBehavior1.php:                    $this->_files = $files;
common/behaviors/UploadBehavior1.php:                    if ($this->instanceByName === true) {
common/behaviors/UploadBehavior1.php:                        $this->_files = UploadedFile::getInstancesByName($this->attribute);
common/behaviors/UploadBehavior1.php:                        $this->_files = UploadedFile::getInstances($model, $this->attribute);
common/behaviors/UploadBehavior1.php:               $isUploadedFiles = array_reduce($this->_files,function ($pre, $current){
common/behaviors/UploadBehavior1.php:                    // $this->_file->name = $this->getFileName($this->_file); // 名称净化
common/behaviors/UploadBehavior1.php:                    $model->setAttribute($this->attribute, $this->_files);
common/behaviors/UploadBehavior1.php:                if (($file = $model->getAttribute($this->attribute)) instanceof UploadedFile) {
common/behaviors/UploadBehavior1.php:                    $this->_file = $file;
common/behaviors/UploadBehavior1.php:                    if ($this->instanceByName === true) {
common/behaviors/UploadBehavior1.php:                        $this->_file = UploadedFile::getInstanceByName($this->attribute);
common/behaviors/UploadBehavior1.php:                        $this->_file = UploadedFile::getInstance($model, $this->attribute);
common/behaviors/UploadBehavior1.php:                if ($this->_file instanceof UploadedFile) {
common/behaviors/UploadBehavior1.php:                    $this->_file->name = $this->getFileName($this->_file);
common/behaviors/UploadBehavior1.php:                    $model->setAttribute($this->attribute, $this->_file);
common/behaviors/UploadBehavior1.php:        $model = $this->owner;
common/behaviors/UploadBehavior1.php:        if (in_array($model->scenario, $this->scenarios)) {
common/behaviors/UploadBehavior1.php:            if ($this->_file instanceof UploadedFile) {
common/behaviors/UploadBehavior1.php:                if (!$model->getIsNewRecord() && $model->isAttributeChanged($this->attribute)) {
common/behaviors/UploadBehavior1.php:                    if ($this->unlinkOnSave === true) {
common/behaviors/UploadBehavior1.php:                        $this->delete($this->attribute, true);
common/behaviors/UploadBehavior1.php:                $model->setAttribute($this->attribute, $this->_file->name);
common/behaviors/UploadBehavior1.php:                unset($model->{$this->attribute});
common/behaviors/UploadBehavior1.php:            if (!$model->getIsNewRecord() && $model->isAttributeChanged($this->attribute)) {
common/behaviors/UploadBehavior1.php:                if ($this->unlinkOnSave === true) {
common/behaviors/UploadBehavior1.php:                    $this->delete($this->attribute, true);
common/behaviors/UploadBehavior1.php:        if ($this->_file instanceof UploadedFile) {
common/behaviors/UploadBehavior1.php:            $path = $this->getUploadPath($this->attribute);
common/behaviors/UploadBehavior1.php:                $this->save($this->_file, $path);
common/behaviors/UploadBehavior1.php:                $this->afterUpload();
common/behaviors/UploadBehavior1.php:        $attribute = $this->attribute;
common/behaviors/UploadBehavior1.php:        if ($this->unlinkOnDelete && $attribute) {
common/behaviors/UploadBehavior1.php:            $this->delete($attribute);
common/behaviors/UploadBehavior1.php:        $model = $this->owner;
common/behaviors/UploadBehavior1.php:        $path = $this->resolvePath($this->path);
common/behaviors/UploadBehavior1.php:        $model = $this->owner;
common/behaviors/UploadBehavior1.php:        $url = $this->resolvePath($this->url);
common/behaviors/UploadBehavior1.php:        return $this->_file;
common/behaviors/UploadBehavior1.php:        $model = $this->owner;
common/behaviors/UploadBehavior1.php:        return $file->saveAs($path, $this->deleteTempFile);
common/behaviors/UploadBehavior1.php:        $path = $this->getUploadPath($attribute, $old);
common/behaviors/UploadBehavior1.php:        if ($this->generateNewName) {
common/behaviors/UploadBehavior1.php:            return $this->generateNewName instanceof Closure
common/behaviors/UploadBehavior1.php:                ? call_user_func($this->generateNewName, $file)
common/behaviors/UploadBehavior1.php:                : $this->generateFileName($file);
common/behaviors/UploadBehavior1.php:            return $this->sanitize($file->name);
common/behaviors/UploadBehavior1.php:        $this->owner->trigger(self::EVENT_AFTER_UPLOAD);
common/behaviors/UploadBehavior.php:        if ($this->attribute === null) {
common/behaviors/UploadBehavior.php:        if ($this->path === null) {
common/behaviors/UploadBehavior.php:        if ($this->url === null) {
common/behaviors/UploadBehavior.php:        if (empty($this->fs)) {
common/behaviors/UploadBehavior.php:            $this->fs = Yii::$app->get('fs'); // TODO 后期改为可配置 先写死
common/behaviors/UploadBehavior.php:            if ($this->fs == null) {
common/behaviors/UploadBehavior.php:        $model = $this->owner;
common/behaviors/UploadBehavior.php:        if (in_array($model->scenario, $this->scenarios)) {
common/behaviors/UploadBehavior.php:            if ($this->multiple === true) {
common/behaviors/UploadBehavior.php:                if (($files = $model->getAttribute($this->attribute)) && is_array($files) && $isUploadedFiles($files)) {
common/behaviors/UploadBehavior.php:                    $this->_files = $files;
common/behaviors/UploadBehavior.php:                    if ($this->instanceByName === true) {
common/behaviors/UploadBehavior.php:                        $this->_files = UploadedFile::getInstancesByName($this->attribute);
common/behaviors/UploadBehavior.php:                        $this->_files = UploadedFile::getInstances($model, $this->attribute);
common/behaviors/UploadBehavior.php:                if ($isUploadedFiles($this->_files)) {
common/behaviors/UploadBehavior.php:                    // $this->_file->name = $this->getFileName($this->_file); // 名称净化 对于数组形式需要遍历来设置的！
common/behaviors/UploadBehavior.php:                    // $model->setAttribute($this->attribute, $this->_files);
common/behaviors/UploadBehavior.php:                    $model->{$this->attribute} = $this->_files;
common/behaviors/UploadBehavior.php:                if (($file = $model->getAttribute($this->attribute)) instanceof UploadedFile) {
common/behaviors/UploadBehavior.php:                    $this->_file = $file;
common/behaviors/UploadBehavior.php:                    if ($this->instanceByName === true) {
common/behaviors/UploadBehavior.php:                        $this->_file = UploadedFile::getInstanceByName($this->attribute);
common/behaviors/UploadBehavior.php:                        $this->_file = UploadedFile::getInstance($model, $this->attribute);
common/behaviors/UploadBehavior.php:                if ($this->_file instanceof UploadedFile) {
common/behaviors/UploadBehavior.php:                    //  $this->_file->name = $this->getFileName($this->_file);
common/behaviors/UploadBehavior.php:                    $model->setAttribute($this->attribute, $this->_file);
common/behaviors/UploadBehavior.php:        if ($this->multiple == true) {
common/behaviors/UploadBehavior.php:            $model = $this->owner;
common/behaviors/UploadBehavior.php:            if (in_array($model->scenario, $this->scenarios)) {
common/behaviors/UploadBehavior.php:                // $fs = $this->fs;
common/behaviors/UploadBehavior.php:                foreach ($this->_files as $uploadedFile) {
common/behaviors/UploadBehavior.php:                    $uploadedPaths[] = $this->uploadFile($uploadedFile);
common/behaviors/UploadBehavior.php:                $this->beforeARSave($uploadedPaths);
common/behaviors/UploadBehavior.php:            $this->handleSingleUpload();
common/behaviors/UploadBehavior.php:        $fs = $this->fs;
common/behaviors/UploadBehavior.php:        $relativeFilePath = $this->generateFileName($uploadedFile);
common/behaviors/UploadBehavior.php:        $relativeFilePath = $this->genDirName() . DIRECTORY_SEPARATOR . $relativeFilePath;
common/behaviors/UploadBehavior.php:        $model = $this->owner;
common/behaviors/UploadBehavior.php:        if (in_array($model->scenario, $this->scenarios)) {
common/behaviors/UploadBehavior.php:            if ($this->_file instanceof UploadedFile) {
common/behaviors/UploadBehavior.php:                $relativeFilePath = $this->uploadFile($this->_file);
common/behaviors/UploadBehavior.php:                 if (!$model->getIsNewRecord() && $model->isAttributeChanged($this->attribute)) {
common/behaviors/UploadBehavior.php:                     if ($this->unlinkOnSave === true) {
common/behaviors/UploadBehavior.php:                         $this->delete($this->attribute, true);
common/behaviors/UploadBehavior.php:                 $model->setAttribute($this->attribute, $this->_file->name);
common/behaviors/UploadBehavior.php:                if (!$model->getIsNewRecord() && $model->isAttributeChanged($this->attribute)) {
common/behaviors/UploadBehavior.php:                    if ($this->unlinkOnSave === true) {
common/behaviors/UploadBehavior.php:                        $oldPath = $model->getOldAttribute($this->attribute);
common/behaviors/UploadBehavior.php:                        $fs = $this->fs;
common/behaviors/UploadBehavior.php:                        // $this->delete($this->attribute, true);
common/behaviors/UploadBehavior.php:                $model->setAttribute($this->attribute, $relativeFilePath);
common/behaviors/UploadBehavior.php:                unset($model->{$this->attribute});
common/behaviors/UploadBehavior.php:            if (!$model->getIsNewRecord() && $model->isAttributeChanged($this->attribute)) {
common/behaviors/UploadBehavior.php:                if ($this->unlinkOnSave === true) {
common/behaviors/UploadBehavior.php:                    $this->delete($this->attribute, true);
common/behaviors/UploadBehavior.php:        if ($this->_file instanceof UploadedFile) {
common/behaviors/UploadBehavior.php:            $path = $this->getUploadPath($this->attribute);
common/behaviors/UploadBehavior.php:                $this->save($this->_file, $path);
common/behaviors/UploadBehavior.php:                $this->afterUpload();
common/behaviors/UploadBehavior.php:        $attribute = $this->attribute;
common/behaviors/UploadBehavior.php:        if ($this->unlinkOnDelete && $attribute) {
common/behaviors/UploadBehavior.php:            $this->delete($attribute);
common/behaviors/UploadBehavior.php:        $model = $this->owner;
common/behaviors/UploadBehavior.php:        $path = $this->resolvePath($this->path);
common/behaviors/UploadBehavior.php:        $model = $this->owner;
common/behaviors/UploadBehavior.php:        $url = $this->resolvePath($this->url);
common/behaviors/UploadBehavior.php:        return $this->_file;
common/behaviors/UploadBehavior.php:        $model = $this->owner;
common/behaviors/UploadBehavior.php:        return $file->saveAs($path, $this->deleteTempFile);
common/behaviors/UploadBehavior.php:        $path = $this->getUploadPath($attribute, $old);
common/behaviors/UploadBehavior.php:        $model = $this->owner;
common/behaviors/UploadBehavior.php:        if ($this->fs->has($path)) {
common/behaviors/UploadBehavior.php:            $this->fs->delete($path);
common/behaviors/UploadBehavior.php:        if ($this->generateNewName) {
common/behaviors/UploadBehavior.php:            return $this->generateNewName instanceof Closure
common/behaviors/UploadBehavior.php:                ? call_user_func($this->generateNewName, $file)
common/behaviors/UploadBehavior.php:                : $this->generateFileName($file);
common/behaviors/UploadBehavior.php:            return $this->sanitize($file->name);
common/behaviors/UploadBehavior.php:        $this->owner->trigger(self::EVENT_AFTER_UPLOAD);
common/behaviors/UploadBehavior.php:        $event->model = $this->owner;
common/behaviors/UploadBehavior.php:        $event->attribute = $this->attribute;
common/behaviors/UploadBehavior.php:        $this->owner->trigger(self::EVENT_AFTER_UPLOAD, $event);
common/behaviors/UploadBehavior.php:        $event->model = $this->owner;
common/behaviors/UploadBehavior.php:        $event->attribute = $this->attribute;
common/behaviors/UploadBehavior.php:        $this->owner->trigger(self::EVENT_AFTER_UPLOAD, $event);
common/lib/Thrift/Base/TBase.php:          $this->$var = $vals[$var];
common/lib/Thrift/Base/TBase.php:    $this->__construct(get_object_vars($this));
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_readMap($key, $kspec, $input);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_readList($key, $kspec, $input, false);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_readList($key, $kspec, $input, true);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_readMap($val, $vspec, $input);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_readList($val, $vspec, $input, false);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_readList($val, $vspec, $input, true);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_readMap($elem, $espec, $input);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_readList($elem, $espec, $input, false);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_readList($elem, $espec, $input, true);
common/lib/Thrift/Base/TBase.php:            $xfer += $input->$func($this->$var);
common/lib/Thrift/Base/TBase.php:              $this->$var = new $class();
common/lib/Thrift/Base/TBase.php:              $xfer += $this->$var->read($input);
common/lib/Thrift/Base/TBase.php:              $xfer += $this->_readMap($this->$var, $fspec, $input);
common/lib/Thrift/Base/TBase.php:              $xfer += $this->_readList($this->$var, $fspec, $input, false);
common/lib/Thrift/Base/TBase.php:              $xfer += $this->_readList($this->$var, $fspec, $input, true);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_writeMap($key, $kspec, $output);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_writeList($key, $kspec, $output, false);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_writeList($key, $kspec, $output, true);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_writeMap($val, $vspec, $output);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_writeList($val, $vspec, $output, false);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_writeList($val, $vspec, $output, true);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_writeMap($elem, $espec, $output);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_writeList($elem, $espec, $output, false);
common/lib/Thrift/Base/TBase.php:          $xfer += $this->_writeList($elem, $espec, $output, true);
common/lib/Thrift/Base/TBase.php:      if ($this->$var !== null) {
common/lib/Thrift/Base/TBase.php:          $xfer += $output->$func($this->$var);
common/lib/Thrift/Base/TBase.php:            $xfer += $this->$var->write($output);
common/lib/Thrift/Base/TBase.php:            $xfer += $this->_writeMap($this->$var, $fspec, $output);
common/lib/Thrift/Base/TBase.php:            $xfer += $this->_writeList($this->$var, $fspec, $output, false);
common/lib/Thrift/Base/TBase.php:            $xfer += $this->_writeList($this->$var, $fspec, $output, true);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Thumbsize              = 160;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Thumbheight            = 0;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Thumbwidth             = 0;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Percentage             = false;		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Framewidth             = 0;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Inflate                = false;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Shadow                 = false;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Binder                 = false;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Binderspacing          = 8;		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Backgroundcolor        = '#FFFFFF';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Framecolor             = '#FFFFFF';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Watermarkpng           = '';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Watermarkposition      = '100% 100%';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Watermarktransparency  = '70';	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Quality                = '90';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Chmodlevel             = '0755';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Thumblocation          = '';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Thumbsaveas            = '';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Thumbprefix            = '';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Clipcorner             = array(0,15,0,1,1,1,0);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Ageimage               = array(0,10,80);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Cropimage              = array(0,0,20,20,20,20);		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Borderpng              = '';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Copyrighttext          = '';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Copyrightposition      = '0% 95%';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Copyrightfonttype      = '';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Copyrightfontsize      = 2;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Copyrighttextcolor     = '';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Addtext                = array(0,'Text','50% 50%','',2,'#000000');
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Rotate                 = 0;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Fliphorizontal         = false;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Flipvertical           = false;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Square                 = false;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Applyfilter            = false;		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Filter                 = array(0,0,0,0,1,0,0,0,0);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Divisor                = 1;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Offset                 = 0;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Blur                   = false;		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Sharpen                = false;	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Edge                   = false;	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Emboss                 = false;	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Mean                   = false;			
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Croprotate             = false;	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Perspective            = array(0,0,30);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Perspectivethumb       = array(0,1,20);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Shading                = array(0,70,65,0);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Shadingcolor           = '#000000';		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Mirror                 = array(0,20,100,40,2);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Mirrorcolor            = '#FFFFFF';		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Negative               = false;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Colorreplace           = array(0,'#000000','#FFFFFF',30);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Pixelscramble          = array(0,3,1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Greyscale              = false;		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Brightness             = array(0,30);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Contrast               = array(0,30);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Gamma                  = array(0,1.5);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Palette                = array(0,6);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Colorize               = array(0,100,0,0,0);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Pixelate               = array(0,3);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Medianfilter           = false;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Twirlfx                = array(0,20,0);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Ripplefx               = array(0,5,15,5,5);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Lakefx                 = array(0,15,80);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Waterdropfx            = array(0,1.2,400,40);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Maketransparent        = array(0,0,'#FFFFFF',30);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Keeptransparency       = false;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Thumbfilename          = '';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Polaroid               = false;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Polaroidtext           = '';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Polaroidfonttype       = '';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Polaroidfontsize       = '30';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Polaroidtextcolor      = '#000000';
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Polaroidframecolor     = '#FFFFFF';		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Displacementmap        = array(0,'',0,0,0,50,50);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Displacementmapthumb   = array(0,'',0,0,0,25,25);		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if(is_resource($this->im)) imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if(is_resource($this->thumb)) imagedestroy($this->thumb);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if(is_resource($this->newimage)) imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$this->image=$name;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$this->thumbmaker();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$this->savethumb();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->image=$filename;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->thumbmaker();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($output=="file") {$this->savethumb();} else {$this->displaythumb();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if($this->loadimage()) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Cropimage[0]>0) {$this->cropimage();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Addtext[0]>0) {$this->addtext();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Medianfilter) {$this->medianfilter();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Greyscale) {$this->greyscale();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Brightness[0]==1) {$this->brightness();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Contrast[0]==1) {$this->contrast();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Gamma[0]==1) {$this->gamma();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Palette[0]==1) {$this->palette();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Colorize[0]==1) {$this->colorize();}			
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Colorreplace[0]==1) {$this->colorreplace();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Pixelscramble[0]==1) {$this->pixelscramble();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Pixelate[0]==1) {$this->pixelate();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Ageimage[0]==1) {$this->ageimage();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Fliphorizontal) {$this->rotateorflip(0,1);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Flipvertical) {$this->rotateorflip(0,-1);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Watermarkpng!='') {$this->addpngwatermark();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Clipcorner[0]==1) {$this->clipcornersstraight();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Clipcorner[0]==2) {$this->clipcornersround();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if (intval($this->Rotate)<>0 && !$this->Croprotate) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				switch(intval($this->Rotate)) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:						$this->rotateorflip(1,0);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:						$this->rotateorflip(1,0);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:						$this->rotateorflip(1,0);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:						$this->rotateorflip(1,0);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:						$this->freerotate();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Croprotate) {$this->croprotate();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Sharpen) {$this->sharpen();}			
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Blur) {$this->blur();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Edge) {$this->edge();}			
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Emboss) {$this->emboss();}	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Mean) {$this->mean();}	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Applyfilter) {$this->filter();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Twirlfx[0]==1) {$this->twirlfx();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Ripplefx[0]==1) {$this->ripplefx();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Lakefx[0]==1) {$this->lakefx();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Waterdropfx[0]==1) {$this->waterdropfx();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Displacementmap[0]==1) {$this->displace();}			
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Negative) {$this->negative();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Shading[0]==1) {$this->shading();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Polaroid) {$this->polaroid();}			
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Perspective[0]==1) {$this->perspective();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->createemptythumbnail();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Binder) {$this->addbinder();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Shadow) {$this->addshadow();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagecopyresampled($this->thumb,$this->im,$this->Framewidth*($this->frame_offset-1),$this->Framewidth,0,0,$this->thumbx-($this->frame_offset*$this->Framewidth)-$this->shadow_offset,$this->thumby-2*$this->Framewidth-$this->shadow_offset,imagesx($this->im),imagesy($this->im));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Borderpng!='') {$this->addpngborder();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Copyrighttext!='') {$this->addcopyright();}		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Square) {$this->square();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Mirror[0]==1) {$this->mirror();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Displacementmapthumb[0]==1) {$this->displacethumb();}			
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Perspectivethumb[0]==1) {$this->perspectivethumb();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Maketransparent[0]==1) {$this->maketransparent();}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if (is_resource($this->im)) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		} else if (file_exists($this->image)) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->size=GetImageSize($this->image);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			switch($this->size[2]) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					if (imagetypes() & IMG_GIF) {$this->im=imagecreatefromgif($this->image);return true;} else {$this->invalidimage('No GIF support');return false;}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					if (imagetypes() & IMG_JPG) {$this->im=imagecreatefromjpeg($this->image);$this->Keeptransparency=false;return true;} else {$this->invalidimage('No JPG support');return false;}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					if (imagetypes() & IMG_PNG) {$this->im=imagecreatefrompng($this->image);return true;} else {$this->invalidimage('No PNG support');return false;}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$this->invalidimage('Filetype ?????');
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->invalidimage('File not found');
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->thumb=imagecreate(80,75);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$black=imagecolorallocate($this->thumb,0,0,0);$yellow=imagecolorallocate($this->thumb,255,255,0);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagefilledrectangle($this->thumb,0,0,80,75,imagecolorallocate($this->thumb,255,0,0));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagerectangle($this->thumb,0,0,79,74,$black);imageline($this->thumb,0,20,80,20,$black);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagefilledrectangle($this->thumb,1,1,78,19,$yellow);imagefilledrectangle($this->thumb,27,35,52,60,$yellow);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagerectangle($this->thumb,26,34,53,61,$black);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imageline($this->thumb,27,35,52,60,$black);imageline($this->thumb,52,35,27,60,$black);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagestring($this->thumb,1,5,5,$message,$black);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$thumbsize=$this->Thumbsize;$thumbwidth=$this->Thumbwidth;$thumbheight=$this->Thumbheight;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Percentage) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($thumbwidth>0) {$thumbwidth=floor(($thumbwidth/100)*$this->size[0]);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($thumbheight>0) {$thumbheight=floor(($thumbheight/100)*$this->size[1]);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->size[0]>$this->size[1])
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$thumbsize=floor(($thumbsize/100)*$this->size[0]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$thumbsize=floor(($thumbsize/100)*$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if (!$this->Inflate) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($thumbsize>$this->size[0] && $thumbsize>$this->size[1]) {$thumbsize=max($this->size[0],$this->size[1]);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($thumbheight>$this->size[1]) {$thumbheight=$this->size[1];}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($thumbwidth>$this->size[0]) {$thumbwidth=$this->size[0];}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Binder) {$this->frame_offset=3;$this->bind_offset=4;} else {$this->frame_offset=2;$this->bind_offset=0;}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Shadow) {$this->shadow_offset=3;} else {$this->shadow_offset=0;}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->thumb=imagecreatetruecolor($this->Framewidth*$this->frame_offset+$thumbwidth+$this->shadow_offset,$this->Framewidth*2+$thumbheight+$this->shadow_offset);		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->thumb=imagecreatetruecolor($this->Framewidth*$this->frame_offset+ceil($this->size[0]/($this->size[1]/$thumbheight))+$this->shadow_offset,$this->Framewidth*2+$thumbheight+$this->shadow_offset);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->thumb=imagecreatetruecolor($this->Framewidth*$this->frame_offset+$thumbwidth+$this->shadow_offset,$this->Framewidth*2+ceil($this->size[1]/($this->size[0]/$thumbwidth))+$this->shadow_offset);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$x1=$this->Framewidth*$this->frame_offset+$thumbsize+$this->shadow_offset;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$x2=$this->Framewidth*$this->frame_offset+ceil($this->size[0]/($this->size[1]/$thumbsize))+$this->shadow_offset;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$y1=$this->Framewidth*2+ceil($this->size[1]/($this->size[0]/$thumbsize))+$this->shadow_offset;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$y2=$this->Framewidth*2+$thumbsize+$this->shadow_offset;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->size[0]>$this->size[1]) {$this->thumb=imagecreatetruecolor($x1,$y1);} else {$this->thumb=imagecreatetruecolor($x2,$y2);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->thumbx=imagesx($this->thumb);$this->thumby=imagesy($this->thumb);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Keeptransparency) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$alpha=imagecolortransparent($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$color=imagecolorsforindex($this->im,$alpha);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$color_index=imagecolorallocate($this->thumb,$color['red'],$color['green'],$color['blue']);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagefill($this->thumb,0,0,$color_index);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagecolortransparent($this->thumb,$color_index);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagealphablending($this->thumb,false);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$color_alpha=imagecolorallocatealpha($this->im,0,0,0,127);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagefill($this->thumb,0,0,$color_alpha);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagesavealpha($this->thumb,true);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagealphablending($this->thumb,true);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagefilledrectangle($this->thumb,0,0,$this->thumbx,$this->thumby,imagecolorallocate($this->thumb,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));			
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Polaroid)
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagefilledrectangle($this->thumb,$this->bind_offset,0,$this->thumbx-$this->shadow_offset,$this->thumby-$this->shadow_offset,imagecolorallocate($this->thumb,hexdec(substr($this->Polaroidframecolor,1,2)),hexdec(substr($this->Polaroidframecolor,3,2)),hexdec(substr($this->Polaroidframecolor,5,2))));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagefilledrectangle($this->thumb,$this->bind_offset,0,$this->thumbx-$this->shadow_offset,$this->thumby-$this->shadow_offset,imagecolorallocate($this->thumb,hexdec(substr($this->Framecolor,1,2)),hexdec(substr($this->Framecolor,3,2)),hexdec(substr($this->Framecolor,5,2))));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Thumbsaveas!='') {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			switch (strtolower($this->Thumbsaveas)) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$this->image=substr($this->image,0,strrpos($this->image,'.')).".".$this->Thumbsaveas;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$this->size[2]=1;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$this->image=substr($this->image,0,strrpos($this->image,'.')).".".$this->Thumbsaveas;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$this->size[2]=2;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$this->image=substr($this->image,0,strrpos($this->image,'.')).".".$this->Thumbsaveas;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$this->size[2]=2;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$this->image=substr($this->image,0,strrpos($this->image,'.')).".".$this->Thumbsaveas;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$this->size[2]=3;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Thumbfilename!='') {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->image=$this->Thumbfilename;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		switch($this->size[2]) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagegif($this->thumb,$this->Thumblocation.$this->Thumbprefix.basename($this->image));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagejpeg($this->thumb,$this->Thumblocation.$this->Thumbprefix.basename($this->image),$this->Quality);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagepng($this->thumb,$this->Thumblocation.$this->Thumbprefix.basename($this->image));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Chmodlevel!='') {chmod($this->Thumblocation.$this->Thumbprefix.basename($this->image),octdec($this->Chmodlevel));}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->thumb);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		switch($this->size[2]) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				header("Content-type: image/gif");imagegif($this->thumb);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				header("Content-type: image/jpeg");imagejpeg($this->thumb,NULL,$this->Quality);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				header("Content-type: image/png");imagepng($this->thumb);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->thumb);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if (file_exists($this->Watermarkpng)) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->newimage=imagecreatefrompng($this->Watermarkpng);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$wpos=explode(' ',str_replace('%','',$this->Watermarkposition));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagecopymerge($this->im,$this->newimage,min(max(imagesx($this->im)*($wpos[0]/100)-0.5*imagesx($this->newimage),0),imagesx($this->im)-imagesx($this->newimage)),min(max(imagesy($this->im)*($wpos[1]/100)-0.5*imagesy($this->newimage),0),imagesy($this->im)-imagesy($this->newimage)),0,0,imagesx($this->newimage),imagesy($this->newimage),intval($this->Watermarktransparency));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$gray=imagecolorallocate($this->thumb,192,192,192);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$middlegray=imagecolorallocate($this->thumb,158,158,158);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$darkgray=imagecolorallocate($this->thumb,128,128,128);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagerectangle($this->thumb,$this->bind_offset,0,$this->thumbx-4,$this->thumby-4,$gray);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imageline($this->thumb,$this->bind_offset,$this->thumby-3,$this->thumbx,$this->thumby-3,$darkgray);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imageline($this->thumb,$this->thumbx-3,0,$this->thumbx-3,$this->thumby,$darkgray);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imageline($this->thumb,$this->bind_offset+2,$this->thumby-2,$this->thumbx,$this->thumby-2,$middlegray);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imageline($this->thumb,$this->thumbx-2,2,$this->thumbx-2,$this->thumby,$middlegray);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imageline($this->thumb,$this->bind_offset+2,$this->thumby-1,$this->thumbx,$this->thumby-1,$gray);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imageline($this->thumb,$this->thumbx-1,2,$this->thumbx-1,$this->thumby,$gray);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$clipsize=$this->Clipcorner[1];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->size[0]>$this->size[1])
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$clipsize=floor($this->size[0]*(intval($clipsize)/100));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$clipsize=floor($this->size[1]*(intval($clipsize)/100));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$bgcolor=imagecolorallocate($this->im,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2)));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Clipcorner[2]) {$random1=rand(0,1);$random2=rand(0,1);$random3=rand(0,1);$random4=rand(0,1);} else {$random1=1;$random2=1;$random3=1;$random4=1;}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				if ($this->Clipcorner[3] && $random1) {imageline($this->im,0,$i,$clipsize-$i,$i,$bgcolor);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				if ($this->Clipcorner[4] && $random2) {imageline($this->im,0,$this->size[1]-$i-1,$clipsize-$i,$this->size[1]-$i-1,$bgcolor);}				
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				if ($this->Clipcorner[5] && $random3) {imageline($this->im,$this->size[0]-$clipsize+$i,$i,$this->size[0]+$clipsize-$i,$i,$bgcolor);}				
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				if ($this->Clipcorner[6] && $random4) {imageline($this->im,$this->size[0]-$clipsize+$i,$this->size[1]-$i-1,$this->size[0]+$clipsize-$i,$this->size[1]-$i-1,$bgcolor);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$clipsize=floor($this->size[0]*($this->Clipcorner[1]/100));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$points_br=array($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$points_tr=array($this->size[0],0);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$points_bl=array(0,$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$bgcolor=imagecolorallocate($this->im,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2)));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			array_push($points_tr,$this->size[0]-$clipsize+$x);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			array_push($points_br,$this->size[0]-$clipsize+$x);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			array_push($points_br,$this->size[1]-$clipsize+$y);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			array_push($points_bl,$this->size[1]-$clipsize+$y);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		array_push($points_br,$this->size[0]-$clipsize,$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		array_push($points_tr,$this->size[0]-$clipsize,0);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		array_push($points_bl,$clipsize,$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Clipcorner[2]) {$random1=rand(0,1);$random2=rand(0,1);$random3=rand(0,1);$random4=rand(0,1);} else {$random1=1;$random2=1;$random3=1;$random4=1;}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Clipcorner[3] && $random1) {imagefilledpolygon($this->im,$points_tl,count($points_tl)/2,$bgcolor);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Clipcorner[4] && $random2) {imagefilledpolygon($this->im,$points_bl,count($points_bl)/2,$bgcolor);}		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Clipcorner[5] && $random3) {imagefilledpolygon($this->im,$points_tr,count($points_tr)/2,$bgcolor);}		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Clipcorner[6] && $random4) {imagefilledpolygon($this->im,$points_br,count($points_br)/2,$bgcolor);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagetruecolortopalette($this->im,1,256);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$col=imagecolorsforindex($this->im,$c);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$noise=rand(-$this->Ageimage[1],$this->Ageimage[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Ageimage[2]>0) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$r=$new_col+$this->Ageimage[2]+$noise;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$g=floor($new_col+$this->Ageimage[2]/1.86+$noise);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$b=floor($new_col+$this->Ageimage[2]/-3.48+$noise);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagecolorset($this->im,$c,max(0,min(255,$r)),max(0,min(255,$g)),max(0,min(255,$b)));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if (file_exists($this->Borderpng)) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$borderim=imagecreatefrompng($this->Borderpng);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagecopyresampled($this->thumb,$borderim,$this->bind_offset,0,0,0,$this->thumbx-$this->shadow_offset-$this->bind_offset,$this->thumby-$this->shadow_offset,imagesx($borderim),imagesy($borderim));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if (intval($this->Binderspacing)<4) {$this->Binderspacing=4;}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$spacing=floor($this->thumby/$this->Binderspacing)-2;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$offset=floor(($this->thumby-($spacing*$this->Binderspacing))/2);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$gray=imagecolorallocate($this->thumb,192,192,192);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$middlegray=imagecolorallocate($this->thumb,158,158,158);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$darkgray=imagecolorallocate($this->thumb,128,128,128);		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$black=imagecolorallocate($this->thumb,0,0,0);	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$white=imagecolorallocate($this->thumb,255,255,255);		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		for ($i=$offset;$i<=$offset+$spacing*$this->Binderspacing;$i+=$this->Binderspacing) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagefilledrectangle($this->thumb,8,$i-2,10,$i+2,$black);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imageline($this->thumb,11,$i-1,11,$i+1,$darkgray);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imageline($this->thumb,8,$i-2,10,$i-2,$darkgray);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imageline($this->thumb,8,$i+2,10,$i+2,$darkgray);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagefilledrectangle($this->thumb,0,$i-1,8,$i+1,$gray);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imageline($this->thumb,0,$i,8,$i,$white);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imageline($this->thumb,0,$i-1,0,$i+1,$gray);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagesetpixel($this->thumb,0,$i,$darkgray);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Copyrightfonttype=='') {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$widthx=imagefontwidth($this->Copyrightfontsize)*strlen($this->Copyrighttext);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$heighty=imagefontheight($this->Copyrightfontsize);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$fontwidth=imagefontwidth($this->Copyrightfontsize);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$dimensions=imagettfbbox($this->Copyrightfontsize,0,$this->Copyrightfonttype,$this->Copyrighttext);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$dimensions=imagettfbbox($this->Copyrightfontsize,0,$this->Copyrightfonttype,'W');
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$cpos=explode(' ',str_replace('%','',$this->Copyrightposition));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$cposx=floor(min(max($this->thumbx*($cpos[0]/100)-0.5*$widthx,$fontwidth),$this->thumbx-$widthx-0.5*$fontwidth));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$cposy=floor(min(max($this->thumby*($cpos[1]/100)-0.5*$heighty,$heighty),$this->thumby-$heighty*1.5));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$cposy=$this->thumby-10;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Copyrighttextcolor=='') {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$indexis=ImageColorAt($this->thumb,$i,$cposy+0.5*$heighty);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$rgbarray=ImageColorsForIndex($this->thumb,$indexis);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				if ($this->Copyrightfonttype=='')
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					imagestring($this->thumb,$this->Copyrightfontsize,$cposx,$cposy,$this->Copyrighttext,imagecolorallocate($this->thumb,0,0,0));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					imagettftext($this->thumb,$this->Copyrightfontsize,0,$cposx,$cposy,imagecolorallocate($this->thumb,0,0,0),$this->Copyrightfonttype,$this->Copyrighttext);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				if ($this->Copyrightfonttype=='')
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					imagestring($this->thumb,$this->Copyrightfontsize,$cposx,$cposy,$this->Copyrighttext,imagecolorallocate($this->thumb,255,255,255));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					imagettftext($this->thumb,$this->Copyrightfontsize,0,$cposx,$cposy,imagecolorallocate($this->thumb,255,255,255),$this->Copyrightfonttype,$this->Copyrighttext);				
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Copyrightfonttype=='')
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagestring($this->thumb,$this->Copyrightfontsize,$cposx,$cposy,$this->Copyrighttext,imagecolorallocate($this->thumb,hexdec(substr($this->Copyrighttextcolor,1,2)),hexdec(substr($this->Copyrighttextcolor,3,2)),hexdec(substr($this->Copyrighttextcolor,5,2))));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagettftext($this->thumb,$this->Copyrightfontsize,0,$cposx,$cposy,imagecolorallocate($this->thumb,hexdec(substr($this->Copyrighttextcolor,1,2)),hexdec(substr($this->Copyrighttextcolor,3,2)),hexdec(substr($this->Copyrighttextcolor,5,2))),$this->Copyrightfonttype,$this->Copyrighttext);				
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Addtext[3]=='') {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$widthx=imagefontwidth($this->Addtext[4])*strlen($this->Addtext[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$heighty=imagefontheight($this->Addtext[4]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$fontwidth=imagefontwidth($this->Addtext[4]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$dimensions=imagettfbbox($this->Addtext[4],0,$this->Addtext[3],$this->Addtext[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$dimensions=imagettfbbox($this->Addtext[4],0,$this->Addtext[3],'W');
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$cpos=explode(' ',str_replace('%','',$this->Addtext[2]));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$cposx=floor(min(max($this->size[0]*($cpos[0]/100)-0.5*$widthx,$fontwidth),$this->size[0]-$widthx-0.5*$fontwidth));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$cposy=floor(min(max($this->size[1]*($cpos[1]/100)-0.5*$heighty,$heighty),$this->size[1]-$heighty*1.5));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$cposy=$this->size[1]-10;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Addtext[3]=='')
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagestring($this->im,$this->Addtext[4],$cposx,$cposy,$this->Addtext[1],imagecolorallocate($this->im,hexdec(substr($this->Addtext[5],1,2)),hexdec(substr($this->Addtext[5],3,2)),hexdec(substr($this->Addtext[5],5,2))));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagettftext($this->im,$this->Addtext[4],0,$cposx,$cposy,imagecolorallocate($this->im,hexdec(substr($this->Addtext[5],1,2)),hexdec(substr($this->Addtext[5],3,2)),hexdec(substr($this->Addtext[5],5,2))),$this->Addtext[3],$this->Addtext[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$angle=$this->Rotate;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$centerx=floor($this->size[0]/2);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$centery=floor($this->size[1]/2);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$maxsizex=ceil(abs(cos(deg2rad($angle))*$this->size[0])+abs(sin(deg2rad($angle))*$this->size[1]));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$maxsizey=ceil(abs(sin(deg2rad($angle))*$this->size[0])+abs(cos(deg2rad($angle))*$this->size[1]));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->newimage=imagecreatetruecolor($maxsizex,$maxsizey);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagefilledrectangle($this->newimage,0,0,$maxsizex,$maxsizey,imagecolorallocate($this->newimage,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));			
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$newcenterx=imagesx($this->newimage)/2;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$newcentery=imagesy($this->newimage)/2;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($px=0;$px<imagesx($this->newimage);$px++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				for ($py=0;$py<imagesy($this->newimage);$py++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					    imagecopy($this->newimage,$this->im,$px,$py,$centerx+$vectorx,$centery+$vectory,1,1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->im=imagecreatetruecolor(imagesx($this->newimage),imagesy($this->newimage));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagecopy($this->im,$this->newimage,0,0,0,0,imagesx($this->newimage),imagesy($this->newimage));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->size[0]=imagesx($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->size[1]=imagesy($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->im=imagerotate($this->im,-$this->Rotate,imagecolorallocate($this->im,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->newimage=imagecreatetruecolor($this->size[1],$this->size[0]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if (intval($this->Rotate)>0 || $flip>0) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($px=0;$px<$this->size[0];$px++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					for ($py=0;$py<$this->size[1];$py++) {imagecopy($this->newimage,$this->im,$this->size[1]-$py-1,$px,$px,$py,1,1);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					for ($py=0;$py<$this->size[1];$py++) {imagecopy($this->newimage,$this->im,$this->size[0]-$px-1,$py,$px,$py,1,1);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($px=0;$px<$this->size[0];$px++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					for ($py=0;$py<$this->size[1];$py++) {imagecopy($this->newimage,$this->im,$py,$this->size[0]-$px-1,$px,$py,1,1);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					for ($py=0;$py<$this->size[1];$py++) {imagecopy($this->newimage,$this->im,$px,$this->size[1]-$py-1,$px,$py,1,1);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->im=imagecreatetruecolor(imagesx($this->newimage),imagesy($this->newimage));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,imagesx($this->newimage),imagesy($this->newimage));			
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->size[0]=imagesx($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->size[1]=imagesy($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Cropimage[1]==0) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$crop2=floor($this->size[0]*($this->Cropimage[2]/100));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$crop3=floor($this->size[0]*($this->Cropimage[3]/100));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$crop4=floor($this->size[1]*($this->Cropimage[4]/100));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$crop5=floor($this->size[1]*($this->Cropimage[5]/100));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Cropimage[1]==1) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$crop2=$this->Cropimage[2];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$crop3=$this->Cropimage[3];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$crop4=$this->Cropimage[4];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$crop5=$this->Cropimage[5];		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Cropimage[0]==2) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$crop2=floor($this->size[0]/2)-$crop2;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$crop3=floor($this->size[0]/2)-$crop3;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$crop4=floor($this->size[1]/2)-$crop4;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$crop5=floor($this->size[1]/2)-$crop5;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Cropimage[0]==3) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->size[0]>$this->size[1]) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$crop2=$crop3=floor(($this->size[0]-$this->size[1])/2);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$crop4=$crop5=floor(($this->size[1]-$this->size[0])/2);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0]-$crop2-$crop3,$this->size[1]-$crop4-$crop5);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($crop5<0) {$crop5=0;imagefilledrectangle($this->newimage,0,0,imagesx($this->newimage),imagesy($this->newimage),imagecolorallocate($this->newimage,hexdec(substr($this->Polaroidframecolor,1,2)),hexdec(substr($this->Polaroidframecolor,3,2)),hexdec(substr($this->Polaroidframecolor,5,2))));}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->newimage,$this->im,0,0,$crop2,$crop4,$this->size[0]-$crop2-$crop3,$this->size[1]-$crop4-$crop5);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->im=imagecreatetruecolor(imagesx($this->newimage),imagesy($this->newimage));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,imagesx($this->newimage),imagesy($this->newimage));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->size[0]=imagesx($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->size[1]=imagesy($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$squaresize=max($this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($squaresize,$squaresize);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagefilledrectangle($this->newimage,0,0,$squaresize,$squaresize,imagecolorallocate($this->newimage,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$centerx=floor(($squaresize-$this->thumbx)/2);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$centery=floor(($squaresize-$this->thumby)/2);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->newimage,$this->thumb,$centerx,$centery,0,0,$this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->thumb);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->thumb=imagecreatetruecolor($squaresize,$squaresize);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->thumb,$this->newimage,0,0,0,0,$squaresize,$squaresize);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imageconvolution($this->im,array(array($this->Filter[0],$this->Filter[1],$this->Filter[2]), array($this->Filter[3],$this->Filter[4],$this->Filter[5]),array($this->Filter[6],$this->Filter[7],$this->Filter[8])),$this->Divisor,$this->Offset);	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$a11=$this->rgbpixel($x-1,$y-1);$a12=$this->rgbpixel($x,$y-1);$a13=$this->rgbpixel($x+1,$y-1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$a21=$this->rgbpixel($x-1,$y);$a22=$this->rgbpixel($x,$y);$a23=$this->rgbpixel($x+1,$y);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$a31=$this->rgbpixel($x-1,$y+1);$a32=$this->rgbpixel($x,$y+1);$a33=$this->rgbpixel($x+1,$y+1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$newpixel[0]+=$a11['red']*$this->Filter[0]+$a12['red']*$this->Filter[1]+$a13['red']*$this->Filter[2];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$newpixel[1]+=$a11['green']*$this->Filter[0]+$a12['green']*$this->Filter[1]+$a13['green']*$this->Filter[2];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$newpixel[2]+=$a11['blue']*$this->Filter[0]+$a12['blue']*$this->Filter[1]+$a13['blue']*$this->Filter[2];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$newpixel[0]+=$a21['red']*$this->Filter[3]+$a22['red']*$this->Filter[4]+$a23['red']*$this->Filter[5];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$newpixel[1]+=$a21['green']*$this->Filter[3]+$a22['green']*$this->Filter[4]+$a23['green']*$this->Filter[5];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$newpixel[2]+=$a21['blue']*$this->Filter[3]+$a22['blue']*$this->Filter[4]+$a23['blue']*$this->Filter[5];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$newpixel[0]+=$a31['red']*$this->Filter[6]+$a32['red']*$this->Filter[7]+$a33['red']*$this->Filter[8];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$newpixel[1]+=$a31['green']*$this->Filter[6]+$a32['green']*$this->Filter[7]+$a33['green']*$this->Filter[8];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$newpixel[2]+=$a31['blue']*$this->Filter[6]+$a32['blue']*$this->Filter[7]+$a33['blue']*$this->Filter[8];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$newpixel[0]=max(0,min(255,intval($newpixel[0]/$this->Divisor)+$this->Offset));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$newpixel[1]=max(0,min(255,intval($newpixel[1]/$this->Divisor)+$this->Offset));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$newpixel[2]=max(0,min(255,intval($newpixel[2]/$this->Divisor)+$this->Offset));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newpixel[0],$newpixel[1],$newpixel[2],$a11['alpha']));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$a11=$this->rgbpixel($x-1,$y-1);$a12=$this->rgbpixel($x,$y-1);$a13=$this->rgbpixel($x+1,$y-1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$a21=$this->rgbpixel($x-1,$y);$a22=$this->rgbpixel($x,$y);$a23=$this->rgbpixel($x+1,$y);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$a31=$this->rgbpixel($x-1,$y+1);$a32=$this->rgbpixel($x,$y+1);$a33=$this->rgbpixel($x+1,$y+1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newred[4],$newgreen[4],$newblue[4],$a22['alpha']));		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($x>=$this->size[0]) {$x=$this->size[0]-1;}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($y>=$this->size[1]) {$y=$this->size[1]-1;}		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$oldfilter=$this->Filter;$olddivisor=$this->Divisor;$oldoffset=$this->Offset;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Filter  = array(1,2,1,2,4,2,1,2,1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Divisor = 16;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Offset  = 0;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->filter();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Filter  = $oldfilter;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Divisor = $olddivisor;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Offset  = $oldoffset;		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$oldfilter=$this->Filter;$olddivisor=$this->Divisor;$oldoffset=$this->Offset;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Filter  = array(-1,-1,-1,-1,16,-1,-1,-1,-1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Divisor = 8;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Offset  = 0;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->filter();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Filter  = $oldfilter;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Divisor = $olddivisor;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Offset  = $oldoffset;		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$oldfilter=$this->Filter;$olddivisor=$this->Divisor;$oldoffset=$this->Offset;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Filter  = array(-1,-1,-1,-1,8,-1,-1,-1,-1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Divisor = 1;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Offset  = 127;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->filter();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Filter  = $oldfilter;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Divisor = $olddivisor;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Offset  = $oldoffset;		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$oldfilter=$this->Filter;$olddivisor=$this->Divisor;$oldoffset=$this->Offset;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Filter  = array(2,0,0,0,-1,0,0,0,-1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Divisor = 1;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Offset  = 127;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->filter();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Filter  = $oldfilter;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Divisor = $olddivisor;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Offset  = $oldoffset;		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$oldfilter=$this->Filter;$olddivisor=$this->Divisor;$oldoffset=$this->Offset;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Filter  = array(1,1,1,1,1,1,1,1,1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Divisor = 9;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Offset  = 0;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->filter();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Filter  = $oldfilter;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Divisor = $olddivisor;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Offset  = $oldoffset;		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagefilledrectangle($this->newimage,0,0,$this->size[0],$this->size[1],imagecolorallocate($this->newimage,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));			
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Perspective[1]==0 || $this->Perspective[1]==1) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:                        $gradient=($this->size[1]-($this->size[1]*(max(100-$this->Perspective[2],1)/100)))/$this->size[0];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		        for ($c=0;$c<$this->size[0];$c++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			        if ($this->Perspective[1]==0) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				    $length=$this->size[1]-(floor($gradient*$c));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				    $length=$this->size[1]-(floor($gradient*($this->size[0]-$c)));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagecopyresampled($this->newimage,$this->im,$c,floor(($this->size[1]-$length)/2),$c,0,1,$length,1,$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:                        $gradient=($this->size[0]-($this->size[0]*(max(100-$this->Perspective[2],1)/100)))/$this->size[1];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		        for ($c=0;$c<$this->size[1];$c++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			        if ($this->Perspective[1]==2) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				    $length=$this->size[0]-(floor($gradient*$c));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				    $length=$this->size[0]-(floor($gradient*($this->size[1]-$c)));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagecopyresampled($this->newimage,$this->im,floor(($this->size[0]-$length)/2),$c,0,$c,$length,1,$this->size[0],1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagefilledrectangle($this->newimage,0,0,$this->thumbx,$this->thumby,imagecolorallocate($this->newimage,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));			
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Perspectivethumb[1]==0 || $this->Perspectivethumb[1]==1) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:                        $gradient=($this->thumby-($this->thumby*(max(100-$this->Perspectivethumb[2],1)/100)))/$this->thumbx;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		        for ($c=0;$c<$this->thumbx;$c++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			        if ($this->Perspectivethumb[1]==0) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				    $length=$this->thumby-(floor($gradient*$c));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				    $length=$this->thumby-(floor($gradient*($this->thumbx-$c)));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagecopyresampled($this->newimage,$this->thumb,$c,floor(($this->thumby-$length)/2),$c,0,1,$length,1,$this->thumby);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:                        $gradient=($this->thumbx-($this->thumbx*(max(100-$this->Perspectivethumb[2],1)/100)))/$this->thumby;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		        for ($c=0;$c<$this->thumby;$c++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			        if ($this->Perspectivethumb[1]==2) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				    $length=$this->thumbx-(floor($gradient*$c));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				    $length=$this->thumbx-(floor($gradient*($this->thumby-$c)));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagecopyresampled($this->newimage,$this->thumb,floor(($this->thumbx-$length)/2),$c,0,$c,$length,1,$this->thumbx,1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->thumb,$this->newimage,0,0,0,0,$this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Shading[3]==0 || $this->Shading[3]==1) {		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->newimage=imagecreatetruecolor(1,$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagefilledrectangle($this->newimage,0,0,1,$this->size[1],imagecolorallocate($this->newimage,hexdec(substr($this->Shadingcolor,1,2)),hexdec(substr($this->Shadingcolor,3,2)),hexdec(substr($this->Shadingcolor,5,2))));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->newimage=imagecreatetruecolor($this->size[0],1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagefilledrectangle($this->newimage,0,0,$this->size[0],1,imagecolorallocate($this->newimage,hexdec(substr($this->Shadingcolor,1,2)),hexdec(substr($this->Shadingcolor,3,2)),hexdec(substr($this->Shadingcolor,5,2))));			
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Shading[3]==0) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$shadingstrength=$this->Shading[1]/($this->size[0]*($this->Shading[2]/100));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($c=$this->size[0]-floor(($this->size[0]*($this->Shading[2]/100)));$c<$this->size[0];$c++) { 
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$opacity=floor($shadingstrength*($c-($this->size[0]-floor(($this->size[0]*($this->Shading[2]/100)))))); 
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagecopymerge($this->im,$this->newimage,$c,0,0,0,1,$this->size[1],max(min($opacity,100),0));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		} else if ($this->Shading[3]==1) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$shadingstrength=$this->Shading[1]/($this->size[0]*($this->Shading[2]/100));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($c=0;$c<floor($this->size[0]*($this->Shading[2]/100));$c++) { 
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$opacity=floor($this->Shading[1]-($c*$shadingstrength));			 
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagecopymerge($this->im,$this->newimage,$c,0,0,0,1,$this->size[1],max(min($opacity,100),0));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		} else if ($this->Shading[3]==2) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$shadingstrength=$this->Shading[1]/($this->size[1]*($this->Shading[2]/100));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($c=0;$c<floor($this->size[1]*($this->Shading[2]/100));$c++) { 
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$opacity=floor($this->Shading[1]-($c*$shadingstrength));			 
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagecopymerge($this->im,$this->newimage,0,$c,0,0,$this->size[0],1,max(min($opacity,100),0));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$shadingstrength=$this->Shading[1]/($this->size[1]*($this->Shading[2]/100));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($c=$this->size[1]-floor(($this->size[1]*($this->Shading[2]/100)));$c<$this->size[1];$c++) { 
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$opacity=floor($shadingstrength*($c-($this->size[1]-floor(($this->size[1]*($this->Shading[2]/100)))))); 
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagecopymerge($this->im,$this->newimage,0,$c,0,0,$this->size[0],1,max(min($opacity,100),0));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$bottom=floor(($this->Mirror[3]/100)*$this->thumby)+$this->Mirror[4];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->thumbx,$this->thumby+$bottom);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagefilledrectangle($this->newimage,0,0,$this->thumbx,$this->thumby+$bottom,imagecolorallocate($this->newimage,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->newimage,$this->thumb,0,0,0,0,$this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->thumb);$this->thumb=imagecreatetruecolor($this->thumbx,$this->thumby+$bottom);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->thumb,$this->newimage,0,0,0,0,$this->thumbx,$this->thumby+$bottom);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);$this->thumbx=imagesx($this->thumb);$this->thumby=imagesy($this->thumb);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		for ($px=0;$px<$this->thumbx;$px++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($py=$this->thumby-($bottom*2)+$this->Mirror[4];$py<($this->thumby-$bottom);$py++) {imagecopy($this->thumb,$this->thumb,$px,$this->thumby-($py-($this->thumby-($bottom*2)))-1+$this->Mirror[4],$px,$py,1,1);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->thumbx,1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagefilledrectangle($this->newimage,0,0,$this->thumbx,1,imagecolorallocate($this->newimage,hexdec(substr($this->Mirrorcolor,1,2)),hexdec(substr($this->Mirrorcolor,3,2)),hexdec(substr($this->Mirrorcolor,5,2))));	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$shadingstrength=($this->Mirror[2]-$this->Mirror[1])/$bottom;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		for ($c=$this->thumby-$bottom;$c<$this->thumby;$c++) { 
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$opacity=$this->Mirror[1]+floor(($bottom-($this->thumby-$c))*$shadingstrength);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagecopymerge($this->thumb,$this->newimage,0,$c,0,0,$this->thumbx,1,max(min($opacity,100),0));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagefilter($this->im,IMG_FILTER_NEGATE);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					imagesetpixel($this->im,$x,$y,imagecolorallocatealpha($this->im,255-($pixel >> 16 & 0xFF),255-($pixel >> 8 & 0xFF),255-($pixel & 0xFF),$pixel >> 24 & 0xFF));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$red=hexdec(substr($this->Colorreplace[1],1,2));$green=hexdec(substr($this->Colorreplace[1],3,2));$blue=hexdec(substr($this->Colorreplace[1],5,2));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$rednew=hexdec(substr($this->Colorreplace[2],1,2));$greennew=hexdec(substr($this->Colorreplace[2],3,2));$bluenew=hexdec(substr($this->Colorreplace[2],5,2));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$tolerance=sqrt(pow($this->Colorreplace[3],2)+pow($this->Colorreplace[3],2)+pow($this->Colorreplace[3],2));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					imagesetpixel($this->im,$x,$y,imagecolorallocatealpha($this->im,$rednew,$greennew,$bluenew,$pixel >> 24 & 0xFF));	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		for ($i=0;$i<$this->Pixelscramble[2];$i++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$newx=$x+rand(-$this->Pixelscramble[1],$this->Pixelscramble[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$newy=$y+rand(-$this->Pixelscramble[1],$this->Pixelscramble[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				if ($newx<0 && $newx>=$this->size[0]) {$newx=$x;}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				if ($newy<0 && $newy>=$this->size[1]) {$newy=$y;}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagecopy($this->newimage,$this->im,$newx,$newy,$x,$y,1,1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagecopy($this->newimage,$this->im,$x,$y,$newx,$newy,1,1);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagefilter($this->im,IMG_FILTER_GRAYSCALE);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					imagesetpixel($this->im,$x,$y,imagecolorallocatealpha($this->im,$grey,$grey,$grey,$pixel >> 24 & 0xFF));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagefilter($this->im,IMG_FILTER_BRIGHTNESS,$this->Brightness[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$redpix=max(0,min(255,($pixel >> 16 & 0xFF)+($this->Brightness[1]/100)*255));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$greenpix=max(0,min(255,($pixel >> 8 & 0xFF)+($this->Brightness[1]/100)*255));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$bluepix=max(0,min(255,($pixel & 0xFF)+($this->Brightness[1]/100)*255));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					imagesetpixel($this->im,$x,$y,imagecolorallocatealpha($this->im,$redpix,$greenpix,$bluepix,$pixel >> 24 & 0xFF));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagefilter($this->im,IMG_FILTER_CONTRAST,-$this->Contrast[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$redpix=max(0,min(255,(((($pixel >> 16 & 0xFF)/255)-0.5)*($this->Contrast[1]/100+1)+0.5)*255));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$greenpix=max(0,min(255,(((($pixel >> 8 & 0xFF)/255)-0.5)*($this->Contrast[1]/100+1)+0.5)*255));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$bluepix=max(0,min(255,(((($pixel & 0xFF)/255)-0.5)*($this->Contrast[1]/100+1)+0.5)*255));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					imagesetpixel($this->im,$x,$y,imagecolorallocatealpha($this->im,$redpix,$greenpix,$bluepix,$pixel >> 24 & 0xFF));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagegammacorrect($this->im,1,$this->Gamma[1]);	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagetruecolortopalette($this->im,false,$this->Palette[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagefilter($this->im,IMG_FILTER_COLORIZE,$this->Colorize[1],$this->Colorize[2],$this->Colorize[3],$this->Colorize[4]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$redpix=max(0,min(255,($pixel >> 16 & 0xFF)+$this->Colorize[1]));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$greenpix=max(0,min(255,($pixel >> 8 & 0xFF)+$this->Colorize[2]));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$bluepix=max(0,min(255,($pixel & 0xFF)+$this->Colorize[3]));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$alpha =max(0,min(127,($pixel >> 24 & 0xFF)+$this->Colorize[4]));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					imagesetpixel($this->im,$x,$y,imagecolorallocatealpha($this->im,$redpix,$greenpix,$bluepix,$alpha));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagefilter($this->im,IMG_FILTER_PIXELATE,$this->Pixelate[1],true);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($y=0;$y<$this->size[1];$y+=$this->Pixelate[1]) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				for ($x=0;$x<$this->size[0];$x+=$this->Pixelate[1]) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					imagefilledrectangle($this->im,$x,$y,$x+$this->Pixelate[1]-1,$y+$this->Pixelate[1]-1,$pixel);	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$ff=$this->rgbpixel($xf,$yf);$cf=$this->rgbpixel($xc,$yf);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$fc=$this->rgbpixel($xf,$yc);$cc=$this->rgbpixel($xc,$yc);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$rotationamount=$this->Twirlfx[1]/1000;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$centerx=floor($this->size[0]/2);$centery=floor($this->size[1]/2);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				if ($this->Twirlfx[2]==0) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$newpix=$this->bilinear($newx,$newy);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newpix['red'],$newpix['green'],$newpix['blue'],$newpix['alpha']));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$wavex=((2*pi())/$this->size[0])*$this->Ripplefx[1];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$wavey=((2*pi())/$this->size[1])*$this->Ripplefx[3];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$newx=$x+$this->Ripplefx[4]*sin($y*$wavey); 
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$newy=$y+$this->Ripplefx[2]*sin($x*$wavex);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$newpix=$this->bilinear($newx,$newy);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newpix['red'],$newpix['green'],$newpix['blue'],$newpix['alpha']));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$ystart=max($this->size[1]-floor($this->size[1]*($this->Lakefx[2]/100)),0);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		    imagecopy($this->newimage,$this->im,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		for ($y=$ystart;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$newy=$y+3*pi()*(1/$this->size[1])*$y*sin(($this->size[1]*($this->Lakefx[1]/100)*($this->size[1]-$y))/$y); 
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$newpix=$this->bilinear($x,$newy);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newpix['red'],$newpix['green'],$newpix['blue'],$newpix['alpha']));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$centerx=floor($this->size[0]/2);$centery=floor($this->size[1]/2);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$amount=$this->Waterdropfx[1]*sin($distance/$this->Waterdropfx[3]*2*pi());
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$amount=$amount*($this->Waterdropfx[2]-$distance)/$this->Waterdropfx[2];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				if ($distance!=0) {$amount=$amount*$this->Waterdropfx[3]/$distance;}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$newpix=$this->bilinear($newx,$newy);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newpix['red'],$newpix['green'],$newpix['blue'],$newpix['alpha']));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$red=hexdec(substr($this->Maketransparent[2],1,2));$green=hexdec(substr($this->Maketransparent[2],3,2));$blue=hexdec(substr($this->Maketransparent[2],5,2));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Maketransparent[3]!=0) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$transparentcolor=imagecolorallocate($this->thumb,$red,$green,$blue);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$tolerance=sqrt(pow($this->Maketransparent[3],2)+pow($this->Maketransparent[3],2)+pow($this->Maketransparent[3],2));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($y=0;$y<$this->thumby;$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				for ($x=0;$x<$this->thumbx;$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					$pixel=ImageColorAt($this->thumb,$x,$y);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:						imagesetpixel($this->thumb,$x,$y,$transparentcolor);	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$transparentcolor=imagecolorallocate($this->thumb,$red,$green,$blue);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecolortransparent($this->thumb,$transparentcolor);	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Maketransparent[1]!=2) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			if ($this->Maketransparent[1]==0) {$this->size[2]=3;} else {$this->size[2]=1;}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$IHDR_chunk = $this->create_chunk('IHDR', pack('NNCCCCC', $IHDR['width'], $IHDR['height'], $IHDR['bits'], $IHDR['color'], $IHDR['compression'], $IHDR['prefilter'], $IHDR['interlacing']));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$acTL_chunk = $this->create_chunk('acTL', pack("NN", count($imageData), 0));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$data = $this->create_fcTL($sequenceNumber, $IHDR['width'], $IHDR['height'], $delay);  
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$fcTL_chunk = $this->create_chunk('fcTL', $data);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$firstFrame = $this->create_chunk('IDAT', $image);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$data = $this->create_fcTL($sequenceNumber, $IHDR['width'], $IHDR['height'], $delay);  
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$fcTL_chunk = $this->create_chunk('fcTL', $data);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$fdAT_chunk = $this->create_chunk('fdAT', $data);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		fwrite($fh, $this->create_chunk('IEND'));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->im=imagecreatetruecolor($width,$height);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->size=array($width,$height,$filetype);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$color=imagecolorallocate($this->im,hexdec(substr($bgcolor,1,2)),hexdec(substr($bgcolor,3,2)),hexdec(substr($bgcolor,5,2)));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagefilledrectangle($this->im,0,0,$width,$height,$color);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->Keeptransparency=true;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagecolortransparent($this->im,$color);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->image=$filename;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->thumbmaker();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		switch($this->size[2]) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagegif($this->thumb);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagejpeg($this->thumb,NULL,$this->Quality);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagepng($this->thumb);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$originalarray=$this->Cropimage;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->size[0]>$this->size[1]) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$cropwidth=floor(($this->size[0]-floor(($this->size[1]/1.05)))/2);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->Cropimage=array(1,1,$cropwidth,$cropwidth,0,-1*floor(0.16*$this->size[1]));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->cropimage();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->Framewidth=floor(0.05*($this->size[1]-2*$cropwidth));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$cropheight=floor(($this->size[1]-floor(($this->size[0]/1.05)))/2);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$bottom=-1*floor(0.16*$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->Cropimage=array(1,1,0,0,$cropheight,$cropheight);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->cropimage();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->Cropimage=array(1,1,0,0,0,$bottom);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->cropimage();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->Framewidth=floor(0.05*$this->size[0]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->Cropimage=$originalarray;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Polaroidtext!='' && $this->Polaroidfonttype!='') {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		  $dimensions=imagettfbbox($this->Polaroidfontsize,0,$this->Polaroidfonttype,$this->Polaroidtext);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$y=$this->size[1]-floor($this->size[1]*0.08)-$heighty;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$x=floor(($this->size[0]-$widthx)/2);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagettftext($this->im,$this->Polaroidfontsize,0,$x,$y,imagecolorallocate($this->im,hexdec(substr($this->Polaroidtextcolor,1,2)),hexdec(substr($this->Polaroidtextcolor,3,2)),hexdec(substr($this->Polaroidtextcolor,5,2))),$this->Polaroidfonttype,$this->Polaroidtext);		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if (file_exists($this->Displacementmap[1])) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$size=GetImageSize($this->Displacementmap[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					if (imagetypes() & IMG_GIF) {$map=imagecreatefromgif($this->Displacementmap[1]);} else {$map=imagecreatetruecolor(100,100);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					if (imagetypes() & IMG_JPG) {$map=imagecreatefromjpeg($this->Displacementmap[1]);} else {$map=imagecreatetruecolor(100,100);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					if (imagetypes() & IMG_PNG) {$map=imagecreatefrompng($this->Displacementmap[1]);} else {$map=imagecreatetruecolor(100,100);}
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if ($this->Displacementmap[2]==0) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$maptmp=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagecopyresampled($maptmp,$map,0,0,0,0,$this->size[0],$this->size[1],$mapxmax,$mapymax);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$map=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagecopy($map,$maptmp,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$mapxmax=$this->size[0];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$mapymax=$this->size[1];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$mapx=$this->Displacementmap[3];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$mapy=$this->Displacementmap[4];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$mapx=$this->Displacementmap[3];
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$mapy=$this->Displacementmap[4];		
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:						$newx=$x+(($redmap-128)*$this->Displacementmap[5])/256;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:						$newy=$y+(($greenmap-128)*$this->Displacementmap[6])/256;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				$newpix=$this->bilinear($newx,$newy);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newpix['red'],$newpix['green'],$newpix['blue'],$newpix['alpha']));	
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:		if (is_resource($this->thumb)) {
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$temparray=$this->Displacementmap;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->im=imagecreatetruecolor($this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagecopy($this->im,$this->thumb,0,0,0,0,$this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->size[0]=$this->thumbx;$this->size[1]=$this->thumby;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->Displacementmap=$this->Displacementmapthumb;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->displace();
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			$this->Displacementmap=$temparray;
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:			imagecopy($this->thumb,$this->im,0,0,0,0,$this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:					chmod($des_image, octdec($this->Chmodlevel));
common/lib/easyphpthumbnail/PHP5/easyphpthumbnail.class.php:				chmod($src_image, octdec($this->Chmodlevel));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Thumbsize              = 160;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Thumbheight            = 0;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Thumbwidth             = 0;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Percentage             = false;		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Framewidth             = 0;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Inflate                = false;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Shadow                 = false;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Binder                 = false;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Binderspacing          = 8;		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Backgroundcolor        = '#FFFFFF';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Framecolor             = '#FFFFFF';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Watermarkpng           = '';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Watermarkposition      = '100% 100%';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Watermarktransparency  = '70';	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Quality                = '90';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Chmodlevel             = '0755';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Thumblocation          = '';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Thumbsaveas            = '';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Thumbprefix            = '';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Clipcorner             = array(0,15,0,1,1,1,0);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Ageimage               = array(0,10,80);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Cropimage              = array(0,0,20,20,20,20);		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Borderpng              = '';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Copyrighttext          = '';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Copyrightposition      = '0% 95%';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Copyrightfonttype      = '';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Copyrightfontsize      = 2;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Copyrighttextcolor     = '';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Addtext                = array(0,'Text','50% 50%','',2,'#000000');
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Rotate                 = 0;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Fliphorizontal         = false;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Flipvertical           = false;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Square                 = false;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Applyfilter            = false;		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Filter                 = array(0,0,0,0,1,0,0,0,0);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Divisor                = 1;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Offset                 = 0;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Blur                   = false;		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Sharpen                = false;	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Edge                   = false;	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Emboss                 = false;	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Mean                   = false;			
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Croprotate             = false;	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Perspective            = array(0,0,30);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Perspectivethumb       = array(0,1,20);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Shading                = array(0,70,65,0);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Shadingcolor           = '#000000';		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Mirror                 = array(0,20,100,40,2);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Mirrorcolor            = '#FFFFFF';		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Negative               = false;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Colorreplace           = array(0,'#000000','#FFFFFF',30);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Pixelscramble          = array(0,3,1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Greyscale              = false;		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Brightness             = array(0,30);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Contrast               = array(0,30);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Gamma                  = array(0,1.5);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Palette                = array(0,6);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Colorize               = array(0,100,0,0,0);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Pixelate               = array(0,3);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Medianfilter           = false;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Twirlfx                = array(0,20,0);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Ripplefx               = array(0,5,15,5,5);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Lakefx                 = array(0,15,80);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Waterdropfx            = array(0,1.2,400,40);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Maketransparent        = array(0,0,'#FFFFFF',30);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Keeptransparency       = false;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Thumbfilename          = '';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Polaroid               = false;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Polaroidtext           = '';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Polaroidfonttype       = '';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Polaroidfontsize       = '30';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Polaroidtextcolor      = '#000000';
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Polaroidframecolor     = '#FFFFFF';		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Displacementmap        = array(0,'',0,0,0,50,50);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Displacementmapthumb   = array(0,'',0,0,0,25,25);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if (is_resource($this->im)) imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if (is_resource($this->thumb)) imagedestroy($this->thumb);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if (is_resource($this->newimage)) imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$this->image=$name;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$this->thumbmaker();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$this->savethumb();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->image=$filename;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->thumbmaker();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($output=="file") {$this->savethumb();} else {$this->displaythumb();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->loadimage()) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Cropimage[0]>0) {$this->cropimage();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Addtext[0]>0) {$this->addtext();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Medianfilter) {$this->medianfilter();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Greyscale) {$this->greyscale();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Brightness[0]==1) {$this->brightness();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Contrast[0]==1) {$this->contrast();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Gamma[0]==1) {$this->gamma();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Palette[0]==1) {$this->palette();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Colorize[0]==1) {$this->colorize();}			
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Colorreplace[0]==1) {$this->colorreplace();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Pixelscramble[0]==1) {$this->pixelscramble();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Pixelate[0]==1) {$this->pixelate();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Ageimage[0]==1) {$this->ageimage();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Fliphorizontal) {$this->rotateorflip(0,1);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Flipvertical) {$this->rotateorflip(0,-1);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Watermarkpng!='') {$this->addpngwatermark();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Clipcorner[0]==1) {$this->clipcornersstraight();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Clipcorner[0]==2) {$this->clipcornersround();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if (intval($this->Rotate)<>0 && !$this->Croprotate) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				switch(intval($this->Rotate)) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:						$this->rotateorflip(1,0);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:						$this->rotateorflip(1,0);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:						$this->rotateorflip(1,0);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:						$this->rotateorflip(1,0);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:						$this->freerotate();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Croprotate) {$this->croprotate();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Sharpen) {$this->sharpen();}			
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Blur) {$this->blur();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Edge) {$this->edge();}			
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Emboss) {$this->emboss();}	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Mean) {$this->mean();}	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Applyfilter) {$this->filter();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Twirlfx[0]==1) {$this->twirlfx();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Ripplefx[0]==1) {$this->ripplefx();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Lakefx[0]==1) {$this->lakefx();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Waterdropfx[0]==1) {$this->waterdropfx();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Displacementmap[0]==1) {$this->displace();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Negative) {$this->negative();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Shading[0]==1) {$this->shading();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Polaroid) {$this->polaroid();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Perspective[0]==1) {$this->perspective();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->createemptythumbnail();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Binder) {$this->addbinder();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Shadow) {$this->addshadow();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagecopyresampled($this->thumb,$this->im,$this->Framewidth*($this->frame_offset-1),$this->Framewidth,0,0,$this->thumbx-($this->frame_offset*$this->Framewidth)-$this->shadow_offset,$this->thumby-2*$this->Framewidth-$this->shadow_offset,imagesx($this->im),imagesy($this->im));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Borderpng!='') {$this->addpngborder();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Copyrighttext!='') {$this->addcopyright();}		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Square) {$this->square();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Mirror[0]==1) {$this->mirror();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Displacementmapthumb[0]==1) {$this->displacethumb();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Perspectivethumb[0]==1) {$this->perspectivethumb();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Maketransparent[0]==1) {$this->maketransparent();}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if (is_resource($this->im)) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		} else if (file_exists($this->image)) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->size=GetImageSize($this->image);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			switch($this->size[2]) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					if (imagetypes() & IMG_GIF) {$this->im=imagecreatefromgif($this->image);return true;} else {$this->invalidimage('No GIF support');return false;}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					if (imagetypes() & IMG_JPG) {$this->im=imagecreatefromjpeg($this->image);$this->Keeptransparency=false;return true;} else {$this->invalidimage('No JPG support');return false;}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					if (imagetypes() & IMG_PNG) {$this->im=imagecreatefrompng($this->image);return true;} else {$this->invalidimage('No PNG support');return false;}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					$this->invalidimage('Filetype ?????');
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->invalidimage('File not found');
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->thumb=imagecreate(80,75);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$black=imagecolorallocate($this->thumb,0,0,0);$yellow=imagecolorallocate($this->thumb,255,255,0);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagefilledrectangle($this->thumb,0,0,80,75,imagecolorallocate($this->thumb,255,0,0));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagerectangle($this->thumb,0,0,79,74,$black);imageline($this->thumb,0,20,80,20,$black);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagefilledrectangle($this->thumb,1,1,78,19,$yellow);imagefilledrectangle($this->thumb,27,35,52,60,$yellow);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagerectangle($this->thumb,26,34,53,61,$black);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imageline($this->thumb,27,35,52,60,$black);imageline($this->thumb,52,35,27,60,$black);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagestring($this->thumb,1,5,5,$message,$black);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$thumbsize=$this->Thumbsize;$thumbwidth=$this->Thumbwidth;$thumbheight=$this->Thumbheight;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Percentage) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($thumbwidth>0) {$thumbwidth=floor(($thumbwidth/100)*$this->size[0]);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($thumbheight>0) {$thumbheight=floor(($thumbheight/100)*$this->size[1]);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->size[0]>$this->size[1])
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$thumbsize=floor(($thumbsize/100)*$this->size[0]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$thumbsize=floor(($thumbsize/100)*$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if (!$this->Inflate) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($thumbsize>$this->size[0] && $thumbsize>$this->size[1]) {$thumbsize=max($this->size[0],$this->size[1]);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($thumbheight>$this->size[1]) {$thumbheight=$this->size[1];}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($thumbwidth>$this->size[0]) {$thumbwidth=$this->size[0];}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Binder) {$this->frame_offset=3;$this->bind_offset=4;} else {$this->frame_offset=2;$this->bind_offset=0;}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Shadow) {$this->shadow_offset=3;} else {$this->shadow_offset=0;}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->thumb=imagecreatetruecolor($this->Framewidth*$this->frame_offset+$thumbwidth+$this->shadow_offset,$this->Framewidth*2+$thumbheight+$this->shadow_offset);		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->thumb=imagecreatetruecolor($this->Framewidth*$this->frame_offset+ceil($this->size[0]/($this->size[1]/$thumbheight))+$this->shadow_offset,$this->Framewidth*2+$thumbheight+$this->shadow_offset);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->thumb=imagecreatetruecolor($this->Framewidth*$this->frame_offset+$thumbwidth+$this->shadow_offset,$this->Framewidth*2+ceil($this->size[1]/($this->size[0]/$thumbwidth))+$this->shadow_offset);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$x1=$this->Framewidth*$this->frame_offset+$thumbsize+$this->shadow_offset;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$x2=$this->Framewidth*$this->frame_offset+ceil($this->size[0]/($this->size[1]/$thumbsize))+$this->shadow_offset;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$y1=$this->Framewidth*2+ceil($this->size[1]/($this->size[0]/$thumbsize))+$this->shadow_offset;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$y2=$this->Framewidth*2+$thumbsize+$this->shadow_offset;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->size[0]>$this->size[1]) {$this->thumb=imagecreatetruecolor($x1,$y1);} else {$this->thumb=imagecreatetruecolor($x2,$y2);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->thumbx=imagesx($this->thumb);$this->thumby=imagesy($this->thumb);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Keeptransparency) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$alpha=imagecolortransparent($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$color=imagecolorsforindex($this->im,$alpha);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$color_index=imagecolorallocate($this->thumb,$color['red'],$color['green'],$color['blue']);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagefill($this->thumb,0,0,$color_index);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagecolortransparent($this->thumb,$color_index);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagealphablending($this->thumb,false);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$color_alpha=imagecolorallocatealpha($this->im,0,0,0,127);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagefill($this->thumb,0,0,$color_alpha);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagesavealpha($this->thumb,true);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagealphablending($this->thumb,true);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagefilledrectangle($this->thumb,0,0,$this->thumbx,$this->thumby,imagecolorallocate($this->thumb,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));			
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Polaroid)
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagefilledrectangle($this->thumb,$this->bind_offset,0,$this->thumbx-$this->shadow_offset,$this->thumby-$this->shadow_offset,imagecolorallocate($this->thumb,hexdec(substr($this->Polaroidframecolor,1,2)),hexdec(substr($this->Polaroidframecolor,3,2)),hexdec(substr($this->Polaroidframecolor,5,2))));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagefilledrectangle($this->thumb,$this->bind_offset,0,$this->thumbx-$this->shadow_offset,$this->thumby-$this->shadow_offset,imagecolorallocate($this->thumb,hexdec(substr($this->Framecolor,1,2)),hexdec(substr($this->Framecolor,3,2)),hexdec(substr($this->Framecolor,5,2))));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Thumbsaveas!='') {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			switch (strtolower($this->Thumbsaveas)) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					$this->image=substr($this->image,0,strrpos($this->image,'.')).".".$this->Thumbsaveas;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					$this->size[2]=1;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					$this->image=substr($this->image,0,strrpos($this->image,'.')).".".$this->Thumbsaveas;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					$this->size[2]=2;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					$this->image=substr($this->image,0,strrpos($this->image,'.')).".".$this->Thumbsaveas;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					$this->size[2]=2;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					$this->image=substr($this->image,0,strrpos($this->image,'.')).".".$this->Thumbsaveas;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					$this->size[2]=3;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Thumbfilename!='') {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->image=$this->Thumbfilename;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		switch($this->size[2]) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagegif($this->thumb,$this->Thumblocation.$this->Thumbprefix.basename($this->image));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagejpeg($this->thumb,$this->Thumblocation.$this->Thumbprefix.basename($this->image),$this->Quality);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagepng($this->thumb,$this->Thumblocation.$this->Thumbprefix.basename($this->image));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Chmodlevel!='') {chmod($this->Thumblocation.$this->Thumbprefix.basename($this->image),octdec($this->Chmodlevel));}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->thumb);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		switch($this->size[2]) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				header("Content-type: image/gif");imagegif($this->thumb);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				header("Content-type: image/jpeg");imagejpeg($this->thumb,NULL,$this->Quality);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				header("Content-type: image/png");imagepng($this->thumb);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->thumb);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if (file_exists($this->Watermarkpng)) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->newimage=imagecreatefrompng($this->Watermarkpng);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$wpos=explode(' ',str_replace('%','',$this->Watermarkposition));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagecopymerge($this->im,$this->newimage,min(max(imagesx($this->im)*($wpos[0]/100)-0.5*imagesx($this->newimage),0),imagesx($this->im)-imagesx($this->newimage)),min(max(imagesy($this->im)*($wpos[1]/100)-0.5*imagesy($this->newimage),0),imagesy($this->im)-imagesy($this->newimage)),0,0,imagesx($this->newimage),imagesy($this->newimage),intval($this->Watermarktransparency));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$gray=imagecolorallocate($this->thumb,192,192,192);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$middlegray=imagecolorallocate($this->thumb,158,158,158);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$darkgray=imagecolorallocate($this->thumb,128,128,128);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagerectangle($this->thumb,$this->bind_offset,0,$this->thumbx-4,$this->thumby-4,$gray);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imageline($this->thumb,$this->bind_offset,$this->thumby-3,$this->thumbx,$this->thumby-3,$darkgray);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imageline($this->thumb,$this->thumbx-3,0,$this->thumbx-3,$this->thumby,$darkgray);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imageline($this->thumb,$this->bind_offset+2,$this->thumby-2,$this->thumbx,$this->thumby-2,$middlegray);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imageline($this->thumb,$this->thumbx-2,2,$this->thumbx-2,$this->thumby,$middlegray);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imageline($this->thumb,$this->bind_offset+2,$this->thumby-1,$this->thumbx,$this->thumby-1,$gray);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imageline($this->thumb,$this->thumbx-1,2,$this->thumbx-1,$this->thumby,$gray);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$clipsize=$this->Clipcorner[1];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->size[0]>$this->size[1])
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$clipsize=floor($this->size[0]*(intval($clipsize)/100));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$clipsize=floor($this->size[1]*(intval($clipsize)/100));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$bgcolor=imagecolorallocate($this->im,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2)));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Clipcorner[2]) {$random1=rand(0,1);$random2=rand(0,1);$random3=rand(0,1);$random4=rand(0,1);} else {$random1=1;$random2=1;$random3=1;$random4=1;}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				if ($this->Clipcorner[3] && $random1) {imageline($this->im,0,$i,$clipsize-$i,$i,$bgcolor);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				if ($this->Clipcorner[4] && $random2) {imageline($this->im,0,$this->size[1]-$i-1,$clipsize-$i,$this->size[1]-$i-1,$bgcolor);}				
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				if ($this->Clipcorner[5] && $random3) {imageline($this->im,$this->size[0]-$clipsize+$i,$i,$this->size[0]+$clipsize-$i,$i,$bgcolor);}				
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				if ($this->Clipcorner[6] && $random4) {imageline($this->im,$this->size[0]-$clipsize+$i,$this->size[1]-$i-1,$this->size[0]+$clipsize-$i,$this->size[1]-$i-1,$bgcolor);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$clipsize=floor($this->size[0]*($this->Clipcorner[1]/100));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$points_br=array($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$points_tr=array($this->size[0],0);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$points_bl=array(0,$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$bgcolor=imagecolorallocate($this->im,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2)));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			array_push($points_tr,$this->size[0]-$clipsize+$x);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			array_push($points_br,$this->size[0]-$clipsize+$x);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			array_push($points_br,$this->size[1]-$clipsize+$y);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			array_push($points_bl,$this->size[1]-$clipsize+$y);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		array_push($points_br,$this->size[0]-$clipsize,$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		array_push($points_tr,$this->size[0]-$clipsize,0);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		array_push($points_bl,$clipsize,$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Clipcorner[2]) {$random1=rand(0,1);$random2=rand(0,1);$random3=rand(0,1);$random4=rand(0,1);} else {$random1=1;$random2=1;$random3=1;$random4=1;}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Clipcorner[3] && $random1) {imagefilledpolygon($this->im,$points_tl,count($points_tl)/2,$bgcolor);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Clipcorner[4] && $random2) {imagefilledpolygon($this->im,$points_bl,count($points_bl)/2,$bgcolor);}		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Clipcorner[5] && $random3) {imagefilledpolygon($this->im,$points_tr,count($points_tr)/2,$bgcolor);}		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Clipcorner[6] && $random4) {imagefilledpolygon($this->im,$points_br,count($points_br)/2,$bgcolor);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagetruecolortopalette($this->im,1,256);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$col=imagecolorsforindex($this->im,$c);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$noise=rand(-$this->Ageimage[1],$this->Ageimage[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Ageimage[2]>0) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$r=$new_col+$this->Ageimage[2]+$noise;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$g=floor($new_col+$this->Ageimage[2]/1.86+$noise);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$b=floor($new_col+$this->Ageimage[2]/-3.48+$noise);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagecolorset($this->im,$c,max(0,min(255,$r)),max(0,min(255,$g)),max(0,min(255,$b)));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if (file_exists($this->Borderpng)) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$borderim=imagecreatefrompng($this->Borderpng);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagecopyresampled($this->thumb,$borderim,$this->bind_offset,0,0,0,$this->thumbx-$this->shadow_offset-$this->bind_offset,$this->thumby-$this->shadow_offset,imagesx($borderim),imagesy($borderim));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if (intval($this->Binderspacing)<4) {$this->Binderspacing=4;}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$spacing=floor($this->thumby/$this->Binderspacing)-2;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$offset=floor(($this->thumby-($spacing*$this->Binderspacing))/2);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$gray=imagecolorallocate($this->thumb,192,192,192);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$middlegray=imagecolorallocate($this->thumb,158,158,158);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$darkgray=imagecolorallocate($this->thumb,128,128,128);		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$black=imagecolorallocate($this->thumb,0,0,0);	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$white=imagecolorallocate($this->thumb,255,255,255);		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($i=$offset;$i<=$offset+$spacing*$this->Binderspacing;$i+=$this->Binderspacing) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagefilledrectangle($this->thumb,8,$i-2,10,$i+2,$black);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imageline($this->thumb,11,$i-1,11,$i+1,$darkgray);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imageline($this->thumb,8,$i-2,10,$i-2,$darkgray);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imageline($this->thumb,8,$i+2,10,$i+2,$darkgray);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagefilledrectangle($this->thumb,0,$i-1,8,$i+1,$gray);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imageline($this->thumb,0,$i,8,$i,$white);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imageline($this->thumb,0,$i-1,0,$i+1,$gray);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagesetpixel($this->thumb,0,$i,$darkgray);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Copyrightfonttype=='') {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$widthx=imagefontwidth($this->Copyrightfontsize)*strlen($this->Copyrighttext);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$heighty=imagefontheight($this->Copyrightfontsize);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$fontwidth=imagefontwidth($this->Copyrightfontsize);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$dimensions=imagettfbbox($this->Copyrightfontsize,0,$this->Copyrightfonttype,$this->Copyrighttext);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$dimensions=imagettfbbox($this->Copyrightfontsize,0,$this->Copyrightfonttype,'W');
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$cpos=explode(' ',str_replace('%','',$this->Copyrightposition));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$cposx=floor(min(max($this->thumbx*($cpos[0]/100)-0.5*$widthx,$fontwidth),$this->thumbx-$widthx-0.5*$fontwidth));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$cposy=floor(min(max($this->thumby*($cpos[1]/100)-0.5*$heighty,$heighty),$this->thumby-$heighty*1.5));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$cposy=$this->thumby-10;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Copyrighttextcolor=='') {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$indexis=ImageColorAt($this->thumb,$i,$cposy+0.5*$heighty);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$rgbarray=ImageColorsForIndex($this->thumb,$indexis);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				if ($this->Copyrightfonttype=='')
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					imagestring($this->thumb,$this->Copyrightfontsize,$cposx,$cposy,$this->Copyrighttext,imagecolorallocate($this->thumb,0,0,0));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					imagettftext($this->thumb,$this->Copyrightfontsize,0,$cposx,$cposy,imagecolorallocate($this->thumb,0,0,0),$this->Copyrightfonttype,$this->Copyrighttext);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				if ($this->Copyrightfonttype=='')
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					imagestring($this->thumb,$this->Copyrightfontsize,$cposx,$cposy,$this->Copyrighttext,imagecolorallocate($this->thumb,255,255,255));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					imagettftext($this->thumb,$this->Copyrightfontsize,0,$cposx,$cposy,imagecolorallocate($this->thumb,255,255,255),$this->Copyrightfonttype,$this->Copyrighttext);				
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Copyrightfonttype=='')
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagestring($this->thumb,$this->Copyrightfontsize,$cposx,$cposy,$this->Copyrighttext,imagecolorallocate($this->thumb,hexdec(substr($this->Copyrighttextcolor,1,2)),hexdec(substr($this->Copyrighttextcolor,3,2)),hexdec(substr($this->Copyrighttextcolor,5,2))));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagettftext($this->thumb,$this->Copyrightfontsize,0,$cposx,$cposy,imagecolorallocate($this->thumb,hexdec(substr($this->Copyrighttextcolor,1,2)),hexdec(substr($this->Copyrighttextcolor,3,2)),hexdec(substr($this->Copyrighttextcolor,5,2))),$this->Copyrightfonttype,$this->Copyrighttext);				
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Addtext[3]=='') {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$widthx=imagefontwidth($this->Addtext[4])*strlen($this->Addtext[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$heighty=imagefontheight($this->Addtext[4]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$fontwidth=imagefontwidth($this->Addtext[4]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$dimensions=imagettfbbox($this->Addtext[4],0,$this->Addtext[3],$this->Addtext[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$dimensions=imagettfbbox($this->Addtext[4],0,$this->Addtext[3],'W');
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$cpos=explode(' ',str_replace('%','',$this->Addtext[2]));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$cposx=floor(min(max($this->size[0]*($cpos[0]/100)-0.5*$widthx,$fontwidth),$this->size[0]-$widthx-0.5*$fontwidth));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$cposy=floor(min(max($this->size[1]*($cpos[1]/100)-0.5*$heighty,$heighty),$this->size[1]-$heighty*1.5));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$cposy=$this->size[1]-10;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Addtext[3]=='')
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagestring($this->im,$this->Addtext[4],$cposx,$cposy,$this->Addtext[1],imagecolorallocate($this->im,hexdec(substr($this->Addtext[5],1,2)),hexdec(substr($this->Addtext[5],3,2)),hexdec(substr($this->Addtext[5],5,2))));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagettftext($this->im,$this->Addtext[4],0,$cposx,$cposy,imagecolorallocate($this->im,hexdec(substr($this->Addtext[5],1,2)),hexdec(substr($this->Addtext[5],3,2)),hexdec(substr($this->Addtext[5],5,2))),$this->Addtext[3],$this->Addtext[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$angle=$this->Rotate;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$centerx=floor($this->size[0]/2);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$centery=floor($this->size[1]/2);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$maxsizex=ceil(abs(cos(deg2rad($angle))*$this->size[0])+abs(sin(deg2rad($angle))*$this->size[1]));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$maxsizey=ceil(abs(sin(deg2rad($angle))*$this->size[0])+abs(cos(deg2rad($angle))*$this->size[1]));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->newimage=imagecreatetruecolor($maxsizex,$maxsizey);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagefilledrectangle($this->newimage,0,0,$maxsizex,$maxsizey,imagecolorallocate($this->newimage,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));			
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$newcenterx=imagesx($this->newimage)/2;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$newcentery=imagesy($this->newimage)/2;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($px=0;$px<imagesx($this->newimage);$px++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				for ($py=0;$py<imagesy($this->newimage);$py++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					    imagecopy($this->newimage,$this->im,$px,$py,$centerx+$vectorx,$centery+$vectory,1,1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->im=imagecreatetruecolor(imagesx($this->newimage),imagesy($this->newimage));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagecopy($this->im,$this->newimage,0,0,0,0,imagesx($this->newimage),imagesy($this->newimage));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->size[0]=imagesx($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->size[1]=imagesy($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->im=imagerotate($this->im,-$this->Rotate,imagecolorallocate($this->im,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->newimage=imagecreatetruecolor($this->size[1],$this->size[0]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if (intval($this->Rotate)>0 || $flip>0) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($px=0;$px<$this->size[0];$px++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					for ($py=0;$py<$this->size[1];$py++) {imagecopy($this->newimage,$this->im,$this->size[1]-$py-1,$px,$px,$py,1,1);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					for ($py=0;$py<$this->size[1];$py++) {imagecopy($this->newimage,$this->im,$this->size[0]-$px-1,$py,$px,$py,1,1);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($px=0;$px<$this->size[0];$px++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					for ($py=0;$py<$this->size[1];$py++) {imagecopy($this->newimage,$this->im,$py,$this->size[0]-$px-1,$px,$py,1,1);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					for ($py=0;$py<$this->size[1];$py++) {imagecopy($this->newimage,$this->im,$px,$this->size[1]-$py-1,$px,$py,1,1);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->im=imagecreatetruecolor(imagesx($this->newimage),imagesy($this->newimage));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,imagesx($this->newimage),imagesy($this->newimage));			
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->size[0]=imagesx($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->size[1]=imagesy($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Cropimage[1]==0) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$crop2=floor($this->size[0]*($this->Cropimage[2]/100));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$crop3=floor($this->size[0]*($this->Cropimage[3]/100));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$crop4=floor($this->size[1]*($this->Cropimage[4]/100));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$crop5=floor($this->size[1]*($this->Cropimage[5]/100));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Cropimage[1]==1) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$crop2=$this->Cropimage[2];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$crop3=$this->Cropimage[3];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$crop4=$this->Cropimage[4];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$crop5=$this->Cropimage[5];		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Cropimage[0]==2) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$crop2=floor($this->size[0]/2)-$crop2;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$crop3=floor($this->size[0]/2)-$crop3;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$crop4=floor($this->size[1]/2)-$crop4;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$crop5=floor($this->size[1]/2)-$crop5;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Cropimage[0]==3) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->size[0]>$this->size[1]) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$crop2=$crop3=floor(($this->size[0]-$this->size[1])/2);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$crop4=$crop5=floor(($this->size[1]-$this->size[0])/2);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0]-$crop2-$crop3,$this->size[1]-$crop4-$crop5);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($crop5<0) {$crop5=0;imagefilledrectangle($this->newimage,0,0,imagesx($this->newimage),imagesy($this->newimage),imagecolorallocate($this->newimage,hexdec(substr($this->Polaroidframecolor,1,2)),hexdec(substr($this->Polaroidframecolor,3,2)),hexdec(substr($this->Polaroidframecolor,5,2))));}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->newimage,$this->im,0,0,$crop2,$crop4,$this->size[0]-$crop2-$crop3,$this->size[1]-$crop4-$crop5);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->im=imagecreatetruecolor(imagesx($this->newimage),imagesy($this->newimage));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,imagesx($this->newimage),imagesy($this->newimage));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->size[0]=imagesx($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->size[1]=imagesy($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$squaresize=max($this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($squaresize,$squaresize);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagefilledrectangle($this->newimage,0,0,$squaresize,$squaresize,imagecolorallocate($this->newimage,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$centerx=floor(($squaresize-$this->thumbx)/2);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$centery=floor(($squaresize-$this->thumby)/2);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->newimage,$this->thumb,$centerx,$centery,0,0,$this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->thumb);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->thumb=imagecreatetruecolor($squaresize,$squaresize);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->thumb,$this->newimage,0,0,0,0,$squaresize,$squaresize);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$a11=$this->rgbpixel($x-1,$y-1);$a12=$this->rgbpixel($x,$y-1);$a13=$this->rgbpixel($x+1,$y-1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$a21=$this->rgbpixel($x-1,$y);$a22=$this->rgbpixel($x,$y);$a23=$this->rgbpixel($x+1,$y);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$a31=$this->rgbpixel($x-1,$y+1);$a32=$this->rgbpixel($x,$y+1);$a33=$this->rgbpixel($x+1,$y+1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpixel[0]+=$a11['red']*$this->Filter[0]+$a12['red']*$this->Filter[1]+$a13['red']*$this->Filter[2];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpixel[1]+=$a11['green']*$this->Filter[0]+$a12['green']*$this->Filter[1]+$a13['green']*$this->Filter[2];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpixel[2]+=$a11['blue']*$this->Filter[0]+$a12['blue']*$this->Filter[1]+$a13['blue']*$this->Filter[2];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpixel[0]+=$a21['red']*$this->Filter[3]+$a22['red']*$this->Filter[4]+$a23['red']*$this->Filter[5];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpixel[1]+=$a21['green']*$this->Filter[3]+$a22['green']*$this->Filter[4]+$a23['green']*$this->Filter[5];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpixel[2]+=$a21['blue']*$this->Filter[3]+$a22['blue']*$this->Filter[4]+$a23['blue']*$this->Filter[5];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpixel[0]+=$a31['red']*$this->Filter[6]+$a32['red']*$this->Filter[7]+$a33['red']*$this->Filter[8];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpixel[1]+=$a31['green']*$this->Filter[6]+$a32['green']*$this->Filter[7]+$a33['green']*$this->Filter[8];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpixel[2]+=$a31['blue']*$this->Filter[6]+$a32['blue']*$this->Filter[7]+$a33['blue']*$this->Filter[8];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpixel[0]=max(0,min(255,intval($newpixel[0]/$this->Divisor)+$this->Offset));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpixel[1]=max(0,min(255,intval($newpixel[1]/$this->Divisor)+$this->Offset));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpixel[2]=max(0,min(255,intval($newpixel[2]/$this->Divisor)+$this->Offset));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newpixel[0],$newpixel[1],$newpixel[2],$a11['alpha']));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$a11=$this->rgbpixel($x-1,$y-1);$a12=$this->rgbpixel($x,$y-1);$a13=$this->rgbpixel($x+1,$y-1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$a21=$this->rgbpixel($x-1,$y);$a22=$this->rgbpixel($x,$y);$a23=$this->rgbpixel($x+1,$y);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$a31=$this->rgbpixel($x-1,$y+1);$a32=$this->rgbpixel($x,$y+1);$a33=$this->rgbpixel($x+1,$y+1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newred[4],$newgreen[4],$newblue[4],$a22['alpha']));		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($x>=$this->size[0]) {$x=$this->size[0]-1;}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($y>=$this->size[1]) {$y=$this->size[1]-1;}		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$oldfilter=$this->Filter;$olddivisor=$this->Divisor;$oldoffset=$this->Offset;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Filter  = array(1,2,1,2,4,2,1,2,1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Divisor = 16;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Offset  = 0;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->filter();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Filter  = $oldfilter;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Divisor = $olddivisor;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Offset  = $oldoffset;		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$oldfilter=$this->Filter;$olddivisor=$this->Divisor;$oldoffset=$this->Offset;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Filter  = array(-1,-1,-1,-1,16,-1,-1,-1,-1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Divisor = 8;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Offset  = 0;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->filter();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Filter  = $oldfilter;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Divisor = $olddivisor;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Offset  = $oldoffset;		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$oldfilter=$this->Filter;$olddivisor=$this->Divisor;$oldoffset=$this->Offset;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Filter  = array(-1,-1,-1,-1,8,-1,-1,-1,-1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Divisor = 1;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Offset  = 127;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->filter();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Filter  = $oldfilter;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Divisor = $olddivisor;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Offset  = $oldoffset;		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$oldfilter=$this->Filter;$olddivisor=$this->Divisor;$oldoffset=$this->Offset;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Filter  = array(2,0,0,0,-1,0,0,0,-1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Divisor = 1;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Offset  = 127;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->filter();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Filter  = $oldfilter;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Divisor = $olddivisor;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Offset  = $oldoffset;		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$oldfilter=$this->Filter;$olddivisor=$this->Divisor;$oldoffset=$this->Offset;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Filter  = array(1,1,1,1,1,1,1,1,1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Divisor = 9;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Offset  = 0;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->filter();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Filter  = $oldfilter;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Divisor = $olddivisor;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Offset  = $oldoffset;		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagefilledrectangle($this->newimage,0,0,$this->size[0],$this->size[1],imagecolorallocate($this->newimage,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));			
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Perspective[1]==0 || $this->Perspective[1]==1) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:                        $gradient=($this->size[1]-($this->size[1]*(max(100-$this->Perspective[2],1)/100)))/$this->size[0];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		        for ($c=0;$c<$this->size[0];$c++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			        if ($this->Perspective[1]==0) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				    $length=$this->size[1]-(floor($gradient*$c));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				    $length=$this->size[1]-(floor($gradient*($this->size[0]-$c)));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagecopyresampled($this->newimage,$this->im,$c,floor(($this->size[1]-$length)/2),$c,0,1,$length,1,$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:                        $gradient=($this->size[0]-($this->size[0]*(max(100-$this->Perspective[2],1)/100)))/$this->size[1];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		        for ($c=0;$c<$this->size[1];$c++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			        if ($this->Perspective[1]==2) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				    $length=$this->size[0]-(floor($gradient*$c));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				    $length=$this->size[0]-(floor($gradient*($this->size[1]-$c)));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagecopyresampled($this->newimage,$this->im,floor(($this->size[0]-$length)/2),$c,0,$c,$length,1,$this->size[0],1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagefilledrectangle($this->newimage,0,0,$this->thumbx,$this->thumby,imagecolorallocate($this->newimage,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));			
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Perspectivethumb[1]==0 || $this->Perspectivethumb[1]==1) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:                        $gradient=($this->thumby-($this->thumby*(max(100-$this->Perspectivethumb[2],1)/100)))/$this->thumbx;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		        for ($c=0;$c<$this->thumbx;$c++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			        if ($this->Perspectivethumb[1]==0) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				    $length=$this->thumby-(floor($gradient*$c));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				    $length=$this->thumby-(floor($gradient*($this->thumbx-$c)));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagecopyresampled($this->newimage,$this->thumb,$c,floor(($this->thumby-$length)/2),$c,0,1,$length,1,$this->thumby);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:                        $gradient=($this->thumbx-($this->thumbx*(max(100-$this->Perspectivethumb[2],1)/100)))/$this->thumby;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		        for ($c=0;$c<$this->thumby;$c++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			        if ($this->Perspectivethumb[1]==2) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				    $length=$this->thumbx-(floor($gradient*$c));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				    $length=$this->thumbx-(floor($gradient*($this->thumby-$c)));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagecopyresampled($this->newimage,$this->thumb,floor(($this->thumbx-$length)/2),$c,0,$c,$length,1,$this->thumbx,1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->thumb,$this->newimage,0,0,0,0,$this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Shading[3]==0 || $this->Shading[3]==1) {		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->newimage=imagecreatetruecolor(1,$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagefilledrectangle($this->newimage,0,0,1,$this->size[1],imagecolorallocate($this->newimage,hexdec(substr($this->Shadingcolor,1,2)),hexdec(substr($this->Shadingcolor,3,2)),hexdec(substr($this->Shadingcolor,5,2))));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->newimage=imagecreatetruecolor($this->size[0],1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagefilledrectangle($this->newimage,0,0,$this->size[0],1,imagecolorallocate($this->newimage,hexdec(substr($this->Shadingcolor,1,2)),hexdec(substr($this->Shadingcolor,3,2)),hexdec(substr($this->Shadingcolor,5,2))));			
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Shading[3]==0) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$shadingstrength=$this->Shading[1]/($this->size[0]*($this->Shading[2]/100));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($c=$this->size[0]-floor(($this->size[0]*($this->Shading[2]/100)));$c<$this->size[0];$c++) { 
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$opacity=floor($shadingstrength*($c-($this->size[0]-floor(($this->size[0]*($this->Shading[2]/100)))))); 
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagecopymerge($this->im,$this->newimage,$c,0,0,0,1,$this->size[1],max(min($opacity,100),0));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		} else if ($this->Shading[3]==1) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$shadingstrength=$this->Shading[1]/($this->size[0]*($this->Shading[2]/100));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($c=0;$c<floor($this->size[0]*($this->Shading[2]/100));$c++) { 
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$opacity=floor($this->Shading[1]-($c*$shadingstrength));			 
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagecopymerge($this->im,$this->newimage,$c,0,0,0,1,$this->size[1],max(min($opacity,100),0));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		} else if ($this->Shading[3]==2) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$shadingstrength=$this->Shading[1]/($this->size[1]*($this->Shading[2]/100));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($c=0;$c<floor($this->size[1]*($this->Shading[2]/100));$c++) { 
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$opacity=floor($this->Shading[1]-($c*$shadingstrength));			 
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagecopymerge($this->im,$this->newimage,0,$c,0,0,$this->size[0],1,max(min($opacity,100),0));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$shadingstrength=$this->Shading[1]/($this->size[1]*($this->Shading[2]/100));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($c=$this->size[1]-floor(($this->size[1]*($this->Shading[2]/100)));$c<$this->size[1];$c++) { 
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$opacity=floor($shadingstrength*($c-($this->size[1]-floor(($this->size[1]*($this->Shading[2]/100)))))); 
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagecopymerge($this->im,$this->newimage,0,$c,0,0,$this->size[0],1,max(min($opacity,100),0));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$bottom=floor(($this->Mirror[3]/100)*$this->thumby)+$this->Mirror[4];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->thumbx,$this->thumby+$bottom);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagefilledrectangle($this->newimage,0,0,$this->thumbx,$this->thumby+$bottom,imagecolorallocate($this->newimage,hexdec(substr($this->Backgroundcolor,1,2)),hexdec(substr($this->Backgroundcolor,3,2)),hexdec(substr($this->Backgroundcolor,5,2))));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->newimage,$this->thumb,0,0,0,0,$this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->thumb);$this->thumb=imagecreatetruecolor($this->thumbx,$this->thumby+$bottom);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->thumb,$this->newimage,0,0,0,0,$this->thumbx,$this->thumby+$bottom);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);$this->thumbx=imagesx($this->thumb);$this->thumby=imagesy($this->thumb);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($px=0;$px<$this->thumbx;$px++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($py=$this->thumby-($bottom*2)+$this->Mirror[4];$py<($this->thumby-$bottom);$py++) {imagecopy($this->thumb,$this->thumb,$px,$this->thumby-($py-($this->thumby-($bottom*2)))-1+$this->Mirror[4],$px,$py,1,1);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->thumbx,1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagefilledrectangle($this->newimage,0,0,$this->thumbx,1,imagecolorallocate($this->newimage,hexdec(substr($this->Mirrorcolor,1,2)),hexdec(substr($this->Mirrorcolor,3,2)),hexdec(substr($this->Mirrorcolor,5,2))));	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$shadingstrength=($this->Mirror[2]-$this->Mirror[1])/$bottom;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($c=$this->thumby-$bottom;$c<$this->thumby;$c++) { 
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$opacity=$this->Mirror[1]+floor(($bottom-($this->thumby-$c))*$shadingstrength);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagecopymerge($this->thumb,$this->newimage,0,$c,0,0,$this->thumbx,1,max(min($opacity,100),0));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagesetpixel($this->im,$x,$y,imagecolorallocatealpha($this->im,255-($pixel >> 16 & 0xFF),255-($pixel >> 8 & 0xFF),255-($pixel & 0xFF),$pixel >> 24 & 0xFF));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$red=hexdec(substr($this->Colorreplace[1],1,2));$green=hexdec(substr($this->Colorreplace[1],3,2));$blue=hexdec(substr($this->Colorreplace[1],5,2));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$rednew=hexdec(substr($this->Colorreplace[2],1,2));$greennew=hexdec(substr($this->Colorreplace[2],3,2));$bluenew=hexdec(substr($this->Colorreplace[2],5,2));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$tolerance=sqrt(pow($this->Colorreplace[3],2)+pow($this->Colorreplace[3],2)+pow($this->Colorreplace[3],2));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					imagesetpixel($this->im,$x,$y,imagecolorallocatealpha($this->im,$rednew,$greennew,$bluenew,$pixel >> 24 & 0xFF));	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($i=0;$i<$this->Pixelscramble[2];$i++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newx=$x+rand(-$this->Pixelscramble[1],$this->Pixelscramble[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newy=$y+rand(-$this->Pixelscramble[1],$this->Pixelscramble[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				if ($newx<0 && $newx>=$this->size[0]) {$newx=$x;}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				if ($newy<0 && $newy>=$this->size[1]) {$newy=$y;}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagecopy($this->newimage,$this->im,$newx,$newy,$x,$y,1,1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagecopy($this->newimage,$this->im,$x,$y,$newx,$newy,1,1);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagesetpixel($this->im,$x,$y,imagecolorallocatealpha($this->im,$grey,$grey,$grey,$pixel >> 24 & 0xFF));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$redpix=max(0,min(255,($pixel >> 16 & 0xFF)+($this->Brightness[1]/100)*255));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$greenpix=max(0,min(255,($pixel >> 8 & 0xFF)+($this->Brightness[1]/100)*255));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$bluepix=max(0,min(255,($pixel & 0xFF)+($this->Brightness[1]/100)*255));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagesetpixel($this->im,$x,$y,imagecolorallocatealpha($this->im,$redpix,$greenpix,$bluepix,$pixel >> 24 & 0xFF));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$redpix=max(0,min(255,(((($pixel >> 16 & 0xFF)/255)-0.5)*($this->Contrast[1]/100+1)+0.5)*255));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$greenpix=max(0,min(255,(((($pixel >> 8 & 0xFF)/255)-0.5)*($this->Contrast[1]/100+1)+0.5)*255));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$bluepix=max(0,min(255,(((($pixel & 0xFF)/255)-0.5)*($this->Contrast[1]/100+1)+0.5)*255));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagesetpixel($this->im,$x,$y,imagecolorallocatealpha($this->im,$redpix,$greenpix,$bluepix,$pixel >> 24 & 0xFF));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagegammacorrect($this->im,1,$this->Gamma[1]);	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagetruecolortopalette($this->im,false,$this->Palette[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$redpix=max(0,min(255,($pixel >> 16 & 0xFF)+$this->Colorize[1]));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$greenpix=max(0,min(255,($pixel >> 8 & 0xFF)+$this->Colorize[2]));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$bluepix=max(0,min(255,($pixel & 0xFF)+$this->Colorize[3]));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$alpha =max(0,min(127,($pixel >> 24 & 0xFF)+$this->Colorize[4]));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagesetpixel($this->im,$x,$y,imagecolorallocatealpha($this->im,$redpix,$greenpix,$bluepix,$alpha));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y+=$this->Pixelate[1]) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x+=$this->Pixelate[1]) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$pixel=ImageColorAt($this->im,$x,$y);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagefilledrectangle($this->im,$x,$y,$x+$this->Pixelate[1]-1,$y+$this->Pixelate[1]-1,$pixel);	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$ff=$this->rgbpixel($xf,$yf);$cf=$this->rgbpixel($xc,$yf);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$fc=$this->rgbpixel($xf,$yc);$cc=$this->rgbpixel($xc,$yc);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$rotationamount=$this->Twirlfx[1]/1000;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$centerx=floor($this->size[0]/2);$centery=floor($this->size[1]/2);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				if ($this->Twirlfx[2]==0) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpix=$this->bilinear($newx,$newy);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newpix['red'],$newpix['green'],$newpix['blue'],$newpix['alpha']));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$wavex=((2*pi())/$this->size[0])*$this->Ripplefx[1];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$wavey=((2*pi())/$this->size[1])*$this->Ripplefx[3];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newx=$x+$this->Ripplefx[4]*sin($y*$wavey); 
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newy=$y+$this->Ripplefx[2]*sin($x*$wavex);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpix=$this->bilinear($newx,$newy);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newpix['red'],$newpix['green'],$newpix['blue'],$newpix['alpha']));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$ystart=max($this->size[1]-floor($this->size[1]*($this->Lakefx[2]/100)),0);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		    imagecopy($this->newimage,$this->im,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=$ystart;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newy=$y+3*pi()*(1/$this->size[1])*$y*sin(($this->size[1]*($this->Lakefx[1]/100)*($this->size[1]-$y))/$y); 
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpix=$this->bilinear($x,$newy);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newpix['red'],$newpix['green'],$newpix['blue'],$newpix['alpha']));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$centerx=floor($this->size[0]/2);$centery=floor($this->size[1]/2);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$amount=$this->Waterdropfx[1]*sin($distance/$this->Waterdropfx[3]*2*pi());
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$amount=$amount*($this->Waterdropfx[2]-$distance)/$this->Waterdropfx[2];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				if ($distance!=0) {$amount=$amount*$this->Waterdropfx[3]/$distance;}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpix=$this->bilinear($newx,$newy);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newpix['red'],$newpix['green'],$newpix['blue'],$newpix['alpha']));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$red=hexdec(substr($this->Maketransparent[2],1,2));$green=hexdec(substr($this->Maketransparent[2],3,2));$blue=hexdec(substr($this->Maketransparent[2],5,2));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Maketransparent[3]!=0) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$transparentcolor=imagecolorallocate($this->thumb,$red,$green,$blue);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$tolerance=sqrt(pow($this->Maketransparent[3],2)+pow($this->Maketransparent[3],2)+pow($this->Maketransparent[3],2));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($y=0;$y<$this->thumby;$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				for ($x=0;$x<$this->thumbx;$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					$pixel=ImageColorAt($this->thumb,$x,$y);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:						imagesetpixel($this->thumb,$x,$y,$transparentcolor);	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$transparentcolor=imagecolorallocate($this->thumb,$red,$green,$blue);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecolortransparent($this->thumb,$transparentcolor);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Maketransparent[1]!=2) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			if ($this->Maketransparent[1]==0) {$this->size[2]=3;} else {$this->size[2]=1;}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$IHDR_chunk = $this->create_chunk('IHDR', pack('NNCCCCC', $IHDR['width'], $IHDR['height'], $IHDR['bits'], $IHDR['color'], $IHDR['compression'], $IHDR['prefilter'], $IHDR['interlacing']));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$acTL_chunk = $this->create_chunk('acTL', pack("NN", count($imageData), 0));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$data = $this->create_fcTL($sequenceNumber, $IHDR['width'], $IHDR['height'], $delay);  
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$fcTL_chunk = $this->create_chunk('fcTL', $data);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$firstFrame = $this->create_chunk('IDAT', $image);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$data = $this->create_fcTL($sequenceNumber, $IHDR['width'], $IHDR['height'], $delay);  
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$fcTL_chunk = $this->create_chunk('fcTL', $data);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$fdAT_chunk = $this->create_chunk('fdAT', $data);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		fwrite($fh, $this->create_chunk('IEND'));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->im=imagecreatetruecolor($width,$height);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->size=array($width,$height,$filetype);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$color=imagecolorallocate($this->im,hexdec(substr($bgcolor,1,2)),hexdec(substr($bgcolor,3,2)),hexdec(substr($bgcolor,5,2)));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagefilledrectangle($this->im,0,0,$width,$height,$color);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->Keeptransparency=true;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagecolortransparent($this->im,$color);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->image=$filename;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->thumbmaker();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		switch($this->size[2]) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagegif($this->thumb);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagejpeg($this->thumb,NULL,$this->Quality);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagepng($this->thumb);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$originalarray=$this->Cropimage;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->size[0]>$this->size[1]) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$cropwidth=floor(($this->size[0]-floor(($this->size[1]/1.05)))/2);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->Cropimage=array(1,1,$cropwidth,$cropwidth,0,-1*floor(0.16*$this->size[1]));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->cropimage();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->Framewidth=floor(0.05*($this->size[1]-2*$cropwidth));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$cropheight=floor(($this->size[1]-floor(($this->size[0]/1.05)))/2);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$bottom=-1*floor(0.16*$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->Cropimage=array(1,1,0,0,$cropheight,$cropheight);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->cropimage();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->Cropimage=array(1,1,0,0,0,$bottom);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->cropimage();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->Framewidth=floor(0.05*$this->size[0]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->Cropimage=$originalarray;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Polaroidtext!='' && $this->Polaroidfonttype!='') {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		  $dimensions=imagettfbbox($this->Polaroidfontsize,0,$this->Polaroidfonttype,$this->Polaroidtext);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$y=$this->size[1]-floor($this->size[1]*0.08)-$heighty;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$x=floor(($this->size[0]-$widthx)/2);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagettftext($this->im,$this->Polaroidfontsize,0,$x,$y,imagecolorallocate($this->im,hexdec(substr($this->Polaroidtextcolor,1,2)),hexdec(substr($this->Polaroidtextcolor,3,2)),hexdec(substr($this->Polaroidtextcolor,5,2))),$this->Polaroidfonttype,$this->Polaroidtext);		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if (file_exists($this->Displacementmap[1])) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$size=GetImageSize($this->Displacementmap[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					if (imagetypes() & IMG_GIF) {$map=imagecreatefromgif($this->Displacementmap[1]);} else {$map=imagecreatetruecolor(100,100);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					if (imagetypes() & IMG_JPG) {$map=imagecreatefromjpeg($this->Displacementmap[1]);} else {$map=imagecreatetruecolor(100,100);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					if (imagetypes() & IMG_PNG) {$map=imagecreatefrompng($this->Displacementmap[1]);} else {$map=imagecreatetruecolor(100,100);}
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		$this->newimage=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if ($this->Displacementmap[2]==0) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$maptmp=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagecopyresampled($maptmp,$map,0,0,0,0,$this->size[0],$this->size[1],$mapxmax,$mapymax);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$map=imagecreatetruecolor($this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagecopy($map,$maptmp,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$mapxmax=$this->size[0];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$mapymax=$this->size[1];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$mapx=$this->Displacementmap[3];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$mapy=$this->Displacementmap[4];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$mapx=$this->Displacementmap[3];
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$mapy=$this->Displacementmap[4];		
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		for ($y=0;$y<$this->size[1];$y++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			for ($x=0;$x<$this->size[0];$x++) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:						$newx=$x+(($redmap-128)*$this->Displacementmap[5])/256;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:						$newy=$y+(($greenmap-128)*$this->Displacementmap[6])/256;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				$newpix=$this->bilinear($newx,$newy);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				imagesetpixel($this->newimage,$x,$y,imagecolorallocatealpha($this->newimage,$newpix['red'],$newpix['green'],$newpix['blue'],$newpix['alpha']));	
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagecopy($this->im,$this->newimage,0,0,0,0,$this->size[0],$this->size[1]);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		imagedestroy($this->newimage);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:		if (is_resource($this->thumb)) {
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$temparray=$this->Displacementmap;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagedestroy($this->im);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->im=imagecreatetruecolor($this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagecopy($this->im,$this->thumb,0,0,0,0,$this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->size[0]=$this->thumbx;$this->size[1]=$this->thumby;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->Displacementmap=$this->Displacementmapthumb;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->displace();
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			$this->Displacementmap=$temparray;
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:			imagecopy($this->thumb,$this->im,0,0,0,0,$this->thumbx,$this->thumby);
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:					chmod($des_image, octdec($this->Chmodlevel));
common/lib/easyphpthumbnail/PHP4/easyphpthumbnail.class.php:				chmod($src_image, octdec($this->Chmodlevel));
common/lib/Thrift/Exception/TException.php:          $this->$var = $vals[$var];
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_readMap($key, $kspec, $input);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_readList($key, $kspec, $input, false);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_readList($key, $kspec, $input, true);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_readMap($val, $vspec, $input);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_readList($val, $vspec, $input, false);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_readList($val, $vspec, $input, true);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_readMap($elem, $espec, $input);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_readList($elem, $espec, $input, false);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_readList($elem, $espec, $input, true);
common/lib/Thrift/Exception/TException.php:            $xfer += $input->$func($this->$var);
common/lib/Thrift/Exception/TException.php:              $this->$var = new $class();
common/lib/Thrift/Exception/TException.php:              $xfer += $this->$var->read($input);
common/lib/Thrift/Exception/TException.php:              $xfer += $this->_readMap($this->$var, $fspec, $input);
common/lib/Thrift/Exception/TException.php:              $xfer += $this->_readList($this->$var, $fspec, $input, false);
common/lib/Thrift/Exception/TException.php:              $xfer += $this->_readList($this->$var, $fspec, $input, true);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_writeMap($key, $kspec, $output);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_writeList($key, $kspec, $output, false);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_writeList($key, $kspec, $output, true);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_writeMap($val, $vspec, $output);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_writeList($val, $vspec, $output, false);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_writeList($val, $vspec, $output, true);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_writeMap($elem, $espec, $output);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_writeList($elem, $espec, $output, false);
common/lib/Thrift/Exception/TException.php:          $xfer += $this->_writeList($elem, $espec, $output, true);
common/lib/Thrift/Exception/TException.php:      if ($this->$var !== null) {
common/lib/Thrift/Exception/TException.php:          $xfer += $output->$func($this->$var);
common/lib/Thrift/Exception/TException.php:            $xfer += $this->$var->write($output);
common/lib/Thrift/Exception/TException.php:            $xfer += $this->_writeMap($this->$var, $fspec, $output);
common/lib/Thrift/Exception/TException.php:            $xfer += $this->_writeList($this->$var, $fspec, $output, false);
common/lib/Thrift/Exception/TException.php:            $xfer += $this->_writeList($this->$var, $fspec, $output, true);
common/lib/Thrift/Exception/TApplicationException.php:    return $this->_read('TApplicationException', self::$_TSPEC, $output);
common/lib/Thrift/Exception/TApplicationException.php:    if ($message = $this->getMessage()) {
common/lib/Thrift/Exception/TApplicationException.php:    if ($code = $this->getCode()) {
common/lib/Thrift/ClassLoader/ThriftClassLoader.php:        $this->apc = $apc;
common/lib/Thrift/ClassLoader/ThriftClassLoader.php:        $this->apc_prefix = $apc_prefix;
common/lib/Thrift/ClassLoader/ThriftClassLoader.php:        $this->namespaces[$namespace] = (array) $paths;
common/lib/Thrift/ClassLoader/ThriftClassLoader.php:        $this->definitions[$namespace] = (array) $paths;
common/lib/Thrift/ClassLoader/ThriftClassLoader.php:            (true === $this->apc && ($file = $this->findFileInApc($class))) or
common/lib/Thrift/ClassLoader/ThriftClassLoader.php:            ($file = $this->findFile($class))
common/lib/Thrift/ClassLoader/ThriftClassLoader.php:        if (false === $file = apc_fetch($this->apc_prefix.$class)) {
common/lib/Thrift/ClassLoader/ThriftClassLoader.php:            apc_store($this->apc_prefix.$class, $file = $this->findFile($class));
common/lib/Thrift/ClassLoader/ThriftClassLoader.php:            foreach ($this->namespaces as $ns => $dirs) {
common/lib/Thrift/ClassLoader/ThriftClassLoader.php:            foreach ($this->definitions as $ns => $dirs) {
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeContextStack_[] = $this->writeContext_;
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeContext_ = $c;
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeContext_ = array_pop($this->writeContextStack_);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        if ($this->writeContext_->isMapKey()) {
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeContext_->write();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->trans_->write(json_encode((string)$b));
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $isMapKey = $this->writeContext_->isMapKey();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeContext_->write();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:            $this->trans_->write(self::QUOTE);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->trans_->write((int)$num);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:            $this->trans_->write(self::QUOTE);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $isMapKey = $this->writeContext_->isMapKey();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeContext_->write();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:            $this->trans_->write(self::QUOTE);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->trans_->write(json_encode((float)$num));
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:            $this->trans_->write(self::QUOTE);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeContext_ = new Context();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->trans_->write(self::LBRACKET);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->pushWriteContext(new ListContext($this));
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeJSONString($name);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeJSONInteger($type);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeJSONInteger($seqid);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->popWriteContext();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->trans_->write(self::RBRACKET);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeContext_->write();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->trans_->write(self::LBRACE);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->pushWriteContext(new StructContext($this));
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->popWriteContext();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->trans_->write(self::RBRACE);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeJSONString($fieldName);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->assertContextIsNotMapKey(self::NAME_MAP);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeContext_->write();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->trans_->write(self::LBRACE);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->pushWriteContext(new MapContext($this));
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->popWriteContext();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->trans_->write(self::RBRACE);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->assertContextIsNotMapKey(self::NAME_LIST);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeContext_->write();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->trans_->write(self::LBRACKET);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->pushWriteContext(new ListContext($this));
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->popWriteContext();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->trans_->write(self::RBRACKET);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->assertContextIsNotMapKey(self::NAME_SET);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeContext_->write();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->trans_->write(self::LBRACKET);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->pushWriteContext(new ListContext($this));
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->popWriteContext();
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->trans_->write(self::RBRACKET);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeJSONInteger($bool ? 1 : 0);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeJSONInteger($byte);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeJSONInteger($i16);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeJSONInteger($i32);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeJSONInteger($i64);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeJSONDouble($dub);
common/lib/Thrift/Protocol/TSimpleJSONProtocol.php:        $this->writeJSONString($str);
common/lib/Thrift/Protocol/TMultiplexedProtocol.php:        $this->serviceName_ = $serviceName;
common/lib/Thrift/Protocol/TMultiplexedProtocol.php:            $nameWithService = $this->serviceName_ . self::SEPARATOR . $name;
common/lib/Thrift/Protocol/JSON/ListContext.php:        $this->p_ = $p;
common/lib/Thrift/Protocol/JSON/ListContext.php:        if ($this->first_) {
common/lib/Thrift/Protocol/JSON/ListContext.php:            $this->first_ = false;
common/lib/Thrift/Protocol/JSON/ListContext.php:            $this->p_->getTransport()->write(TJSONProtocol::COMMA);
common/lib/Thrift/Protocol/JSON/ListContext.php:        if ($this->first_) {
common/lib/Thrift/Protocol/JSON/ListContext.php:            $this->first_ = false;
common/lib/Thrift/Protocol/JSON/ListContext.php:            $this->p_->readJSONSyntaxChar(TJSONProtocol::COMMA);
common/lib/Thrift/Protocol/JSON/PairContext.php:        $this->p_ = $p;
common/lib/Thrift/Protocol/JSON/PairContext.php:        if ($this->first_) {
common/lib/Thrift/Protocol/JSON/PairContext.php:            $this->first_ = false;
common/lib/Thrift/Protocol/JSON/PairContext.php:            $this->colon_ = true;
common/lib/Thrift/Protocol/JSON/PairContext.php:            $this->p_->getTransport()->write($this->colon_ ? TJSONProtocol::COLON : TJSONProtocol::COMMA);
common/lib/Thrift/Protocol/JSON/PairContext.php:            $this->colon_ = !$this->colon_;
common/lib/Thrift/Protocol/JSON/PairContext.php:        if ($this->first_) {
common/lib/Thrift/Protocol/JSON/PairContext.php:            $this->first_ = false;
common/lib/Thrift/Protocol/JSON/PairContext.php:            $this->colon_ = true;
common/lib/Thrift/Protocol/JSON/PairContext.php:            $this->p_->readJSONSyntaxChar($this->colon_ ? TJSONProtocol::COLON : TJSONProtocol::COMMA);
common/lib/Thrift/Protocol/JSON/PairContext.php:            $this->colon_ = !$this->colon_;
common/lib/Thrift/Protocol/JSON/PairContext.php:        return $this->colon_;
common/lib/Thrift/Protocol/JSON/LookaheadReader.php:        $this->p_ = $p;
common/lib/Thrift/Protocol/JSON/LookaheadReader.php:        if ($this->hasData_) {
common/lib/Thrift/Protocol/JSON/LookaheadReader.php:            $this->hasData_ = false;
common/lib/Thrift/Protocol/JSON/LookaheadReader.php:            $this->data_ = $this->p_->getTransport()->readAll(1);
common/lib/Thrift/Protocol/JSON/LookaheadReader.php:        return substr($this->data_, 0, 1);
common/lib/Thrift/Protocol/JSON/LookaheadReader.php:        if (!$this->hasData_) {
common/lib/Thrift/Protocol/JSON/LookaheadReader.php:            $this->data_ = $this->p_->getTransport()->readAll(1);
common/lib/Thrift/Protocol/JSON/LookaheadReader.php:        $this->hasData_ = true;
common/lib/Thrift/Protocol/JSON/LookaheadReader.php:        return substr($this->data_, 0, 1);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        $this->concreteProtocol_ = $protocol;
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeMessageBegin($name, $type, $seqid);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeMessageEnd();
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeStructBegin($name);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeStructEnd();
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeFieldBegin($fieldName, $fieldType, $fieldId);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeFieldEnd();
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeFieldStop();
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeMapBegin($keyType, $valType, $size);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeMapEnd();
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeListBegin($elemType, $size);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeListEnd();
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeSetBegin($elemType, $size);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeSetEnd();
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeBool($bool);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeByte($byte);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeI16($i16);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeI32($i32);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeI64($i64);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeDouble($dub);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->writeString($str);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readMessageBegin($name, $type, $seqid);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readMessageEnd();
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readStructBegin($name);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readStructEnd();
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readFieldBegin($name, $fieldType, $fieldId);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readFieldEnd();
common/lib/Thrift/Protocol/TProtocolDecorator.php:        $this->concreteProtocol_->readMapBegin($keyType, $valType, $size);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readMapEnd();
common/lib/Thrift/Protocol/TProtocolDecorator.php:        $this->concreteProtocol_->readListBegin($elemType, $size);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readListEnd();
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readSetBegin($elemType, $size);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readSetEnd();
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readBool($bool);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readByte($byte);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readI16($i16);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readI32($i32);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readI64($i64);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readDouble($dub);
common/lib/Thrift/Protocol/TProtocolDecorator.php:        return $this->concreteProtocol_->readString($str);
common/lib/Thrift/Factory/TBinaryProtocolFactory.php:    $this->strictRead_ = $strictRead;
common/lib/Thrift/Factory/TBinaryProtocolFactory.php:    $this->strictWrite_ = $strictWrite;
common/lib/Thrift/Factory/TBinaryProtocolFactory.php:    return new TBinaryProtocol($trans, $this->strictRead_, $this->strictWrite_);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $out = $this->getVarint($data);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->trans_->write($out, $result);
common/lib/Thrift/Protocol/TCompactProtocol.php:      $x = $this->trans_->readAll(1);
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->writeUByte(TCompactProtocol::PROTOCOL_ID) +
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->writeUByte(TCompactProtocol::VERSION |
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->writeVarint($seqid) +
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->writeString($name);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->state = TCompactProtocol::STATE_VALUE_WRITE;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->state = TCompactProtocol::STATE_CLEAR;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->structs[] = array($this->state, $this->lastFid);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->state = TCompactProtocol::STATE_FIELD_WRITE;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->lastFid = 0;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $old_values = array_pop($this->structs);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->state = $old_values[0];
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->lastFid = $old_values[1];
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->writeByte(0);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $delta = $fid - $this->lastFid;
common/lib/Thrift/Protocol/TCompactProtocol.php:      $written = $this->writeUByte(($delta << 4) | $type);
common/lib/Thrift/Protocol/TCompactProtocol.php:      $written = $this->writeByte($type) +
common/lib/Thrift/Protocol/TCompactProtocol.php:        $this->writeI16($fid);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->lastFid = $fid;
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->state = TCompactProtocol::STATE_BOOL_WRITE;
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->boolFid = $field_id;
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->state = TCompactProtocol::STATE_VALUE_WRITE;
common/lib/Thrift/Protocol/TCompactProtocol.php:      return $this->writeFieldHeader(self::$ctypes[$field_type], $field_id);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->state = TCompactProtocol::STATE_FIELD_WRITE;
common/lib/Thrift/Protocol/TCompactProtocol.php:      $written = $this->writeUByte($size << 4 |
common/lib/Thrift/Protocol/TCompactProtocol.php:      $written = $this->writeUByte(0xf0 |
common/lib/Thrift/Protocol/TCompactProtocol.php:        $this->writeVarint($size);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->containers[] = $this->state;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->state = TCompactProtocol::STATE_CONTAINER_WRITE;
common/lib/Thrift/Protocol/TCompactProtocol.php:      $written = $this->writeByte(0);
common/lib/Thrift/Protocol/TCompactProtocol.php:      $written = $this->writeVarint($size) +
common/lib/Thrift/Protocol/TCompactProtocol.php:        $this->writeUByte(self::$ctypes[$key_type] << 4 |
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->containers[] = $this->state;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->state = array_pop($this->containers);
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->writeCollectionEnd();
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->writeCollectionBegin($elem_type, $size);
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->writeCollectionEnd();
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->writeCollectionBegin($elem_type, $size);
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->writeCollectionEnd();
common/lib/Thrift/Protocol/TCompactProtocol.php:    if ($this->state == TCompactProtocol::STATE_BOOL_WRITE) {
common/lib/Thrift/Protocol/TCompactProtocol.php:      return $this->writeFieldHeader($ctype, $this->boolFid);
common/lib/Thrift/Protocol/TCompactProtocol.php:    } elseif ($this->state == TCompactProtocol::STATE_CONTAINER_WRITE) {
common/lib/Thrift/Protocol/TCompactProtocol.php:      return $this->writeByte($value ? 1 : 0);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->trans_->write($data, 1);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->trans_->write(pack('C', $byte), 1);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $thing = $this->toZigZag($value, 16);
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->writeVarint($thing);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $thing = $this->toZigZag($value, 32);
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->writeVarint($thing);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->trans_->write($data, 8);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $result = $this->writeVarint($len);
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->trans_->write($value, $len);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $result = $this->readUByte($compact_type_and_delta);
common/lib/Thrift/Protocol/TCompactProtocol.php:      $result += $this->readI16($field_id);
common/lib/Thrift/Protocol/TCompactProtocol.php:      $field_id = $this->lastFid + $delta;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->lastFid = $field_id;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $field_type = $this->getTType($compact_type);
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->state = TCompactProtocol::STATE_BOOL_READ;
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->boolValue = true;
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->state = TCompactProtocol::STATE_BOOL_READ;
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->boolValue = false;
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->state = TCompactProtocol::STATE_VALUE_READ;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->state = TCompactProtocol::STATE_FIELD_READ;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $data = $this->trans_->readAll(1);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $data = $this->trans_->readAll(1);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $result = $this->readVarint($value);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $value = $this->fromZigZag($value);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $result = $this->readUByte($protoId);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $result += $this->readUByte($verType);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $result += $this->readVarint($seqid);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $result += $this->readString($name);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->structs[] = array($this->state, $this->lastFid);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->state = TCompactProtocol::STATE_FIELD_READ;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->lastFid = 0;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $last = array_pop($this->structs);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->state = $last[0];
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->lastFid = $last[1];
common/lib/Thrift/Protocol/TCompactProtocol.php:    $result = $this->readUByte($sizeType);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $type = $this->getTType($sizeType);
common/lib/Thrift/Protocol/TCompactProtocol.php:      $result += $this->readVarint($size);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->containers[] = $this->state;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->state = TCompactProtocol::STATE_CONTAINER_READ;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $result = $this->readVarint($size);
common/lib/Thrift/Protocol/TCompactProtocol.php:      $result += $this->readUByte($types);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $val_type = $this->getTType($types);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $key_type = $this->getTType($types >> 4);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->containers[] = $this->state;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->state = TCompactProtocol::STATE_CONTAINER_READ;
common/lib/Thrift/Protocol/TCompactProtocol.php:    $this->state = array_pop($this->containers);
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->readCollectionEnd();
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->readCollectionBegin($elem_type, $size);
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->readCollectionEnd();
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->readCollectionBegin($elem_type, $size);
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->readCollectionEnd();
common/lib/Thrift/Protocol/TCompactProtocol.php:    if ($this->state == TCompactProtocol::STATE_BOOL_READ) {
common/lib/Thrift/Protocol/TCompactProtocol.php:      $value = $this->boolValue;
common/lib/Thrift/Protocol/TCompactProtocol.php:    } elseif ($this->state == TCompactProtocol::STATE_CONTAINER_READ) {
common/lib/Thrift/Protocol/TCompactProtocol.php:      return $this->readByte($value);
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->readZigZag($value);
common/lib/Thrift/Protocol/TCompactProtocol.php:    return $this->readZigZag($value);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $data = $this->trans_->readAll(8);
common/lib/Thrift/Protocol/TCompactProtocol.php:    $result = $this->readVarint($len);
common/lib/Thrift/Protocol/TCompactProtocol.php:      $value = $this->trans_->readAll($len);
common/lib/Thrift/Protocol/TCompactProtocol.php:      $x = $this->trans_->readAll(1);
common/lib/Thrift/Protocol/TCompactProtocol.php:      $this->trans_->write($out, $ret);
common/lib/Thrift/Protocol/TCompactProtocol.php:      return $this->writeVarint($this->toZigZag($value, 64));
common/lib/Thrift/Protocol/TProtocol.php:    $this->trans_ = $trans;
common/lib/Thrift/Protocol/TProtocol.php:    return $this->trans_;
common/lib/Thrift/Protocol/TProtocol.php:      return $this->readBool($bool);
common/lib/Thrift/Protocol/TProtocol.php:      return $this->readByte($byte);
common/lib/Thrift/Protocol/TProtocol.php:      return $this->readI16($i16);
common/lib/Thrift/Protocol/TProtocol.php:      return $this->readI32($i32);
common/lib/Thrift/Protocol/TProtocol.php:      return $this->readI64($i64);
common/lib/Thrift/Protocol/TProtocol.php:      return $this->readDouble($dub);
common/lib/Thrift/Protocol/TProtocol.php:      return $this->readString($str);
common/lib/Thrift/Protocol/TProtocol.php:        $result = $this->readStructBegin($name);
common/lib/Thrift/Protocol/TProtocol.php:          $result += $this->readFieldBegin($name, $ftype, $fid);
common/lib/Thrift/Protocol/TProtocol.php:          $result += $this->skip($ftype);
common/lib/Thrift/Protocol/TProtocol.php:          $result += $this->readFieldEnd();
common/lib/Thrift/Protocol/TProtocol.php:        $result += $this->readStructEnd();
common/lib/Thrift/Protocol/TProtocol.php:        $result = $this->readMapBegin($keyType, $valType, $size);
common/lib/Thrift/Protocol/TProtocol.php:          $result += $this->skip($keyType);
common/lib/Thrift/Protocol/TProtocol.php:          $result += $this->skip($valType);
common/lib/Thrift/Protocol/TProtocol.php:        $result += $this->readMapEnd();
common/lib/Thrift/Protocol/TProtocol.php:        $result = $this->readSetBegin($elemType, $size);
common/lib/Thrift/Protocol/TProtocol.php:          $result += $this->skip($elemType);
common/lib/Thrift/Protocol/TProtocol.php:        $result += $this->readSetEnd();
common/lib/Thrift/Protocol/TProtocol.php:        $result = $this->readListBegin($elemType, $size);
common/lib/Thrift/Protocol/TProtocol.php:          $result += $this->skip($elemType);
common/lib/Thrift/Protocol/TProtocol.php:        $result += $this->readListEnd();
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $this->strictRead_ = $strictRead;
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $this->strictWrite_ = $strictWrite;
common/lib/Thrift/Protocol/TBinaryProtocol.php:    if ($this->strictWrite_) {
common/lib/Thrift/Protocol/TBinaryProtocol.php:        $this->writeI32($version) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:        $this->writeString($name) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:        $this->writeI32($seqid);
common/lib/Thrift/Protocol/TBinaryProtocol.php:        $this->writeString($name) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:        $this->writeByte($type) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:        $this->writeI32($seqid);
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->writeByte($fieldType) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->writeI16($fieldId);
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->writeByte(TType::STOP);
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->writeByte($keyType) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->writeByte($valType) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->writeI32($size);
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->writeByte($elemType) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->writeI32($size);
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->writeByte($elemType) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->writeI32($size);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $this->trans_->write($data, 1);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $this->trans_->write($data, 1);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $this->trans_->write($data, 2);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $this->trans_->write($data, 4);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $this->trans_->write($data, 8);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $this->trans_->write(strrev($data), 8);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $result = $this->writeI32($len);
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->trans_->write($value, $len);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $result = $this->readI32($sz);
common/lib/Thrift/Protocol/TBinaryProtocol.php:        $this->readString($name) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:        $this->readI32($seqid);
common/lib/Thrift/Protocol/TBinaryProtocol.php:      if ($this->strictRead_) {
common/lib/Thrift/Protocol/TBinaryProtocol.php:        $name = $this->trans_->readAll($sz);
common/lib/Thrift/Protocol/TBinaryProtocol.php:          $this->readByte($type) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:          $this->readI32($seqid);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $result = $this->readByte($fieldType);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $result += $this->readI16($fieldId);
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->readByte($keyType) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->readByte($valType) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->readI32($size);
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->readByte($elemType) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->readI32($size);
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->readByte($elemType) +
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $this->readI32($size);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $data = $this->trans_->readAll(1);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $data = $this->trans_->readAll(1);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $data = $this->trans_->readAll(2);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $data = $this->trans_->readAll(4);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $data = $this->trans_->readAll(8);
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $data = strrev($this->trans_->readAll(8));
common/lib/Thrift/Protocol/TBinaryProtocol.php:    $result = $this->readI32($len);
common/lib/Thrift/Protocol/TBinaryProtocol.php:      $value = $this->trans_->readAll($len);
common/lib/Thrift/Protocol/TJSONProtocol.php:        array_push($this->contextStack_, $this->context_);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_ = $c;
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_ = array_pop($this->contextStack_);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_ = new BaseContext();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->reader_ = new LookaheadReader($this);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->contextStack_ = array();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_ = new BaseContext();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->reader_ = new LookaheadReader($this);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $ch = $this->reader_->read();
common/lib/Thrift/Protocol/TJSONProtocol.php:        if ($this->hasJSONUnescapedUnicode()) {
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_->write();
common/lib/Thrift/Protocol/TJSONProtocol.php:        if (is_numeric($b) && $this->context_->escapeNum()) {
common/lib/Thrift/Protocol/TJSONProtocol.php:            $this->trans_->write(self::QUOTE);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->trans_->write($this->unescapedUnicode($b));
common/lib/Thrift/Protocol/TJSONProtocol.php:        if (is_numeric($b) && $this->context_->escapeNum()) {
common/lib/Thrift/Protocol/TJSONProtocol.php:            $this->trans_->write(self::QUOTE);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_->write();
common/lib/Thrift/Protocol/TJSONProtocol.php:        if ($this->context_->escapeNum()) {
common/lib/Thrift/Protocol/TJSONProtocol.php:            $this->trans_->write(self::QUOTE);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->trans_->write($num);
common/lib/Thrift/Protocol/TJSONProtocol.php:        if ($this->context_->escapeNum()) {
common/lib/Thrift/Protocol/TJSONProtocol.php:            $this->trans_->write(self::QUOTE);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_->write();
common/lib/Thrift/Protocol/TJSONProtocol.php:        if ($this->context_->escapeNum()) {
common/lib/Thrift/Protocol/TJSONProtocol.php:            $this->trans_->write(self::QUOTE);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->trans_->write(json_encode($num));
common/lib/Thrift/Protocol/TJSONProtocol.php:        if ($this->context_->escapeNum()) {
common/lib/Thrift/Protocol/TJSONProtocol.php:            $this->trans_->write(self::QUOTE);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_->write();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->trans_->write(self::QUOTE);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->trans_->write(json_encode(base64_encode($data)));
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->trans_->write(self::QUOTE);
common/lib/Thrift/Protocol/TJSONProtocol.php:      $this->context_->write();
common/lib/Thrift/Protocol/TJSONProtocol.php:      $this->trans_->write(self::LBRACE);
common/lib/Thrift/Protocol/TJSONProtocol.php:      $this->pushContext(new PairContext($this));
common/lib/Thrift/Protocol/TJSONProtocol.php:      $this->popContext();
common/lib/Thrift/Protocol/TJSONProtocol.php:      $this->trans_->write(self::RBRACE);
common/lib/Thrift/Protocol/TJSONProtocol.php:      $this->context_->write();
common/lib/Thrift/Protocol/TJSONProtocol.php:      $this->trans_->write(self::LBRACKET);
common/lib/Thrift/Protocol/TJSONProtocol.php:      $this->pushContext(new ListContext($this));
common/lib/Thrift/Protocol/TJSONProtocol.php:      $this->popContext();
common/lib/Thrift/Protocol/TJSONProtocol.php:      $this->trans_->write(self::RBRACKET);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_->read();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $ch = $this->reader_->read();
common/lib/Thrift/Protocol/TJSONProtocol.php:            $ch = $this->reader_->peek();
common/lib/Thrift/Protocol/TJSONProtocol.php:            if (!$this->isJSONNumeric($ch)) {
common/lib/Thrift/Protocol/TJSONProtocol.php:            $strbld[] = $this->reader_->read();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_->read();
common/lib/Thrift/Protocol/TJSONProtocol.php:        if ($this->context_->escapeNum()) {
common/lib/Thrift/Protocol/TJSONProtocol.php:            $this->readJSONSyntaxChar(self::QUOTE);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $str = $this->readJSONNumericChars();
common/lib/Thrift/Protocol/TJSONProtocol.php:        if ($this->context_->escapeNum()) {
common/lib/Thrift/Protocol/TJSONProtocol.php:            $this->readJSONSyntaxChar(self::QUOTE);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_->read();
common/lib/Thrift/Protocol/TJSONProtocol.php:        if ($this->context_->escapeNum()) {
common/lib/Thrift/Protocol/TJSONProtocol.php:            $this->readJSONSyntaxChar(self::QUOTE);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $str = $this->readJSONNumericChars();
common/lib/Thrift/Protocol/TJSONProtocol.php:        if ($this->context_->escapeNum()) {
common/lib/Thrift/Protocol/TJSONProtocol.php:            $this->readJSONSyntaxChar(self::QUOTE);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_->read();
common/lib/Thrift/Protocol/TJSONProtocol.php:        if (substr($this->reader_->peek(), 0, 1) == self::QUOTE) {
common/lib/Thrift/Protocol/TJSONProtocol.php:            $arr = $this->readJSONString(true);
common/lib/Thrift/Protocol/TJSONProtocol.php:            } elseif (!$this->context_->escapeNum()) {
common/lib/Thrift/Protocol/TJSONProtocol.php:            if ($this->context_->escapeNum()) {
common/lib/Thrift/Protocol/TJSONProtocol.php:                $this->readJSONSyntaxChar(self::QUOTE);
common/lib/Thrift/Protocol/TJSONProtocol.php:            return floatval($this->readJSONNumericChars());
common/lib/Thrift/Protocol/TJSONProtocol.php:        $arr = $this->readJSONString(false);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_->read();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONSyntaxChar(self::LBRACE);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->pushContext(new PairContext($this));
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONSyntaxChar(self::RBRACE);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->popContext();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->context_->read();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONSyntaxChar(self::LBRACKET);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->pushContext(new ListContext($this));
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONSyntaxChar(self::RBRACKET);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->popContext();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONArrayStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONInteger(self::VERSION);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONString($name);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONInteger($type);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONInteger($seqid);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONArrayEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONObjectStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONObjectEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONInteger($fieldId);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONObjectStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONString($this->getTypeNameForTypeID($fieldType));
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJsonObjectEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONArrayStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONString($this->getTypeNameForTypeID($keyType));
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONString($this->getTypeNameForTypeID($valType));
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONInteger($size);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONObjectStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONObjectEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONArrayEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONArrayStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONString($this->getTypeNameForTypeID($elemType));
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONInteger($size);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONArrayEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONArrayStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONString($this->getTypeNameForTypeID($elemType));
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONInteger($size);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONArrayEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONInteger($bool ? 1 : 0);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONInteger($byte);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONInteger($i16);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONInteger($i32);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONInteger($i64);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONDouble($dub);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->writeJSONString($str);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONArrayStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:        if ($this->readJSONInteger() != self::VERSION) {
common/lib/Thrift/Protocol/TJSONProtocol.php:        $name = $this->readJSONString(false);
common/lib/Thrift/Protocol/TJSONProtocol.php:        $type = $this->readJSONInteger();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $seqid = $this->readJSONInteger();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONArrayEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONObjectStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONObjectEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $ch = $this->reader_->peek();
common/lib/Thrift/Protocol/TJSONProtocol.php:            $fieldId = $this->readJSONInteger();
common/lib/Thrift/Protocol/TJSONProtocol.php:            $this->readJSONObjectStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:            $fieldType = $this->getTypeIDForTypeName($this->readJSONString(false));
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONObjectEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONArrayStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $keyType = $this->getTypeIDForTypeName($this->readJSONString(false));
common/lib/Thrift/Protocol/TJSONProtocol.php:        $valType = $this->getTypeIDForTypeName($this->readJSONString(false));
common/lib/Thrift/Protocol/TJSONProtocol.php:        $size = $this->readJSONInteger();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONObjectStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONObjectEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONArrayEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONArrayStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $elemType = $this->getTypeIDForTypeName($this->readJSONString(false));
common/lib/Thrift/Protocol/TJSONProtocol.php:        $size = $this->readJSONInteger();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONArrayEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONArrayStart();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $elemType = $this->getTypeIDForTypeName($this->readJSONString(false));
common/lib/Thrift/Protocol/TJSONProtocol.php:        $size = $this->readJSONInteger();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $this->readJSONArrayEnd();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $bool = $this->readJSONInteger() == 0 ? false : true;
common/lib/Thrift/Protocol/TJSONProtocol.php:        $byte = $this->readJSONInteger();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $i16 = $this->readJSONInteger();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $i32 = $this->readJSONInteger();
common/lib/Thrift/Protocol/TJSONProtocol.php:            $i64 = $this->readJSONIntegerAsString();
common/lib/Thrift/Protocol/TJSONProtocol.php:            $i64 = $this->readJSONInteger();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $dub = $this->readJSONDouble();
common/lib/Thrift/Protocol/TJSONProtocol.php:        $str = $this->readJSONString(false);
common/lib/Thrift/Protocol/SimpleJSON/ListContext.php:        $this->p_ = $p;
common/lib/Thrift/Protocol/SimpleJSON/ListContext.php:        if ($this->first_) {
common/lib/Thrift/Protocol/SimpleJSON/ListContext.php:            $this->first_ = false;
common/lib/Thrift/Protocol/SimpleJSON/ListContext.php:            $this->p_->getTransport()->write(TSimpleJSONProtocol::COMMA);
common/lib/Thrift/Protocol/SimpleJSON/StructContext.php:        $this->p_ = $p;
common/lib/Thrift/Protocol/SimpleJSON/StructContext.php:        if ($this->first_) {
common/lib/Thrift/Protocol/SimpleJSON/StructContext.php:            $this->first_ = false;
common/lib/Thrift/Protocol/SimpleJSON/StructContext.php:            $this->colon_ = true;
common/lib/Thrift/Protocol/SimpleJSON/StructContext.php:            $this->p_->getTransport()->write(
common/lib/Thrift/Protocol/SimpleJSON/StructContext.php:                $this->colon_ ?
common/lib/Thrift/Protocol/SimpleJSON/StructContext.php:            $this->colon_ = !$this->colon_;
common/lib/Thrift/Protocol/TBinaryProtocolAccelerated.php:    return $this->strictRead_;
common/lib/Thrift/Protocol/TBinaryProtocolAccelerated.php:    return $this->strictWrite_;
common/lib/Thrift/Protocol/SimpleJSON/MapContext.php:        $this->isKey = !$this->isKey;
common/lib/Thrift/Protocol/SimpleJSON/MapContext.php:        return $this->isKey;
common/lib/Thrift/TMultiplexedProcessor.php:        $this->serviceProcessorMap_[$serviceName] = $processor;
common/lib/Thrift/TMultiplexedProcessor.php:        if (!array_key_exists($serviceName, $this->serviceProcessorMap_)) {
common/lib/Thrift/TMultiplexedProcessor.php:        $processor = $this->serviceProcessorMap_[$serviceName];
common/lib/Thrift/TMultiplexedProcessor.php:        $this->fname_  = $fname;
common/lib/Thrift/TMultiplexedProcessor.php:        $this->mtype_  = $mtype;
common/lib/Thrift/TMultiplexedProcessor.php:        $this->rseqid_ = $rseqid;
common/lib/Thrift/TMultiplexedProcessor.php:        $name  = $this->fname_;
common/lib/Thrift/TMultiplexedProcessor.php:        $type  = $this->mtype_;
common/lib/Thrift/TMultiplexedProcessor.php:        $seqid = $this->rseqid_;
common/lib/Thrift/Server/TServerTransport.php:    $transport = $this->acceptImpl();
common/lib/Thrift/Transport/TTransport.php:    // return $this->read($len);
common/lib/Thrift/Transport/TTransport.php:      $data .= $this->read($len - $got);
common/lib/Thrift/Transport/TSSLSocket.php:    $this->host_ = $this->getSSLHost($host);
common/lib/Thrift/Transport/TSSLSocket.php:    $this->port_ = $port;
common/lib/Thrift/Transport/TSSLSocket.php:    $this->context_ = $context;
common/lib/Thrift/Transport/TSSLSocket.php:    $this->debugHandler_ = $debugHandler ? $debugHandler : 'error_log';
common/lib/Thrift/Transport/TSSLSocket.php:    if ($this->isOpen()) {
common/lib/Thrift/Transport/TSSLSocket.php:    if (empty($this->host_)) {
common/lib/Thrift/Transport/TSSLSocket.php:    if ($this->port_ <= 0) {
common/lib/Thrift/Transport/TSSLSocket.php:    $this->handle_ = @stream_socket_client($this->host_.':'.$this->port_,
common/lib/Thrift/Transport/TSSLSocket.php:                                          $this->sendTimeoutSec_ + ($this->sendTimeoutUsec_ / 1000000),
common/lib/Thrift/Transport/TSSLSocket.php:                                          $this->context_);
common/lib/Thrift/Transport/TSSLSocket.php:    if ($this->handle_ === FALSE) {
common/lib/Thrift/Transport/TSSLSocket.php:      $error = 'TSocket: Could not connect to '.$this->host_.':'.$this->port_.' ('.$errstr.' ['.$errno.'])';
common/lib/Thrift/Transport/TSSLSocket.php:      if ($this->debug_) {
common/lib/Thrift/Transport/TSSLSocket.php:        call_user_func($this->debugHandler_, $error);
common/lib/Thrift/Transport/TBufferedTransport.php:    $this->transport_ = $transport;
common/lib/Thrift/Transport/TBufferedTransport.php:    $this->rBufSize_ = $rBufSize;
common/lib/Thrift/Transport/TBufferedTransport.php:    $this->wBufSize_ = $wBufSize;
common/lib/Thrift/Transport/TBufferedTransport.php:    return $this->transport_->isOpen();
common/lib/Thrift/Transport/TBufferedTransport.php:    $this->transport_->open();
common/lib/Thrift/Transport/TBufferedTransport.php:    $this->transport_->close();
common/lib/Thrift/Transport/TBufferedTransport.php:    if (TStringFuncFactory::create()->strlen($this->rBuf_) === 0) {
common/lib/Thrift/Transport/TBufferedTransport.php:      $this->rBuf_ = $data;
common/lib/Thrift/Transport/TBufferedTransport.php:      $this->rBuf_ = ($data . $this->rBuf_);
common/lib/Thrift/Transport/TBufferedTransport.php:    $have = TStringFuncFactory::create()->strlen($this->rBuf_);
common/lib/Thrift/Transport/TBufferedTransport.php:      $data = $this->transport_->readAll($len);
common/lib/Thrift/Transport/TBufferedTransport.php:      $data = $this->rBuf_;
common/lib/Thrift/Transport/TBufferedTransport.php:      $this->rBuf_ = '';
common/lib/Thrift/Transport/TBufferedTransport.php:      $data .= $this->transport_->readAll($len - $have);
common/lib/Thrift/Transport/TBufferedTransport.php:      $data = $this->rBuf_;
common/lib/Thrift/Transport/TBufferedTransport.php:      $this->rBuf_ = '';
common/lib/Thrift/Transport/TBufferedTransport.php:      $data = TStringFuncFactory::create()->substr($this->rBuf_, 0, $len);
common/lib/Thrift/Transport/TBufferedTransport.php:      $this->rBuf_ = TStringFuncFactory::create()->substr($this->rBuf_, $len);
common/lib/Thrift/Transport/TBufferedTransport.php:    if (TStringFuncFactory::create()->strlen($this->rBuf_) === 0) {
common/lib/Thrift/Transport/TBufferedTransport.php:      $this->rBuf_ = $this->transport_->read($this->rBufSize_);
common/lib/Thrift/Transport/TBufferedTransport.php:    if (TStringFuncFactory::create()->strlen($this->rBuf_) <= $len) {
common/lib/Thrift/Transport/TBufferedTransport.php:      $ret = $this->rBuf_;
common/lib/Thrift/Transport/TBufferedTransport.php:      $this->rBuf_ = '';
common/lib/Thrift/Transport/TBufferedTransport.php:    $ret = TStringFuncFactory::create()->substr($this->rBuf_, 0, $len);
common/lib/Thrift/Transport/TBufferedTransport.php:    $this->rBuf_ = TStringFuncFactory::create()->substr($this->rBuf_, $len);
common/lib/Thrift/Transport/TBufferedTransport.php:    $this->wBuf_ .= $buf;
common/lib/Thrift/Transport/TBufferedTransport.php:    if (TStringFuncFactory::create()->strlen($this->wBuf_) >= $this->wBufSize_) {
common/lib/Thrift/Transport/TBufferedTransport.php:      $out = $this->wBuf_;
common/lib/Thrift/Transport/TBufferedTransport.php:      $this->wBuf_ = '';
common/lib/Thrift/Transport/TBufferedTransport.php:      $this->transport_->write($out);
common/lib/Thrift/Transport/TBufferedTransport.php:    if (TStringFuncFactory::create()->strlen($this->wBuf_) > 0) {
common/lib/Thrift/Transport/TBufferedTransport.php:      $out = $this->wBuf_;
common/lib/Thrift/Transport/TBufferedTransport.php:      $this->wBuf_ = '';
common/lib/Thrift/Transport/TBufferedTransport.php:      $this->transport_->write($out);
common/lib/Thrift/Transport/TBufferedTransport.php:    $this->transport_->flush();
common/lib/Thrift/Transport/TCurlClient.php:    $this->scheme_ = $scheme;
common/lib/Thrift/Transport/TCurlClient.php:    $this->host_ = $host;
common/lib/Thrift/Transport/TCurlClient.php:    $this->port_ = $port;
common/lib/Thrift/Transport/TCurlClient.php:    $this->uri_ = $uri;
common/lib/Thrift/Transport/TCurlClient.php:    $this->request_ = '';
common/lib/Thrift/Transport/TCurlClient.php:    $this->response_ = null;
common/lib/Thrift/Transport/TCurlClient.php:    $this->timeout_ = null;
common/lib/Thrift/Transport/TCurlClient.php:    $this->timeout_ = $timeout;
common/lib/Thrift/Transport/TCurlClient.php:    $this->request_ = '';
common/lib/Thrift/Transport/TCurlClient.php:    $this->response_ = null;
common/lib/Thrift/Transport/TCurlClient.php:    if ($len >= strlen($this->response_)) {
common/lib/Thrift/Transport/TCurlClient.php:      return $this->response_;
common/lib/Thrift/Transport/TCurlClient.php:      $ret = substr($this->response_, 0, $len);
common/lib/Thrift/Transport/TCurlClient.php:      $this->response_ = substr($this->response_, $len);
common/lib/Thrift/Transport/TCurlClient.php:    $this->request_ .= $buf;
common/lib/Thrift/Transport/TCurlClient.php:    $host = $this->host_.($this->port_ != 80 ? ':'.$this->port_ : '');
common/lib/Thrift/Transport/TCurlClient.php:    $fullUrl = $this->scheme_."://".$host.$this->uri_;
common/lib/Thrift/Transport/TCurlClient.php:                     'Content-Length: '.TStringFuncFactory::create()->strlen($this->request_));
common/lib/Thrift/Transport/TCurlClient.php:    if ($this->timeout_ > 0) {
common/lib/Thrift/Transport/TCurlClient.php:      curl_setopt(self::$curlHandle, CURLOPT_TIMEOUT, $this->timeout_);
common/lib/Thrift/Transport/TCurlClient.php:    curl_setopt(self::$curlHandle, CURLOPT_POSTFIELDS, $this->request_);
common/lib/Thrift/Transport/TCurlClient.php:    $this->request_ = '';
common/lib/Thrift/Transport/TCurlClient.php:    $this->response_ = curl_exec(self::$curlHandle);
common/lib/Thrift/Transport/TCurlClient.php:    if (!$this->response_) {
common/lib/Thrift/StringFunc/Mbstring.php:            $length = $this->strlen($str) - $start;
common/lib/Thrift/Transport/TFramedTransport.php:    $this->transport_ = $transport;
common/lib/Thrift/Transport/TFramedTransport.php:    $this->read_ = $read;
common/lib/Thrift/Transport/TFramedTransport.php:    $this->write_ = $write;
common/lib/Thrift/Transport/TFramedTransport.php:    return $this->transport_->isOpen();
common/lib/Thrift/Transport/TFramedTransport.php:    $this->transport_->open();
common/lib/Thrift/Transport/TFramedTransport.php:    $this->transport_->close();
common/lib/Thrift/Transport/TFramedTransport.php:    if (!$this->read_) {
common/lib/Thrift/Transport/TFramedTransport.php:      return $this->transport_->read($len);
common/lib/Thrift/Transport/TFramedTransport.php:    if (TStringFuncFactory::create()->strlen($this->rBuf_) === 0) {
common/lib/Thrift/Transport/TFramedTransport.php:      $this->readFrame();
common/lib/Thrift/Transport/TFramedTransport.php:    if ($len >= TStringFuncFactory::create()->strlen($this->rBuf_)) {
common/lib/Thrift/Transport/TFramedTransport.php:      $out = $this->rBuf_;
common/lib/Thrift/Transport/TFramedTransport.php:      $this->rBuf_ = null;
common/lib/Thrift/Transport/TFramedTransport.php:    $out = TStringFuncFactory::create()->substr($this->rBuf_, 0, $len);
common/lib/Thrift/Transport/TFramedTransport.php:    $this->rBuf_ = TStringFuncFactory::create()->substr($this->rBuf_, $len);
common/lib/Thrift/Transport/TFramedTransport.php:    if (TStringFuncFactory::create()->strlen($this->rBuf_) === 0) {
common/lib/Thrift/Transport/TFramedTransport.php:      $this->rBuf_ = $data;
common/lib/Thrift/Transport/TFramedTransport.php:      $this->rBuf_ = ($data . $this->rBuf_);
common/lib/Thrift/Transport/TFramedTransport.php:    $buf = $this->transport_->readAll(4);
common/lib/Thrift/Transport/TFramedTransport.php:    $this->rBuf_ = $this->transport_->readAll($sz);
common/lib/Thrift/Transport/TFramedTransport.php:    if (!$this->write_) {
common/lib/Thrift/Transport/TFramedTransport.php:      return $this->transport_->write($buf, $len);
common/lib/Thrift/Transport/TFramedTransport.php:    $this->wBuf_ .= $buf;
common/lib/Thrift/Transport/TFramedTransport.php:    if (!$this->write_ || TStringFuncFactory::create()->strlen($this->wBuf_) == 0) {
common/lib/Thrift/Transport/TFramedTransport.php:      return $this->transport_->flush();
common/lib/Thrift/Transport/TFramedTransport.php:    $out = pack('N', TStringFuncFactory::create()->strlen($this->wBuf_));
common/lib/Thrift/Transport/TFramedTransport.php:    $out .= $this->wBuf_;
common/lib/Thrift/Transport/TFramedTransport.php:    $this->wBuf_ = '';
common/lib/Thrift/Transport/TFramedTransport.php:    $this->transport_->write($out);
common/lib/Thrift/Transport/TFramedTransport.php:    $this->transport_->flush();
common/lib/Thrift/Transport/TSocket.php:    $this->host_ = $host;
common/lib/Thrift/Transport/TSocket.php:    $this->port_ = $port;
common/lib/Thrift/Transport/TSocket.php:    $this->persist_ = $persist;
common/lib/Thrift/Transport/TSocket.php:    $this->debugHandler_ = $debugHandler ? $debugHandler : 'error_log';
common/lib/Thrift/Transport/TSocket.php:    $this->handle_ = $handle;
common/lib/Thrift/Transport/TSocket.php:    $this->sendTimeoutSec_ = floor($timeout / 1000);
common/lib/Thrift/Transport/TSocket.php:    $this->sendTimeoutUsec_ =
common/lib/Thrift/Transport/TSocket.php:            ($timeout - ($this->sendTimeoutSec_ * 1000)) * 1000;
common/lib/Thrift/Transport/TSocket.php:    $this->recvTimeoutSec_ = floor($timeout / 1000);
common/lib/Thrift/Transport/TSocket.php:    $this->recvTimeoutUsec_ =
common/lib/Thrift/Transport/TSocket.php:            ($timeout - ($this->recvTimeoutSec_ * 1000)) * 1000;
common/lib/Thrift/Transport/TSocket.php:    $this->debug_ = $debug;
common/lib/Thrift/Transport/TSocket.php:    return $this->host_;
common/lib/Thrift/Transport/TSocket.php:    return $this->port_;
common/lib/Thrift/Transport/TSocket.php:    return is_resource($this->handle_);
common/lib/Thrift/Transport/TSocket.php:    if ($this->isOpen()) {
common/lib/Thrift/Transport/TSocket.php:    if (empty($this->host_)) {
common/lib/Thrift/Transport/TSocket.php:    if ($this->port_ <= 0) {
common/lib/Thrift/Transport/TSocket.php:    if ($this->persist_) {
common/lib/Thrift/Transport/TSocket.php:      $this->handle_ = @pfsockopen($this->host_,
common/lib/Thrift/Transport/TSocket.php:                                   $this->port_,
common/lib/Thrift/Transport/TSocket.php:                                   $this->sendTimeoutSec_ + ($this->sendTimeoutUsec_ / 1000000));
common/lib/Thrift/Transport/TSocket.php:      $this->handle_ = @fsockopen($this->host_,
common/lib/Thrift/Transport/TSocket.php:                                  $this->port_,
common/lib/Thrift/Transport/TSocket.php:                                  $this->sendTimeoutSec_ + ($this->sendTimeoutUsec_ / 1000000));
common/lib/Thrift/Transport/TSocket.php:    if ($this->handle_ === FALSE) {
common/lib/Thrift/Transport/TSocket.php:      $error = 'TSocket: Could not connect to '.$this->host_.':'.$this->port_.' ('.$errstr.' ['.$errno.'])';
common/lib/Thrift/Transport/TSocket.php:      if ($this->debug_) {
common/lib/Thrift/Transport/TSocket.php:        call_user_func($this->debugHandler_, $error);
common/lib/Thrift/Transport/TSocket.php:    if (!$this->persist_) {
common/lib/Thrift/Transport/TSocket.php:      @fclose($this->handle_);
common/lib/Thrift/Transport/TSocket.php:      $this->handle_ = null;
common/lib/Thrift/Transport/TSocket.php:    $read = array($this->handle_);
common/lib/Thrift/Transport/TSocket.php:    $readable = @stream_select($read, $null, $null, $this->recvTimeoutSec_, $this->recvTimeoutUsec_);
common/lib/Thrift/Transport/TSocket.php:      $data = fread($this->handle_, $len);
common/lib/Thrift/Transport/TSocket.php:                               $this->host_.':'.$this->port_);
common/lib/Thrift/Transport/TSocket.php:      } elseif ($data == '' && feof($this->handle_)) {
common/lib/Thrift/Transport/TSocket.php:                             $this->host_.':'.$this->port_);
common/lib/Thrift/Transport/TSocket.php:                             $this->host_.':'.$this->port_);
common/lib/Thrift/Transport/TSocket.php:    $write = array($this->handle_);
common/lib/Thrift/Transport/TSocket.php:      $writable = @stream_select($null, $write, $null, $this->sendTimeoutSec_, $this->sendTimeoutUsec_);
common/lib/Thrift/Transport/TSocket.php:        $written = fwrite($this->handle_, $buf);
common/lib/Thrift/Transport/TSocket.php:                                   $this->host_.':'.$this->port_);
common/lib/Thrift/Transport/TSocket.php:                               $this->host_.':'.$this->port_);
common/lib/Thrift/Transport/TSocket.php:                                 $this->host_.':'.$this->port_);
common/lib/Thrift/Transport/TMemoryBuffer.php:    $this->buf_ = $buf;
common/lib/Thrift/Transport/TMemoryBuffer.php:    $this->buf_ .= $buf;
common/lib/Thrift/Transport/TMemoryBuffer.php:    $bufLength = TStringFuncFactory::create()->strlen($this->buf_);
common/lib/Thrift/Transport/TMemoryBuffer.php:      $ret = $this->buf_;
common/lib/Thrift/Transport/TMemoryBuffer.php:      $this->buf_ = '';
common/lib/Thrift/Transport/TMemoryBuffer.php:    $ret = TStringFuncFactory::create()->substr($this->buf_, 0, $len);
common/lib/Thrift/Transport/TMemoryBuffer.php:    $this->buf_ = TStringFuncFactory::create()->substr($this->buf_, $len);
common/lib/Thrift/Transport/TMemoryBuffer.php:    return $this->buf_;
common/lib/Thrift/Transport/TMemoryBuffer.php:    return TStringFuncFactory::create()->strlen($this->buf_);
common/lib/Thrift/Transport/TMemoryBuffer.php:    $this->buf_ = $data.$this->buf_;
common/lib/Thrift/Transport/THttpClient.php:    $this->scheme_ = $scheme;
common/lib/Thrift/Transport/THttpClient.php:    $this->host_ = $host;
common/lib/Thrift/Transport/THttpClient.php:    $this->port_ = $port;
common/lib/Thrift/Transport/THttpClient.php:    $this->uri_ = $uri;
common/lib/Thrift/Transport/THttpClient.php:    $this->buf_ = '';
common/lib/Thrift/Transport/THttpClient.php:    $this->handle_ = null;
common/lib/Thrift/Transport/THttpClient.php:    $this->timeout_ = null;
common/lib/Thrift/Transport/THttpClient.php:    $this->headers_ = array();
common/lib/Thrift/Transport/THttpClient.php:    $this->timeout_ = $timeout;
common/lib/Thrift/Transport/THttpClient.php:    if ($this->handle_) {
common/lib/Thrift/Transport/THttpClient.php:      @fclose($this->handle_);
common/lib/Thrift/Transport/THttpClient.php:      $this->handle_ = null;
common/lib/Thrift/Transport/THttpClient.php:    $data = @fread($this->handle_, $len);
common/lib/Thrift/Transport/THttpClient.php:      $md = stream_get_meta_data($this->handle_);
common/lib/Thrift/Transport/THttpClient.php:        throw new TTransportException('THttpClient: timed out reading '.$len.' bytes from '.$this->host_.':'.$this->port_.$this->uri_, TTransportException::TIMED_OUT);
common/lib/Thrift/Transport/THttpClient.php:        throw new TTransportException('THttpClient: Could not read '.$len.' bytes from '.$this->host_.':'.$this->port_.$this->uri_, TTransportException::UNKNOWN);
common/lib/Thrift/Transport/THttpClient.php:    $this->buf_ .= $buf;
common/lib/Thrift/Transport/THttpClient.php:    $host = $this->host_.($this->port_ != 80 ? ':'.$this->port_ : '');
common/lib/Thrift/Transport/THttpClient.php:                            'Content-Length' => TStringFuncFactory::create()->strlen($this->buf_));
common/lib/Thrift/Transport/THttpClient.php:    foreach (array_merge($defaultHeaders, $this->headers_) as $key => $value) {
common/lib/Thrift/Transport/THttpClient.php:                     'content' => $this->buf_);
common/lib/Thrift/Transport/THttpClient.php:    if ($this->timeout_ > 0) {
common/lib/Thrift/Transport/THttpClient.php:      $options['timeout'] = $this->timeout_;
common/lib/Thrift/Transport/THttpClient.php:    $this->buf_ = '';
common/lib/Thrift/Transport/THttpClient.php:    $this->handle_ = @fopen($this->scheme_.'://'.$host.$this->uri_, 'r', false, $contextid);
common/lib/Thrift/Transport/THttpClient.php:    if ($this->handle_ === FALSE) {
common/lib/Thrift/Transport/THttpClient.php:      $this->handle_ = null;
common/lib/Thrift/Transport/THttpClient.php:      $error = 'THttpClient: Could not connect to '.$host.$this->uri_;
common/lib/Thrift/Transport/THttpClient.php:    $this->headers_ = array_merge($this->headers_, $headers);
common/lib/Thrift/Server/TServer.php:    $this->processor_ = $processor;
common/lib/Thrift/Server/TServer.php:    $this->transport_ = $transport;
common/lib/Thrift/Server/TServer.php:    $this->inputTransportFactory_ = $inputTransportFactory;
common/lib/Thrift/Server/TServer.php:    $this->outputTransportFactory_ = $outputTransportFactory;
common/lib/Thrift/Server/TServer.php:    $this->inputProtocolFactory_ = $inputProtocolFactory;
common/lib/Thrift/Server/TServer.php:    $this->outputProtocolFactory_ = $outputProtocolFactory;
common/lib/Thrift/Transport/TSocketPool.php:      $this->servers_ []= array('host' => $host,
common/lib/Thrift/Transport/TSocketPool.php:    $this->servers_[] = array('host' => $host, 'port' => $port);
common/lib/Thrift/Transport/TSocketPool.php:    $this->numRetries_ = $numRetries;
common/lib/Thrift/Transport/TSocketPool.php:    $this->retryInterval_ = $retryInterval;
common/lib/Thrift/Transport/TSocketPool.php:    $this->maxConsecutiveFailures_ = $maxConsecutiveFailures;
common/lib/Thrift/Transport/TSocketPool.php:    $this->randomize_ = $randomize;
common/lib/Thrift/Transport/TSocketPool.php:    $this->alwaysTryLast_ = $alwaysTryLast;
common/lib/Thrift/Transport/TSocketPool.php:    if ($this->randomize_) {
common/lib/Thrift/Transport/TSocketPool.php:      shuffle($this->servers_);
common/lib/Thrift/Transport/TSocketPool.php:    $numServers = count($this->servers_);
common/lib/Thrift/Transport/TSocketPool.php:      extract($this->servers_[$i]);
common/lib/Thrift/Transport/TSocketPool.php:        if ($elapsed > $this->retryInterval_) {
common/lib/Thrift/Transport/TSocketPool.php:          if ($this->debug_) {
common/lib/Thrift/Transport/TSocketPool.php:            call_user_func($this->debugHandler_,
common/lib/Thrift/Transport/TSocketPool.php:                           '('.$this->retryInterval_.') '.
common/lib/Thrift/Transport/TSocketPool.php:      if ($this->alwaysTryLast_) {
common/lib/Thrift/Transport/TSocketPool.php:        $this->host_ = $host;
common/lib/Thrift/Transport/TSocketPool.php:        $this->port_ = $port;
common/lib/Thrift/Transport/TSocketPool.php:        for ($attempt = 0; $attempt < $this->numRetries_; $attempt++) {
common/lib/Thrift/Transport/TSocketPool.php:        if ($consecfails >= $this->maxConsecutiveFailures_) {
common/lib/Thrift/Transport/TSocketPool.php:          if ($this->debug_) {
common/lib/Thrift/Transport/TSocketPool.php:            call_user_func($this->debugHandler_,
common/lib/Thrift/Transport/TSocketPool.php:                           ' as down for '.$this->retryInterval_.' secs '.
common/lib/Thrift/Transport/TSocketPool.php:    foreach ($this->servers_ as $server) {
common/lib/Thrift/Transport/TSocketPool.php:    if ($this->debug_) {
common/lib/Thrift/Transport/TSocketPool.php:      call_user_func($this->debugHandler_, $error);
common/lib/Thrift/Server/TForkingServer.php:    $this->transport_->listen();
common/lib/Thrift/Server/TForkingServer.php:    while (!$this->stop_) {
common/lib/Thrift/Server/TForkingServer.php:        $transport = $this->transport_->accept();
common/lib/Thrift/Server/TForkingServer.php:            $this->handleParent($transport, $pid);
common/lib/Thrift/Server/TForkingServer.php:            $this->handleChild($transport);
common/lib/Thrift/Server/TForkingServer.php:      $this->collectChildren();
common/lib/Thrift/Server/TForkingServer.php:    $this->children_[$pid] = $transport;
common/lib/Thrift/Server/TForkingServer.php:      $inputTransport = $this->inputTransportFactory_->getTransport($transport);
common/lib/Thrift/Server/TForkingServer.php:      $outputTransport = $this->outputTransportFactory_->getTransport($transport);
common/lib/Thrift/Server/TForkingServer.php:      $inputProtocol = $this->inputProtocolFactory_->getProtocol($inputTransport);
common/lib/Thrift/Server/TForkingServer.php:      $outputProtocol = $this->outputProtocolFactory_->getProtocol($outputTransport);
common/lib/Thrift/Server/TForkingServer.php:      while ($this->processor_->process($inputProtocol, $outputProtocol)) { }
common/lib/Thrift/Server/TForkingServer.php:    foreach ($this->children_ as $pid => $transport) {
common/lib/Thrift/Server/TForkingServer.php:        unset($this->children_[$pid]);
common/lib/Thrift/Server/TForkingServer.php:    $this->transport_->close();
common/lib/Thrift/Server/TForkingServer.php:    $this->stop_ = true;
common/lib/Thrift/Server/TSSLServerSocket.php:    $ssl_host = $this->getSSLHost($host);
common/lib/Thrift/Server/TSSLServerSocket.php:    $this->context_ = $context;
common/lib/Thrift/Server/TSSLServerSocket.php:    $this->listener_ = @stream_socket_server(
common/lib/Thrift/Server/TSSLServerSocket.php:      $this->host_ . ':' . $this->port_,
common/lib/Thrift/Server/TSSLServerSocket.php:      $this->context_);
common/lib/Thrift/Server/TSSLServerSocket.php:    $handle = @stream_socket_accept($this->listener_, $this->acceptTimeout_ / 1000.0);
common/lib/Thrift/Server/TServerSocket.php:    $this->host_ = $host;
common/lib/Thrift/Server/TServerSocket.php:    $this->port_ = $port;
common/lib/Thrift/Server/TServerSocket.php:    $this->acceptTimeout_ = $acceptTimeout;
common/lib/Thrift/Server/TServerSocket.php:    $this->listener_ = stream_socket_server('tcp://' . $this->host_ . ':' . $this->port_);
common/lib/Thrift/Server/TServerSocket.php:    @fclose($this->listener_);
common/lib/Thrift/Server/TServerSocket.php:    $this->listener_ = null;
common/lib/Thrift/Server/TServerSocket.php:    $handle = @stream_socket_accept($this->listener_, $this->acceptTimeout_ / 1000.0);
common/models/UserSearch.php:        if (!($this->load($params) && $this->validate())) {
common/models/UserSearch.php:            'id' => $this->id,
common/models/UserSearch.php:            'status' => $this->status,
common/models/UserSearch.php:            'created_at' => $this->created_at,
common/models/UserSearch.php:            'updated_at' => $this->updated_at,
common/models/UserSearch.php:        $query->andFilterWhere(['like', 'username', $this->username])
common/models/UserSearch.php:            ->andFilterWhere(['like', 'auth_key', $this->auth_key])
common/models/UserSearch.php:            ->andFilterWhere(['like', 'password_hash', $this->password_hash])
common/models/UserSearch.php:            ->andFilterWhere(['like', 'password_reset_token', $this->password_reset_token])
common/models/UserSearch.php:            ->andFilterWhere(['like', 'email', $this->email]);
common/lib/Thrift/Server/TSimpleServer.php:    $this->transport_->listen();
common/lib/Thrift/Server/TSimpleServer.php:    while (!$this->stop_) {
common/lib/Thrift/Server/TSimpleServer.php:        $transport = $this->transport_->accept();
common/lib/Thrift/Server/TSimpleServer.php:          $inputTransport = $this->inputTransportFactory_->getTransport($transport);
common/lib/Thrift/Server/TSimpleServer.php:          $outputTransport = $this->outputTransportFactory_->getTransport($transport);
common/lib/Thrift/Server/TSimpleServer.php:          $inputProtocol = $this->inputProtocolFactory_->getProtocol($inputTransport);
common/lib/Thrift/Server/TSimpleServer.php:          $outputProtocol = $this->outputProtocolFactory_->getProtocol($outputTransport);
common/lib/Thrift/Server/TSimpleServer.php:          while ($this->processor_->process($inputProtocol, $outputProtocol)) { }
common/lib/Thrift/Server/TSimpleServer.php:    $this->transport_->close();
common/lib/Thrift/Server/TSimpleServer.php:    $this->stop_ = true;
common/models/User.php:        return $this->getPrimaryKey();
common/models/User.php:        return $this->auth_key;
common/models/User.php:        return $this->getAuthKey() === $authKey;
common/models/User.php:        return Yii::$app->security->validatePassword($password, $this->password_hash);
common/models/User.php:        $this->password_hash = Yii::$app->security->generatePasswordHash($password);
common/models/User.php:        $this->auth_key = Yii::$app->security->generateRandomString();
common/models/User.php:        $this->password_reset_token = Yii::$app->security->generateRandomString() . '_' . time();
common/models/User.php:        $this->password_reset_token = null;
common/models/MigrationSearch.php:        if (!($this->load($params) && $this->validate())) {
common/models/MigrationSearch.php:            'apply_time' => $this->apply_time,
common/models/MigrationSearch.php:        $query->andFilterWhere(['like', 'version', $this->version]);
common/mail/layouts/text.php:<?php $this->beginPage() ?>
common/mail/layouts/text.php:<?php $this->beginBody() ?>
common/mail/layouts/text.php:<?php $this->endBody() ?>
common/mail/layouts/text.php:<?php $this->endPage() ?>
common/models/LoginForm.php:        if (!$this->hasErrors()) {
common/models/LoginForm.php:            $user = $this->getUser();
common/models/LoginForm.php:            if (!$user || !$user->validatePassword($this->password)) {
common/models/LoginForm.php:                $this->addError($attribute, 'Incorrect username or password.');
common/models/LoginForm.php:        if ($this->validate()) {
common/models/LoginForm.php:            return Yii::$app->user->login($this->getUser(), $this->rememberMe ? 3600 * 24 * 30 : 0);
common/models/LoginForm.php:        if ($this->_user === false) {
common/models/LoginForm.php:            $this->_user =  \backend\models\User::findByUsername($this->username);
common/models/LoginForm.php:        return $this->_user;
common/mail/layouts/html.php:<?php $this->beginPage() ?>
common/mail/layouts/html.php:    <title><?= Html::encode($this->title) ?></title>
common/mail/layouts/html.php:    <?php $this->head() ?>
common/mail/layouts/html.php:    <?php $this->beginBody() ?>
common/mail/layouts/html.php:    <?php $this->endBody() ?>
common/mail/layouts/html.php:<?php $this->endPage() ?>
common/lib/Thrift/Transport/TPhpStream.php:    $this->read_ = $mode & self::MODE_R;
common/lib/Thrift/Transport/TPhpStream.php:    $this->write_ = $mode & self::MODE_W;
common/lib/Thrift/Transport/TPhpStream.php:    if ($this->read_) {
common/lib/Thrift/Transport/TPhpStream.php:      $this->inStream_ = @fopen(self::inStreamName(), 'r');
common/lib/Thrift/Transport/TPhpStream.php:      if (!is_resource($this->inStream_)) {
common/lib/Thrift/Transport/TPhpStream.php:    if ($this->write_) {
common/lib/Thrift/Transport/TPhpStream.php:      $this->outStream_ = @fopen('php://output', 'w');
common/lib/Thrift/Transport/TPhpStream.php:      if (!is_resource($this->outStream_)) {
common/lib/Thrift/Transport/TPhpStream.php:    if ($this->read_) {
common/lib/Thrift/Transport/TPhpStream.php:      @fclose($this->inStream_);
common/lib/Thrift/Transport/TPhpStream.php:      $this->inStream_ = null;
common/lib/Thrift/Transport/TPhpStream.php:    if ($this->write_) {
common/lib/Thrift/Transport/TPhpStream.php:      @fclose($this->outStream_);
common/lib/Thrift/Transport/TPhpStream.php:      $this->outStream_ = null;
common/lib/Thrift/Transport/TPhpStream.php:      (!$this->read_ || is_resource($this->inStream_)) &&
common/lib/Thrift/Transport/TPhpStream.php:      (!$this->write_ || is_resource($this->outStream_));
common/lib/Thrift/Transport/TPhpStream.php:    $data = @fread($this->inStream_, $len);
common/lib/Thrift/Transport/TPhpStream.php:      $got = @fwrite($this->outStream_, $buf);
common/lib/Thrift/Transport/TPhpStream.php:    @fflush($this->outStream_);
docs/dev-blogs/ch1/批删除问题.md:            $modelName = $this->modelName;
docs/dev-blogs/ch1/批删除问题.md:                    if ($this->markAsDeleted === true) {
docs/dev-blogs/ch1/批删除问题.md:                        $item->setAttribute($this->deletedMarkAttribute, $this->deletedMarkValue);
docs/dev-blogs/ch1/批删除问题.md:            return $this->controller->redirect($this->redirect);
docs/dev-blogs/ch1/bower.md:               $this->js = [
docs/dev-blogs/ch1/bower.md:               $this->js = [
docs/dev-blogs/misc/asset-url.md:        $assetManager = $this->view->getAssetManager();
docs/dev-blogs/misc/asset-url.md:        $this->view->registerJsFile($behaviorUrl, [
_dev_blogs/laravel/validation.md:    $this->validate(
_dev_blogs/widgets/theme.md:            return empty($this->theme)
_dev_blogs/widgets/theme.md:                : (\Yii::$app->getViewPath() . DIRECTORY_SEPARATOR . $this->theme);
_dev_blogs/errors/yii-errors-HeadersAlreadySentException.md:        $this->someMagicWithEcho();
_dev_blogs/errors/yii-errors-HeadersAlreadySentException.md:        $this->someMagicWithEcho();
_dev_blogs/api/formatter.md:        return $this->item($author, new AuthorTransformer);
_dev_blogs/api/formatter.md:        if ($this->request->getIsHead()) {
_dev_blogs/api/formatter.md:        list($fields, $expand) = $this->getRequestedFields();
_dev_blogs/api/formatter.md:        list($fields, $expand) = $this->getRequestedFields();
_dev_blogs/tips/validate.md:                  return $this->redirect(['view', 'id' => $model->id]);
_dev_blogs/tips/validate.md:                  return $this->render('create', [
_dev_blogs/queue/php.md:           file_put_contents($this->file, file_get_contents($this->url));
_dev_blogs/db/ssdb_chat1.md:        $this->step = self::STEP_SIZE;
_dev_blogs/db/ssdb_chat1.md:            $ret = $this->parse();
_dev_blogs/db/ssdb_chat1.md:                    $data = @fread($this->sock, 1024 * 1024);
_dev_blogs/db/ssdb_chat1.md:                    if ($this->debug) {
_dev_blogs/db/ssdb_chat1.md:                    if (feof($this->sock)) {
_dev_blogs/db/ssdb_chat1.md:                        $this->close();
_dev_blogs/db/ssdb_chat1.md:                $this->recv_buf .= $data;
_dev_blogs/db/ssdb_chat1.md:#				echo "read " . strlen($data) . " total: " . strlen($this->recv_buf) . "\n";
_dev_blogs/db/migration.md:            $this->addColumn('{{%comment}}', 'from', $this->string() . ' AFTER [[entity]]');
_dev_blogs/db/migration.md:                $this->tables = [
_dev_blogs/db/migration.md:                $options = $this->db->driverName == 'mysql' ? 'ENGINE=InnoDB' : null;
_dev_blogs/db/migration.md:                $this->createTable($this->tables['entity'], [
_dev_blogs/db/migration.md:                $this->createTable($this->tables['category'], [
_dev_blogs/tips/getter-setter.md:    return $this->xxx;
_dev_blogs/tips/getter-setter.md:    $this->xxx = $xxx;
_dev_blogs/tips/getter-setter.md:        return $this->_xxx ;
_dev_blogs/tips/getter-setter.md:        $this->_xxx = $xxx ;
_dev_blogs/tips/http-response.md:            $this->auth = $auth;
_dev_blogs/tips/http-response.md:            if ($this->auth->guest()) {
_dev_blogs/tips/http-response.md:    if ( ! $this->auth->user()->isAdministrator()) {
_dev_blogs/tips/http-response.md:    if ($this->request->ajax()) {
docs/3rd/cassandra/doc/Cassandra/Decimal.php:     * $this->assertEquals(21, $decimal->scale());
docs/3rd/cassandra/doc/Cassandra/Decimal.php:     * $this->assertEquals("1313123123234234234234234234123", $decimal->value());
_backup/user4gii_template_thought/create.php:$this->title = Yii::t('app', 'Create {modelClass}', [
_backup/user4gii_template_thought/create.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Users'), 'url' => ['index']];
_backup/user4gii_template_thought/create.php:$this->params['breadcrumbs'][] = $this->title;
_backup/user4gii_template_thought/create.php:    <div class="easyui-panel" title="<?= Html::encode($this->title) ?>" style="width:100%;padding:10px;">
_backup/user4gii_template_thought/create.php:    <?= $this->render('_form', [
home/feedback/migrations/m160919_021240_feedback_add_hot_grade_column.php:        $this->addColumn($this->tableName,'hot_grade',$this->smallInteger(3)->notNull()->defaultValue(0)->comment('是否热门'));
home/feedback/migrations/m160919_021240_feedback_add_hot_grade_column.php:        $this->dropColumn($this->tableName,'hot_grade');
home/feedback/backend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
home/feedback/backend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
home/feedback/backend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
home/feedback/backend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
home/feedback/frontend/views/default/index.php:    <h1><?= $this->context->action->uniqueId ?></h1>
home/feedback/frontend/views/default/index.php:        This is the view content for action "<?= $this->context->action->id ?>".
home/feedback/frontend/views/default/index.php:        The action belongs to the controller "<?= get_class($this->context) ?>"
home/feedback/frontend/views/default/index.php:        in the "<?= $this->context->module->id ?>" module.
home/feedback/backend/views/entry/_form.php:   <?php $this->beginBlock('feedback_info') ?>
home/feedback/backend/views/entry/_form.php:    <?php $this->endBlock() ?>
home/feedback/backend/views/entry/_form.php:    <?php $this->beginBlock('feedback_reply') ?>
home/feedback/backend/views/entry/_form.php:     <?php $this->endBlock() ?>
home/feedback/backend/views/entry/_form.php:                'content' => $this->blocks['feedback_info'],
home/feedback/backend/views/entry/_form.php:                'content' => $this->blocks['feedback_reply'],
home/feedback/frontend/views/entry/index.v0.php:$this->title = '信件列表';
home/feedback/frontend/views/entry/index.v0.php:$this->params['breadcrumbs'][] = $this->title;
home/feedback/frontend/views/entry/index.v0.php:    <h1><?= Html::encode($this->title) ?></h1>
home/feedback/frontend/views/entry/index.v0.php:            <?php  echo $this->render('_search', ['model' => $searchModel]); ?>
home/feedback/frontend/views/entry/view.php:$this->title = $model->subject;
home/feedback/frontend/views/entry/view.php:$this->params['breadcrumbs'][] = ['label' => '反馈列表', 'url' => ['index']];
home/feedback/frontend/views/entry/view.php:$this->params['breadcrumbs'][] = $this->title;
home/feedback/frontend/views/entry/view.php:    <h1><?= Html::encode($this->title) ?></h1>
home/feedback/frontend/views/entry/view.v0.php:$this->title = $model->id;
home/feedback/frontend/views/entry/view.v0.php:$this->params['breadcrumbs'][] = ['label' => 'Feedbacks', 'url' => ['index']];
home/feedback/frontend/views/entry/view.v0.php:$this->params['breadcrumbs'][] = $this->title;
home/feedback/frontend/views/entry/view.v0.php:    <h1><?= Html::encode($this->title) ?></h1>
home/feedback/backend/views/entry/view.v0.php:$this->title = $model->id;
home/feedback/backend/views/entry/view.v0.php:$this->params['breadcrumbs'][] = ['label' => 'Feedbacks', 'url' => ['index']];
home/feedback/backend/views/entry/view.v0.php:$this->params['breadcrumbs'][] = $this->title;
home/feedback/backend/views/entry/view.v0.php:    <h1><?= Html::encode($this->title) ?></h1>
home/feedback/backend/views/entry/create.php:$this->title = 'Create Feedback';
home/feedback/backend/views/entry/create.php:$this->params['breadcrumbs'][] = ['label' => 'Feedbacks', 'url' => ['index']];
home/feedback/backend/views/entry/create.php:$this->params['breadcrumbs'][] = $this->title;
home/feedback/backend/views/entry/create.php:    <h1><?= Html::encode($this->title) ?></h1>
home/feedback/backend/views/entry/create.php:    <?= $this->render('_form', [
my/content/backend/views/article-category/update.php:$this->title = Yii::t('models', 'Article Category');
my/content/backend/views/article-category/update.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('models', 'Article Category'), 'url' => ['index']];
my/content/backend/views/article-category/update.php:$this->params['breadcrumbs'][] = ['label' => (string)$model->name, 'url' => ['view', 'id' => $model->id]];
my/content/backend/views/article-category/update.php:$this->params['breadcrumbs'][] = 'Edit';
my/content/backend/views/article-category/update.php:    <?php echo $this->render('_form', [
home/feedback/frontend/views/entry/index.php:$this->title = '信件列表';
home/feedback/frontend/views/entry/index.php:$this->params['breadcrumbs'][] = $this->title;
home/feedback/frontend/views/entry/index.php:    <h1><?php  // Html::encode($this->title) ?></h1>
home/feedback/frontend/views/entry/index.php:            <?php  echo $this->render('_search', ['model' => $searchModel]); ?>
home/feedback/frontend/views/entry/update.php:$this->title = '更新 : ' . $model->subject;
home/feedback/frontend/views/entry/update.php:$this->params['breadcrumbs'][] = ['label' => 'Feedbacks', 'url' => ['index']];
home/feedback/frontend/views/entry/update.php:$this->params['breadcrumbs'][] = ['label' => $model->id, 'url' => ['view', 'id' => $model->id]];
home/feedback/frontend/views/entry/update.php:$this->params['breadcrumbs'][] = 'Update';
home/feedback/frontend/views/entry/update.php:    <h1><?= Html::encode($this->title) ?></h1>
home/feedback/frontend/views/entry/update.php:    <?= $this->render('_form', [
home/feedback/backend/views/entry/index.php:$this->title = '信件列表';
home/feedback/backend/views/entry/index.php:$this->params['breadcrumbs'][] = $this->title;
home/feedback/backend/views/entry/index.php:    <h1><?= Html::encode($this->title) ?></h1>
home/feedback/backend/views/entry/index.php:    <?php  echo $this->render('_search', ['model' => $searchModel]); ?>
home/feedback/backend/views/entry/update.php:$this->title = '更新: ' . $model->subject;
home/feedback/backend/views/entry/update.php:$this->params['breadcrumbs'][] = ['label' => '信件列表', 'url' => ['index']];
home/feedback/backend/views/entry/update.php:$this->params['breadcrumbs'][] = ['label' => $model->subject, 'url' => ['view', 'id' => $model->id]];
home/feedback/backend/views/entry/update.php:$this->params['breadcrumbs'][] = 'Update';
home/feedback/backend/views/entry/update.php:    <h1><?= Html::encode($this->title) ?></h1>
home/feedback/backend/views/entry/update.php:    <?= $this->render('_form', [
home/feedback/migrations/m160919_022506_feedback_add_user_ip_column.php:        $this->addColumn($this->tableName,'user_ip',$this->string(130)->notNull()->defaultValue('127.0.0.1')->comment('用户ip地址'));
home/feedback/migrations/m160919_022506_feedback_add_user_ip_column.php:        $this->dropColumn($this->tableName,'user_ip');
home/feedback/frontend/controllers/DefaultController.php:        return $this->render('index');
home/feedback/frontend/controllers/EntryController.php:        return $this->render('index', [
home/feedback/frontend/controllers/EntryController.php:        return $this->render('view', [
home/feedback/frontend/controllers/EntryController.php:            'model' => $this->findModel($id),
home/feedback/frontend/controllers/EntryController.php:            return $this->redirect(['view', 'id' => $model->id]);
home/feedback/frontend/controllers/EntryController.php:            return $this->render('create', [
home/feedback/frontend/controllers/EntryController.php:            return $this->redirect(['view', 'id' => $model->id]);
home/feedback/frontend/controllers/EntryController.php:            return $this->render('2director', [
home/feedback/backend/controllers/EntryController.php:        return $this->render('index', [
home/feedback/backend/controllers/EntryController.php:        return $this->render('view', [
home/feedback/backend/controllers/EntryController.php:            'model' => $this->findModel($id),
home/feedback/backend/controllers/EntryController.php:            return $this->redirect(['view', 'id' => $model->id]);
home/feedback/backend/controllers/EntryController.php:            return $this->render('create', [
home/feedback/backend/controllers/EntryController.php:        $model = $this->findModel($id);
home/feedback/backend/controllers/EntryController.php:            return $this->redirect(['view', 'id' => $model->id]);
home/feedback/backend/controllers/EntryController.php:            return $this->render('update', [
home/feedback/backend/controllers/EntryController.php:        $this->findModel($id)->delete();
home/feedback/backend/controllers/EntryController.php:        return $this->redirect(['index']);
home/feedback/common/models/Feedback.php:        if (isset($statusOptions[$this->status])) {
home/feedback/common/models/Feedback.php:            return $statusOptions[$this->status];
home/feedback/common/models/Feedback.php:        if($this->hot_grade != 0){
home/feedback/common/models/Feedback.php:        if (isset($options[$this->type_id])) {
home/feedback/common/models/Feedback.php:            return $options[$this->type_id];
home/feedback/common/models/Feedback.php:        if($this->isNewRecord){
home/feedback/common/models/Feedback.php:            if($this->isAttributeChanged('reply_content')){
home/feedback/common/models/Feedback.php:                $this->reply_at = time() ;
home/feedback/common/models/Feedback.php:        return StringHelper::truncate($this->username,1,'*').'*' ;
home/feedback/common/models/Feedback.php:        // $telLength = StringHelper::byteLength($this->tel);
home/feedback/common/models/Feedback.php:        $telLength = strlen($this->tel);
home/feedback/common/models/Feedback.php:        $tailParts = substr($this->tel,2*$oneOfThirdLen-1);
home/feedback/common/models/Feedback.php:        return substr($this->tel,0,$oneOfThirdLen) . str_repeat('*',$oneOfThirdLen).$tailParts ;
home/feedback/common/models/Feedback.php:        return substr_replace($this->tel,str_repeat('*',$cryptLen),2,$cryptLen)  ; // .'|'.$this->tel;
home/feedback/common/models/Feedback.php:        return  date("Y-m-d",$this->created_at) .$this->tel ;
home/feedback/backend/controllers/DefaultController.php:        return $this->render('index');
frontend/models/SignupForm.php:        if ($this->validate()) {
frontend/models/SignupForm.php:            $user->username = $this->username;
frontend/models/SignupForm.php:            $user->email = $this->email;
frontend/models/SignupForm.php:            $user->setPassword($this->password);
home/feedback/common/models/FeedbackSearch.php:        $this->load($params);
home/feedback/common/models/FeedbackSearch.php:        if (!$this->validate()) {
home/feedback/common/models/FeedbackSearch.php:            'id' => $this->id,
home/feedback/common/models/FeedbackSearch.php:            'cate_id' => $this->cate_id,
home/feedback/common/models/FeedbackSearch.php:            'type_id' => $this->type_id,
home/feedback/common/models/FeedbackSearch.php:            'reply_at' => $this->reply_at,
home/feedback/common/models/FeedbackSearch.php:            'admin_updated_by' => $this->admin_updated_by,
home/feedback/common/models/FeedbackSearch.php:            'created_at' => $this->created_at,
home/feedback/common/models/FeedbackSearch.php:            'updated_at' => $this->updated_at,
home/feedback/common/models/FeedbackSearch.php:            'status' => $this->status,
home/feedback/common/models/FeedbackSearch.php:            'hot_grade' => $this->hot_grade,
home/feedback/common/models/FeedbackSearch.php:        $query->andFilterWhere(['like', 'username', $this->username])
home/feedback/common/models/FeedbackSearch.php:            ->andFilterWhere(['like', 'id_card', $this->id_card])
home/feedback/common/models/FeedbackSearch.php:            ->andFilterWhere(['like', 'tel', $this->tel])
home/feedback/common/models/FeedbackSearch.php:            ->andFilterWhere(['like', 'contact_address', $this->contact_address])
home/feedback/common/models/FeedbackSearch.php:            ->andFilterWhere(['like', 'subject', $this->subject])
home/feedback/common/models/FeedbackSearch.php:            ->andFilterWhere(['like', 'body', $this->body])
home/feedback/common/models/FeedbackSearch.php:            ->andFilterWhere(['like', 'reply_department', $this->reply_department])
home/feedback/common/models/FeedbackSearch.php:            ->andFilterWhere(['like', 'reply_content', $this->reply_content]);
_backup/user4gii_template_thought/view.php:$this->title = $model->id;
_backup/user4gii_template_thought/view.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Users'), 'url' => ['index']];
_backup/user4gii_template_thought/view.php:$this->params['breadcrumbs'][] = $this->title;
frontend/widgets/Alert.php:        $appendCss = isset($this->options['class']) ? ' ' . $this->options['class'] : '';
frontend/widgets/Alert.php:            if (isset($this->alertTypes[$type])) {
frontend/widgets/Alert.php:                    $this->options['class'] = $this->alertTypes[$type] . $appendCss;
frontend/widgets/Alert.php:                    $this->options['id'] = $this->getId() . '-' . $type . '-' . $i;
frontend/widgets/Alert.php:                        'closeButton' => $this->closeButton,
frontend/widgets/Alert.php:                        'options' => $this->options,
_backup/user4gii_template_thought/update.php:$this->title = Yii::t('app', 'Update {modelClass}: ', [
_backup/user4gii_template_thought/update.php:$this->params['breadcrumbs'][] = ['label' => Yii::t('app', 'Users'), 'url' => ['index']];
_backup/user4gii_template_thought/update.php:$this->params['breadcrumbs'][] = ['label' => $model->id, 'url' => ['view', 'id' => $model->id]];
_backup/user4gii_template_thought/update.php:$this->params['breadcrumbs'][] = Yii::t('app', 'Update');
_backup/user4gii_template_thought/update.php:    <div class="easyui-panel" title="<?= Html::encode($this->title) ?>" style="width:100%;padding:10px;">
_backup/user4gii_template_thought/update.php:    <?= $this->render('_form', [
frontend/models/ContactForm.php:            ->setFrom([$this->email => $this->name])
frontend/models/ContactForm.php:            ->setSubject($this->subject)
frontend/models/ContactForm.php:            ->setTextBody($this->body)
_backup/user4gii_template_thought/index.php:$this->title = Yii::t('app', 'Users');
_backup/user4gii_template_thought/index.php:$this->params['breadcrumbs'][] = $this->title;
_backup/user4gii_template_thought/index.php:    <?php  echo $this->render('_search', ['model' => $searchModel]); ?>
frontend/models/ResetPasswordForm.php:        $this->_user = User::findByPasswordResetToken($token);
frontend/models/ResetPasswordForm.php:        if (!$this->_user) {
frontend/models/ResetPasswordForm.php:        $user = $this->_user;
frontend/models/ResetPasswordForm.php:        $user->setPassword($this->password);
frontend/models/PasswordResetRequestForm.php:            'email' => $this->email,
frontend/models/PasswordResetRequestForm.php:                    ->setTo($this->email)
home/feedback/migrations/m160912_100224_feedback_init.php:        $this->createTable($this->tableName,[
home/feedback/migrations/m160912_100224_feedback_init.php:            'id'=>$this->primaryKey(),
home/feedback/migrations/m160912_100224_feedback_init.php:            'cate_id'=>$this->smallInteger(4)->notNull()->defaultValue(0)->comment('类别'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'type_id'=>$this->smallInteger(4)->notNull()->comment('类型'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'username'=>$this->string(32)->notNull()->comment('反映人姓名'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'id_card'=>$this->string(20)->notNull()->comment('身份证号'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'tel'=>$this->string(20)->notNull()->comment('联系电话'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'contact_address'=>$this->string(255)->notNull()->comment('联系地址'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'subject'=>$this->string(120)->notNull()->comment('来信主题'),
home/feedback/migrations/m160912_100224_feedback_init.php:            // 'body'=>$this->string(1024)->notNull()->comment('来信主题'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'body'=>$this->text()->notNull()->comment('来信内容'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'reply_department'=>$this->string(32)->comment('答复部门'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'reply_at'=>$this->integer()->comment('答复时间'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'reply_content'=>$this->text()->comment('答复结果'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'admin_updated_by'=>$this->integer()->notNull()->defaultValue(0)->comment('管理员修改者id'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'created_at'=>$this->integer()->notNull()->defaultValue(0)->comment('创建时间'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'updated_at'=>$this->integer()->notNull()->defaultValue(0)->comment('最后修改时间'),
home/feedback/migrations/m160912_100224_feedback_init.php:            'status'=>$this->smallInteger(1)->notNull()->defaultValue(0)->comment('状态'),
home/feedback/migrations/m160912_100224_feedback_init.php:        $this->dropTable($this->tableName) ;
frontend/views/site/about.php:$this->title = 'About';
frontend/views/site/about.php:$this->params['breadcrumbs'][] = $this->title;
frontend/views/site/about.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/views/site/resetPassword.php:$this->title = 'Reset password';
frontend/views/site/resetPassword.php:$this->params['breadcrumbs'][] = $this->title;
frontend/views/site/resetPassword.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/views/layouts/main.php:<?php $this->beginPage() ?>
frontend/views/layouts/main.php:    <title><?= Html::encode($this->title) ?></title>
frontend/views/layouts/main.php:    <?php $this->head() ?>
frontend/views/layouts/main.php:    <?php $this->beginBody() ?>
frontend/views/layouts/main.php:            'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],
frontend/views/layouts/main.php:    <?php $this->endBody() ?>
frontend/views/layouts/main.php:<?php $this->endPage() ?>
frontend/views/site/signup.php:$this->title = 'Signup';
frontend/views/site/signup.php:$this->params['breadcrumbs'][] = $this->title;
frontend/views/site/signup.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/views/site/requestPasswordResetToken.php:$this->title = 'Request password reset';
frontend/views/site/requestPasswordResetToken.php:$this->params['breadcrumbs'][] = $this->title;
frontend/views/site/requestPasswordResetToken.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/materialize/assets/AppAsset.php:        $this->sourcePath = __DIR__.'/../static';
frontend/themes/materialize/assets/AppAsset.php:        $this->css = [
frontend/themes/materialize/assets/AppAsset.php:        $this->js = [
frontend/views/site/contact.php:$this->title = 'Contact';
frontend/views/site/contact.php:$this->params['breadcrumbs'][] = $this->title;
frontend/views/site/contact.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/views/site/login.php:$this->title = 'Login';
frontend/views/site/login.php:$this->params['breadcrumbs'][] = $this->title;
frontend/views/site/login.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/views/site/error.php:$this->title = $name;
frontend/views/site/error.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/views/site/index.php:$this->title = 'My Yii Application';
frontend/controllers/SiteController.php:        return $this->render('index');
frontend/controllers/SiteController.php:            return $this->goHome();
frontend/controllers/SiteController.php:            return $this->goBack();
frontend/controllers/SiteController.php:            return $this->render('login', [
frontend/controllers/SiteController.php:        return $this->goHome();
frontend/controllers/SiteController.php:            return $this->refresh();
frontend/controllers/SiteController.php:            return $this->render('contact', [
frontend/controllers/SiteController.php:        return $this->render('about');
frontend/controllers/SiteController.php:                    return $this->goHome();
frontend/controllers/SiteController.php:        return $this->render('signup', [
frontend/controllers/SiteController.php:                return $this->goHome();
frontend/controllers/SiteController.php:        return $this->render('requestPasswordResetToken', [
frontend/controllers/SiteController.php:            return $this->goHome();
frontend/controllers/SiteController.php:        return $this->render('resetPassword', [
frontend/themes/materialize/views/site/requestPasswordResetToken.php:$this->title = 'Request password reset';
frontend/themes/materialize/views/site/requestPasswordResetToken.php:$this->params['breadcrumbs'][] = $this->title;
frontend/themes/materialize/views/site/requestPasswordResetToken.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/materialize/views/site/about.php:$this->title = 'About';
frontend/themes/materialize/views/site/about.php:$this->params['breadcrumbs'][] = $this->title;
frontend/themes/materialize/views/site/about.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/materialize/views/site/error.php:$this->title = $name;
frontend/themes/materialize/views/site/error.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/materialize/views/site/contact.php:$this->title = 'Contact';
frontend/themes/materialize/views/site/contact.php:$this->params['breadcrumbs'][] = $this->title;
frontend/themes/materialize/views/site/contact.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/materialize/views/site/resetPassword.php:$this->title = 'Reset password';
frontend/themes/materialize/views/site/resetPassword.php:$this->params['breadcrumbs'][] = $this->title;
frontend/themes/materialize/views/site/resetPassword.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/materialize/views/site/index.php:$this->title = 'My Yii Application';
frontend/themes/materialize/views/site/login.php:$this->title = 'Login';
frontend/themes/materialize/views/site/login.php:$this->params['breadcrumbs'][] = $this->title;
frontend/themes/materialize/views/site/login.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/materialize/views/site/signup.php:$this->title = 'Signup';
frontend/themes/materialize/views/site/signup.php:$this->params['breadcrumbs'][] = $this->title;
frontend/themes/materialize/views/site/signup.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/uikit/views/site/index.php:$this->title = 'My Yii Application';
frontend/themes/uikit/views/site/signup.php:$this->title = 'Signup';
frontend/themes/uikit/views/site/signup.php:$this->params['breadcrumbs'][] = $this->title;
frontend/themes/uikit/views/site/signup.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/components/ExcelGrid.php:        if(empty($this->properties)){
frontend/components/ExcelGrid.php:            $this->properties = [] ;
frontend/components/ExcelGrid.php:        //$this->test();
frontend/components/ExcelGrid.php:        $this->init_provider();
frontend/components/ExcelGrid.php:        $this->init_excel_sheet();
frontend/components/ExcelGrid.php:        $this->initPHPExcelWriter('Excel2007');
frontend/components/ExcelGrid.php:        $this->generateHeader();
frontend/components/ExcelGrid.php:        $row = $this->generateBody();
frontend/components/ExcelGrid.php:        $writer = $this->_objPHPExcelWriter;
frontend/components/ExcelGrid.php:        $this->setHttpHeaders();
frontend/components/ExcelGrid.php:        $this->_provider = clone($this->dataProvider);
frontend/components/ExcelGrid.php:        $this->_objPHPExcel=new PHPExcel();
frontend/components/ExcelGrid.php:        extract($this->properties);
frontend/components/ExcelGrid.php:        $this->_objPHPExcel->getProperties()
frontend/components/ExcelGrid.php:        $this->_objPHPExcelSheet = $this->_objPHPExcel->getActiveSheet();
frontend/components/ExcelGrid.php:        $this->_objPHPExcelWriter = PHPExcel_IOFactory::createWriter(
frontend/components/ExcelGrid.php:            $this->_objPHPExcel,
frontend/components/ExcelGrid.php:        $this->setVisibleColumns();
frontend/components/ExcelGrid.php:        $sheet = $this->_objPHPExcelSheet;
frontend/components/ExcelGrid.php:        $this->_endCol = 0;
frontend/components/ExcelGrid.php:        foreach ($this->_visibleColumns as $column) {
frontend/components/ExcelGrid.php:            $this->_endCol++;
frontend/components/ExcelGrid.php:            $head = ($column instanceof \yii\grid\DataColumn) ? $this->getColumnHeader($column) : $column->header;
frontend/components/ExcelGrid.php:            $cell = $sheet->setCellValue(self::columnName($this->_endCol) . $this->_beginRow, $head, true);
frontend/components/ExcelGrid.php:        $sheet->freezePane($colFirst . ($this->_beginRow + 1));
frontend/components/ExcelGrid.php:        $columns = $this->_visibleColumns;
frontend/components/ExcelGrid.php:        $models = array_values($this->_provider->getModels());
frontend/components/ExcelGrid.php:            $cell = $this->_objPHPExcelSheet->setCellValue('A1', $this->emptyText, true);
frontend/components/ExcelGrid.php:        $keys = $this->_provider->getKeys();
frontend/components/ExcelGrid.php:        $this->_endRow = 0;
frontend/components/ExcelGrid.php:            $this->generateRow($model, $key, $index);
frontend/components/ExcelGrid.php:            $this->_endRow++;
frontend/components/ExcelGrid.php:        $this->_objPHPExcelSheet->setAutoFilter(
frontend/components/ExcelGrid.php:            $this->_beginRow .
frontend/components/ExcelGrid.php:            self::columnName($this->_endCol) .
frontend/components/ExcelGrid.php:            $this->_endRow
frontend/components/ExcelGrid.php:        return ($this->_endRow > 0) ? count($models) : 0;
frontend/components/ExcelGrid.php:        $this->_endCol = 0;
frontend/components/ExcelGrid.php:        foreach ($this->_visibleColumns as $column) {
frontend/components/ExcelGrid.php:                    $this->formatter->format($column->getDataCellValue($model, $key, $index), $format) :
frontend/components/ExcelGrid.php:            $this->_endCol++;
frontend/components/ExcelGrid.php:            $cell = $this->_objPHPExcelSheet->setCellValue(self::columnName($this->_endCol) . ($index + $this->_beginRow + 1),
frontend/components/ExcelGrid.php:        foreach ($this->columns as $key => $column) {
frontend/components/ExcelGrid.php:        $this->_visibleColumns = $cols;
frontend/components/ExcelGrid.php:        if(isset($this->columns_array[$col->attribute]))
frontend/components/ExcelGrid.php:            return $this->columns_array[$col->attribute];
frontend/components/ExcelGrid.php:        $provider = $this->dataProvider;
frontend/components/ExcelGrid.php:        header("Content-Type: application/{$this->extension}");
frontend/components/ExcelGrid.php:        header("Content-Disposition: attachment; filename={$this->filename}.{$this->extension}");
frontend/themes/uikit/views/site/requestPasswordResetToken.php:$this->title = 'Request password reset';
frontend/themes/uikit/views/site/requestPasswordResetToken.php:$this->params['breadcrumbs'][] = $this->title;
frontend/themes/uikit/views/site/requestPasswordResetToken.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/uikit/views/site/error.php:$this->title = $name;
frontend/themes/uikit/views/site/error.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/uikit/views/site/about.php:$this->title = 'About';
frontend/themes/uikit/views/site/about.php:$this->params['breadcrumbs'][] = $this->title;
frontend/themes/uikit/views/site/about.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/materialize/views/layouts/_clear.v0.php:<?php $this->beginPage() ?>
frontend/themes/materialize/views/layouts/_clear.v0.php:    <title><?= Html::encode($this->title) ?></title>
frontend/themes/materialize/views/layouts/_clear.v0.php:    <?php $this->head() ?>
frontend/themes/materialize/views/layouts/_clear.v0.php:<?php $this->beginBody() ?>
frontend/themes/materialize/views/layouts/_clear.v0.php:<?php $this->endBody() ?>
frontend/themes/materialize/views/layouts/_clear.v0.php:<?php $this->endPage() ?>
frontend/themes/uikit/views/site/login.php:$this->title = 'Login';
frontend/themes/uikit/views/site/login.php:$this->params['breadcrumbs'][] = $this->title;
frontend/themes/uikit/views/site/login.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/materialize/views/layouts/_clear.php:<?php $this->beginPage() ?>
frontend/themes/materialize/views/layouts/_clear.php:    <title><?= Html::encode($this->title) ?></title>
frontend/themes/materialize/views/layouts/_clear.php:    <?php $this->head() ?>
frontend/themes/materialize/views/layouts/_clear.php:<?php $this->beginBody() ?>
frontend/themes/materialize/views/layouts/_clear.php:<?php $this->endBody() ?>
frontend/themes/materialize/views/layouts/_clear.php:<?php $this->endPage() ?>
frontend/themes/materialize/views/layouts/base.php:// $this->beginContent('@frontend/views/layouts/_clear.php')
frontend/themes/materialize/views/layouts/base.php:$this->beginContent(__DIR__ . '/_clear.php')
frontend/themes/materialize/views/layouts/base.php:<?php $this->endContent() ?>
frontend/themes/uikit/views/site/resetPassword.php:$this->title = 'Reset password';
frontend/themes/uikit/views/site/resetPassword.php:$this->params['breadcrumbs'][] = $this->title;
frontend/themes/uikit/views/site/resetPassword.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/uikit/views/layouts/main.php:<?php $this->beginPage() ?>
frontend/themes/uikit/views/layouts/main.php:    <title><?= Html::encode($this->title) ?></title>
frontend/themes/uikit/views/layouts/main.php:    <?php $this->head() ?>
frontend/themes/uikit/views/layouts/main.php:    <?php $this->beginBody() ?>
frontend/themes/uikit/views/layouts/main.php:            'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],
frontend/themes/uikit/views/layouts/main.php:    <?php $this->endBody() ?>
frontend/themes/uikit/views/layouts/main.php:<?php $this->endPage() ?>
frontend/themes/materialize/views/layouts/base.v0.php:// $this->beginContent('@frontend/views/layouts/_clear.php')
frontend/themes/materialize/views/layouts/base.v0.php:$this->beginContent(__DIR__ . '/_clear.php')
frontend/themes/materialize/views/layouts/base.v0.php:<?php $this->endContent() ?>
frontend/themes/materialize/views/layouts/main.v1.php:$this->beginContent(__DIR__.'/base.php')
frontend/themes/materialize/views/layouts/main.v1.php:<?php $this->endContent() ?>
frontend/themes/uikit/views/site/contact.php:$this->title = 'Contact';
frontend/themes/uikit/views/site/contact.php:$this->params['breadcrumbs'][] = $this->title;
frontend/themes/uikit/views/site/contact.php:    <h1><?= Html::encode($this->title) ?></h1>
frontend/themes/materialize/views/layouts/main.php:$this->beginContent(__DIR__.'/base.php')
frontend/themes/materialize/views/layouts/main.php:<?php $this->endContent() ?>
frontend/themes/materialize/views/layouts/main.v0.php:<?php $this->beginPage() ?>
frontend/themes/materialize/views/layouts/main.v0.php:        <title><?= Html::encode($this->title) ?></title>
frontend/themes/materialize/views/layouts/main.v0.php:        <?php $this->head() ?>
frontend/themes/materialize/views/layouts/main.v0.php:    <?php $this->beginBody() ?>
frontend/themes/materialize/views/layouts/main.v0.php:                    'links' => isset($this->params['breadcrumbs']) ? $this->params['breadcrumbs'] : [],
frontend/themes/materialize/views/layouts/main.v0.php:    <?php $this->endBody() ?>
frontend/themes/materialize/views/layouts/main.v0.php:<?php $this->endPage() ?>
home/feedback/frontend/views/entry/2director.php:$this->title = '局长来信';
home/feedback/frontend/views/entry/2director.php:$this->params['breadcrumbs'][] = ['label' => '信件列表', 'url' => ['index']];
home/feedback/frontend/views/entry/2director.php:$this->params['breadcrumbs'][] = $this->title;
home/feedback/frontend/views/entry/2director.php:    <h1><?php // Html::encode($this->title) ?></h1>
home/feedback/frontend/views/entry/2director.php:    <?= $this->render('_form', [
home/feedback/backend/views/entry/view.php:$this->title = $model->subject;
home/feedback/backend/views/entry/view.php:$this->params['breadcrumbs'][] = ['label' => '信件列表', 'url' => ['index']];
home/feedback/backend/views/entry/view.php:$this->params['breadcrumbs'][] = $this->title;
home/feedback/backend/views/entry/view.php:    <h1><?= Html::encode($this->title) ?></h1>
home/feedback/frontend/views/entry/create.php:$this->title = '创建反馈';
home/feedback/frontend/views/entry/create.php:$this->params['breadcrumbs'][] = ['label' => '信件列表', 'url' => ['index']];
home/feedback/frontend/views/entry/create.php:$this->params['breadcrumbs'][] = $this->title;
home/feedback/frontend/views/entry/create.php:    <h1><?php // Html::encode($this->title) ?></h1>
home/feedback/frontend/views/entry/create.php:    <?= $this->render('_form', [
